state	receive		action		state/(nontermainalID,subID):
72			!		1			unary-operator	199
72			&		1			unary-operator	199
72			(		1			unary-operator	199
72			*		1			unary-operator	199
72			+		1			unary-operator	199
72			++		1			unary-operator	199
72			-		1			unary-operator	199
72			--		1			unary-operator	199
72	character-constant		1	unary-operator	199
72	enumeration-constant		1	unary-operator	199
72	floating-constant		1	unary-operator	199
72	identifier		1	unary-operator	199
72	integer-constant		1	unary-operator	199
72	sizeof		1	unary-operator	199
72	string-constant		1	unary-operator	199
72	~		1	unary-operator	199

200	!		1	assignment-operator	150
200	&		1	assignment-operator	150
200	(		1	assignment-operator	150
200	*		1	assignment-operator	150
200	+		1	assignment-operator	150
200	++		1	assignment-operator	150
200	-		1	assignment-operator	150
200	--		1	assignment-operator	150
200	character-constant		1	assignment-operator	150
200	enumeration-constant		1	assignment-operator	150
200	floating-constant		1	assignment-operator	150
200	identifier		1	assignment-operator	150
200	integer-constant		1	assignment-operator	150
200	sizeof		1	assignment-operator	150
200	string-constant		1	assignment-operator	150
200	~		1	assignment-operator	150

328	(		0	1
328	*		0	2
328	:		0	291
328	identifier		0	15


81	!		1	constant	216
81	!=		1	constant	216
81	%		1	constant	216
81	%=		1	constant	216
81	&		1	constant	216
81	&&		1	constant	216
81	&=		1	constant	216
81	(		1	constant	216
81	)		1	constant	216
81	*		1	constant	216
81	*=		1	constant	216
81	+		1	constant	216
81	++		1	constant	216
81	+=		1	constant	216
81	,		1	constant	216
81	-		1	constant	216
81	--		1	constant	216
81	-=		1	constant	216
81	->		1	constant	216
81	.		1	constant	216
81	/		1	constant	216
81	/=		1	constant	216
81	:		1	constant	216
81	;		1	constant	216
81	<		1	constant	216
81	<<		1	constant	216
81	<<=		1	constant	216
81	<=		1	constant	216
81	=		1	constant	216
81	==		1	constant	216
81	>		1	constant	216
81	>=		1	constant	216
81	>>		1	constant	216
81	>>=		1	constant	216
81	?		1	constant	216
81	[		1	constant	216
81	]		1	constant	216
81	^		1	constant	216
81	^=		1	constant	216
81	_KULV_END_		1	constant	216
81	auto		1	constant	216
81	break		1	constant	216
81	case		1	constant	216
81	char		1	constant	216
81	character-constant		1	constant	216
81	const		1	constant	216
81	continue		1	constant	216
81	default		1	constant	216
81	do		1	constant	216
81	double		1	constant	216
81	else		1	constant	216
81	enum		1	constant	216
81	enumeration-constant		1	constant	216
81	extern		1	constant	216
81	float		1	constant	216
81	floating-constant		1	constant	216
81	for		1	constant	216
81	goto		1	constant	216
81	identifier		1	constant	216
81	if		1	constant	216
81	int		1	constant	216
81	integer-constant		1	constant	216
81	long		1	constant	216
81	register		1	constant	216
81	return		1	constant	216
81	short		1	constant	216
81	signed		1	constant	216
81	sizeof		1	constant	216
81	static		1	constant	216
81	string-constant		1	constant	216
81	switch		1	constant	216
81	typedef		1	constant	216
81	unsigned		1	constant	216
81	void		1	constant	216
81	volatile		1	constant	216
81	while		1	constant	216
81	{		1	constant	216
81	|		1	constant	216
81	|=		1	constant	216
81	||		1	constant	216
81	}		1	constant	216
81	~		1	constant	216


209	!		1	unary-expression	193
209	!=		1	unary-expression	193
209	%		1	unary-expression	193
209	%=		1	unary-expression	193
209	&		1	unary-expression	193
209	&&		1	unary-expression	193
209	&=		1	unary-expression	193
209	(		1	unary-expression	193
209	)		1	unary-expression	193
209	*		1	unary-expression	193
209	*=		1	unary-expression	193
209	+		1	unary-expression	193
209	++		1	unary-expression	193
209	+=		1	unary-expression	193
209	,		1	unary-expression	193
209	-		1	unary-expression	193
209	--		1	unary-expression	193
209	-=		1	unary-expression	193
209	->		1	unary-expression	193
209	.		1	unary-expression	193
209	/		1	unary-expression	193
209	/=		1	unary-expression	193
209	:		1	unary-expression	193
209	;		1	unary-expression	193
209	<		1	unary-expression	193
209	<<		1	unary-expression	193
209	<<=		1	unary-expression	193
209	<=		1	unary-expression	193
209	=		1	unary-expression	193
209	==		1	unary-expression	193
209	>		1	unary-expression	193
209	>=		1	unary-expression	193
209	>>		1	unary-expression	193
209	>>=		1	unary-expression	193
209	?		1	unary-expression	193
209	[		1	unary-expression	193
209	]		1	unary-expression	193
209	^		1	unary-expression	193
209	^=		1	unary-expression	193
209	_KULV_END_		1	unary-expression	193
209	auto		1	unary-expression	193
209	break		1	unary-expression	193
209	case		1	unary-expression	193
209	char		1	unary-expression	193
209	character-constant		1	unary-expression	193
209	const		1	unary-expression	193
209	continue		1	unary-expression	193
209	default		1	unary-expression	193
209	do		1	unary-expression	193
209	double		1	unary-expression	193
209	else		1	unary-expression	193
209	enum		1	unary-expression	193
209	enumeration-constant		1	unary-expression	193
209	extern		1	unary-expression	193
209	float		1	unary-expression	193
209	floating-constant		1	unary-expression	193
209	for		1	unary-expression	193
209	goto		1	unary-expression	193
209	identifier		1	unary-expression	193
209	if		1	unary-expression	193
209	int		1	unary-expression	193
209	integer-constant		1	unary-expression	193
209	long		1	unary-expression	193
209	register		1	unary-expression	193
209	return		1	unary-expression	193
209	short		1	unary-expression	193
209	signed		1	unary-expression	193
209	sizeof		1	unary-expression	193
209	static		1	unary-expression	193
209	string-constant		1	unary-expression	193
209	switch		1	unary-expression	193
209	typedef		1	unary-expression	193
209	unsigned		1	unary-expression	193
209	void		1	unary-expression	193
209	volatile		1	unary-expression	193
209	while		1	unary-expression	193
209	{		1	unary-expression	193
209	|		1	unary-expression	193
209	|=		1	unary-expression	193
209	||		1	unary-expression	193
209	}		1	unary-expression	193
209	~		1	unary-expression	193


337	!		0	66
337	&		0	67
337	(		0	68
337	)		0	356
337	*		0	69
337	+		0	70
337	++		0	71
337	-		0	72
337	--		0	73
337	character-constant		0	81
337	enumeration-constant		0	89
337	floating-constant		0	94
337	identifier		0	133
337	integer-constant		0	100
337	sizeof		0	113
337	string-constant		0	116
337	~		0	122
58	auto		0	3
58	char		0	4
58	const		0	5
58	double		0	10
58	extern		0	11
58	float		0	13
58	int		0	16
58	long		0	17
58	register		0	19
58	short		0	20
58	signed		0	21
58	static		0	22
58	typedef		0	27
58	unsigned		0	28
58	void		0	29
58	volatile		0	30
58	{		0	43
186	!		0	66
186	&		0	67
186	(		0	68
186	*		0	69
186	+		0	70
186	++		0	71
186	-		0	72
186	--		0	73
186	character-constant		0	81
186	enumeration-constant		0	89
186	floating-constant		0	94
186	identifier		0	133
186	integer-constant		0	100
186	sizeof		0	113
186	string-constant		0	116
186	~		0	122


314	!		1	unary-expression	195
314	!=		1	unary-expression	195
314	%		1	unary-expression	195
314	%=		1	unary-expression	195
314	&		1	unary-expression	195
314	&&		1	unary-expression	195
314	&=		1	unary-expression	195
314	(		1	unary-expression	195
314	)		1	unary-expression	195
314	*		1	unary-expression	195
314	*=		1	unary-expression	195
314	+		1	unary-expression	195
314	++		1	unary-expression	195
314	+=		1	unary-expression	195
314	,		1	unary-expression	195
314	-		1	unary-expression	195
314	--		1	unary-expression	195
314	-=		1	unary-expression	195
314	->		1	unary-expression	195
314	.		1	unary-expression	195
314	/		1	unary-expression	195
314	/=		1	unary-expression	195
314	:		1	unary-expression	195
314	;		1	unary-expression	195
314	<		1	unary-expression	195
314	<<		1	unary-expression	195
314	<<=		1	unary-expression	195
314	<=		1	unary-expression	195
314	=		1	unary-expression	195
314	==		1	unary-expression	195
314	>		1	unary-expression	195
314	>=		1	unary-expression	195
314	>>		1	unary-expression	195
314	>>=		1	unary-expression	195
314	?		1	unary-expression	195
314	[		1	unary-expression	195
314	]		1	unary-expression	195
314	^		1	unary-expression	195
314	^=		1	unary-expression	195
314	_KULV_END_		1	unary-expression	195
314	auto		1	unary-expression	195
314	break		1	unary-expression	195
314	case		1	unary-expression	195
314	char		1	unary-expression	195
314	character-constant		1	unary-expression	195
314	const		1	unary-expression	195
314	continue		1	unary-expression	195
314	default		1	unary-expression	195
314	do		1	unary-expression	195
314	double		1	unary-expression	195
314	else		1	unary-expression	195
314	enum		1	unary-expression	195
314	enumeration-constant		1	unary-expression	195
314	extern		1	unary-expression	195
314	float		1	unary-expression	195
314	floating-constant		1	unary-expression	195
314	for		1	unary-expression	195
314	goto		1	unary-expression	195
314	identifier		1	unary-expression	195
314	if		1	unary-expression	195
314	int		1	unary-expression	195
314	integer-constant		1	unary-expression	195
314	long		1	unary-expression	195
314	register		1	unary-expression	195
314	return		1	unary-expression	195
314	short		1	unary-expression	195
314	signed		1	unary-expression	195
314	sizeof		1	unary-expression	195
314	static		1	unary-expression	195
314	string-constant		1	unary-expression	195
314	switch		1	unary-expression	195
314	typedef		1	unary-expression	195
314	unsigned		1	unary-expression	195
314	void		1	unary-expression	195
314	volatile		1	unary-expression	195
314	while		1	unary-expression	195
314	{		1	unary-expression	195
314	|		1	unary-expression	195
314	|=		1	unary-expression	195
314	||		1	unary-expression	195
314	}		1	unary-expression	195
314	~		1	unary-expression	195

3	(		1	storage-class-specifier	19
3	)		1	storage-class-specifier	19
3	*		1	storage-class-specifier	19
3	,		1	storage-class-specifier	19
3	;		1	storage-class-specifier	19
3	[		1	storage-class-specifier	19
3	auto		1	storage-class-specifier	19
3	char		1	storage-class-specifier	19
3	const		1	storage-class-specifier	19
3	double		1	storage-class-specifier	19
3	extern		1	storage-class-specifier	19
3	float		1	storage-class-specifier	19
3	identifier		1	storage-class-specifier	19
3	int		1	storage-class-specifier	19
3	long		1	storage-class-specifier	19
3	register		1	storage-class-specifier	19
3	short		1	storage-class-specifier	19
3	signed		1	storage-class-specifier	19
3	static		1	storage-class-specifier	19
3	typedef		1	storage-class-specifier	19
3	unsigned		1	storage-class-specifier	19
3	void		1	storage-class-specifier	19
3	volatile		1	storage-class-specifier	19

131	!		1	direct-declarator	67
131	%=		1	direct-declarator	67
131	&		1	direct-declarator	67
131	&=		1	direct-declarator	67
131	(		1	direct-declarator	67
131	)		1	direct-declarator	67
131	*		1	direct-declarator	67
131	*=		1	direct-declarator	67
131	+		1	direct-declarator	67
131	++		1	direct-declarator	67
131	+=		1	direct-declarator	67
131	,		1	direct-declarator	67
131	-		1	direct-declarator	67
131	--		1	direct-declarator	67
131	-=		1	direct-declarator	67
131	/=		1	direct-declarator	67
131	:		1	direct-declarator	67
131	;		1	direct-declarator	67
131	<<=		1	direct-declarator	67
131	=		1	direct-declarator	67
131	>>=		1	direct-declarator	67
131	[		1	direct-declarator	67
131	^=		1	direct-declarator	67
131	_KULV_END_		1	direct-declarator	67
131	auto		1	direct-declarator	67
131	break		1	direct-declarator	67
131	case		1	direct-declarator	67
131	char		1	direct-declarator	67
131	character-constant		1	direct-declarator	67
131	const		1	direct-declarator	67
131	continue		1	direct-declarator	67
131	default		1	direct-declarator	67
131	do		1	direct-declarator	67
131	double		1	direct-declarator	67
131	else		1	direct-declarator	67
131	enum		1	direct-declarator	67
131	enumeration-constant		1	direct-declarator	67
131	extern		1	direct-declarator	67
131	float		1	direct-declarator	67
131	floating-constant		1	direct-declarator	67
131	for		1	direct-declarator	67
131	goto		1	direct-declarator	67
131	identifier		1	direct-declarator	67
131	if		1	direct-declarator	67
131	int		1	direct-declarator	67
131	integer-constant		1	direct-declarator	67
131	long		1	direct-declarator	67
131	register		1	direct-declarator	67
131	return		1	direct-declarator	67
131	short		1	direct-declarator	67
131	signed		1	direct-declarator	67
131	sizeof		1	direct-declarator	67
131	static		1	direct-declarator	67
131	string-constant		1	direct-declarator	67
131	switch		1	direct-declarator	67
131	typedef		1	direct-declarator	67
131	unsigned		1	direct-declarator	67
131	void		1	direct-declarator	67
131	volatile		1	direct-declarator	67
131	while		1	direct-declarator	67
131	{		1	direct-declarator	67
131	|=		1	direct-declarator	67
131	}		1	direct-declarator	67
131	~		1	direct-declarator	67



259	!		1	multiplicative-expression	187
259	!=		1	multiplicative-expression	187
259	%		1	multiplicative-expression	187
259	%=		1	multiplicative-expression	187
259	&		1	multiplicative-expression	187
259	&&		1	multiplicative-expression	187
259	&=		1	multiplicative-expression	187
259	(		1	multiplicative-expression	187
259	)		1	multiplicative-expression	187
259	*		1	multiplicative-expression	187
259	*=		1	multiplicative-expression	187
259	+		1	multiplicative-expression	187
259	++		1	multiplicative-expression	187
259	+=		1	multiplicative-expression	187
259	,		1	multiplicative-expression	187
259	-		1	multiplicative-expression	187
259	--		1	multiplicative-expression	187
259	-=		1	multiplicative-expression	187
259	->		1	multiplicative-expression	187
259	.		1	multiplicative-expression	187
259	/		1	multiplicative-expression	187
259	/=		1	multiplicative-expression	187
259	:		1	multiplicative-expression	187
259	;		1	multiplicative-expression	187
259	<		1	multiplicative-expression	187
259	<<		1	multiplicative-expression	187
259	<<=		1	multiplicative-expression	187
259	<=		1	multiplicative-expression	187
259	=		1	multiplicative-expression	187
259	==		1	multiplicative-expression	187
259	>		1	multiplicative-expression	187
259	>=		1	multiplicative-expression	187
259	>>		1	multiplicative-expression	187
259	>>=		1	multiplicative-expression	187
259	?		1	multiplicative-expression	187
259	[		1	multiplicative-expression	187
259	]		1	multiplicative-expression	187
259	^		1	multiplicative-expression	187
259	^=		1	multiplicative-expression	187
259	_KULV_END_		1	multiplicative-expression	187
259	auto		1	multiplicative-expression	187
259	break		1	multiplicative-expression	187
259	case		1	multiplicative-expression	187
259	char		1	multiplicative-expression	187
259	character-constant		1	multiplicative-expression	187
259	const		1	multiplicative-expression	187
259	continue		1	multiplicative-expression	187
259	default		1	multiplicative-expression	187
259	do		1	multiplicative-expression	187
259	double		1	multiplicative-expression	187
259	else		1	multiplicative-expression	187
259	enum		1	multiplicative-expression	187
259	enumeration-constant		1	multiplicative-expression	187
259	extern		1	multiplicative-expression	187
259	float		1	multiplicative-expression	187
259	floating-constant		1	multiplicative-expression	187
259	for		1	multiplicative-expression	187
259	goto		1	multiplicative-expression	187
259	identifier		1	multiplicative-expression	187
259	if		1	multiplicative-expression	187
259	int		1	multiplicative-expression	187
259	integer-constant		1	multiplicative-expression	187
259	long		1	multiplicative-expression	187
259	register		1	multiplicative-expression	187
259	return		1	multiplicative-expression	187
259	short		1	multiplicative-expression	187
259	signed		1	multiplicative-expression	187
259	sizeof		1	multiplicative-expression	187
259	static		1	multiplicative-expression	187
259	string-constant		1	multiplicative-expression	187
259	switch		1	multiplicative-expression	187
259	typedef		1	multiplicative-expression	187
259	unsigned		1	multiplicative-expression	187
259	void		1	multiplicative-expression	187
259	volatile		1	multiplicative-expression	187
259	while		1	multiplicative-expression	187
259	{		1	multiplicative-expression	187
259	|		1	multiplicative-expression	187
259	|=		1	multiplicative-expression	187
259	||		1	multiplicative-expression	187
259	}		1	multiplicative-expression	187
259	~		1	multiplicative-expression	187


108	!		1	postfix-expression	202
108	!=		1	postfix-expression	202
108	%		1	postfix-expression	202
108	%=		1	postfix-expression	202
108	&		1	postfix-expression	202
108	&&		1	postfix-expression	202
108	&=		1	postfix-expression	202
108	(		1	postfix-expression	202
108	)		1	postfix-expression	202
108	*		1	postfix-expression	202
108	*=		1	postfix-expression	202
108	+		1	postfix-expression	202
108	++		1	postfix-expression	202
108	+=		1	postfix-expression	202
108	,		1	postfix-expression	202
108	-		1	postfix-expression	202
108	--		1	postfix-expression	202
108	-=		1	postfix-expression	202
108	->		1	postfix-expression	202
108	.		1	postfix-expression	202
108	/		1	postfix-expression	202
108	/=		1	postfix-expression	202
108	:		1	postfix-expression	202
108	;		1	postfix-expression	202
108	<		1	postfix-expression	202
108	<<		1	postfix-expression	202
108	<<=		1	postfix-expression	202
108	<=		1	postfix-expression	202
108	=		1	postfix-expression	202
108	==		1	postfix-expression	202
108	>		1	postfix-expression	202
108	>=		1	postfix-expression	202
108	>>		1	postfix-expression	202
108	>>=		1	postfix-expression	202
108	?		1	postfix-expression	202
108	[		1	postfix-expression	202
108	]		1	postfix-expression	202
108	^		1	postfix-expression	202
108	^=		1	postfix-expression	202
108	_KULV_END_		1	postfix-expression	202
108	auto		1	postfix-expression	202
108	break		1	postfix-expression	202
108	case		1	postfix-expression	202
108	char		1	postfix-expression	202
108	character-constant		1	postfix-expression	202
108	const		1	postfix-expression	202
108	continue		1	postfix-expression	202
108	default		1	postfix-expression	202
108	do		1	postfix-expression	202
108	double		1	postfix-expression	202
108	else		1	postfix-expression	202
108	enum		1	postfix-expression	202
108	enumeration-constant		1	postfix-expression	202
108	extern		1	postfix-expression	202
108	float		1	postfix-expression	202
108	floating-constant		1	postfix-expression	202
108	for		1	postfix-expression	202
108	goto		1	postfix-expression	202
108	identifier		1	postfix-expression	202
108	if		1	postfix-expression	202
108	int		1	postfix-expression	202
108	integer-constant		1	postfix-expression	202
108	long		1	postfix-expression	202
108	register		1	postfix-expression	202
108	return		1	postfix-expression	202
108	short		1	postfix-expression	202
108	signed		1	postfix-expression	202
108	sizeof		1	postfix-expression	202
108	static		1	postfix-expression	202
108	string-constant		1	postfix-expression	202
108	switch		1	postfix-expression	202
108	typedef		1	postfix-expression	202
108	unsigned		1	postfix-expression	202
108	void		1	postfix-expression	202
108	volatile		1	postfix-expression	202
108	while		1	postfix-expression	202
108	{		1	postfix-expression	202
108	|		1	postfix-expression	202
108	|=		1	postfix-expression	202
108	||		1	postfix-expression	202
108	}		1	postfix-expression	202
108	~		1	postfix-expression	202


236	)		1	type-name	93

364	!		0	66
364	&		0	67
364	(		0	68
364	*		0	69
364	+		0	70
364	++		0	71
364	-		0	72
364	--		0	73
364	;		0	74
364	break		0	78
364	case		0	79
364	character-constant		0	81
364	continue		0	85
364	default		0	87
364	do		0	88
364	enumeration-constant		0	89
364	floating-constant		0	94
364	for		0	95
364	goto		0	96
364	identifier		0	97
364	if		0	98
364	integer-constant		0	100
364	return		0	110
364	sizeof		0	113
364	string-constant		0	116
364	switch		0	117
364	while		0	120
364	{		0	43
364	~		0	122
117	(		0	196
245	(		0	305


373	!		1	iteration-statement 134
373	%=		1	iteration-statement 134
373	&		1	iteration-statement 134
373	&=		1	iteration-statement 134
373	(		1	iteration-statement 134
373	)		1	iteration-statement 134
373	*		1	iteration-statement 134
373	*=		1	iteration-statement 134
373	+		1	iteration-statement 134
373	++		1	iteration-statement 134
373	+=		1	iteration-statement 134
373	,		1	iteration-statement 134
373	-		1	iteration-statement 134
373	--		1	iteration-statement 134
373	-=		1	iteration-statement 134
373	/=		1	iteration-statement 134
373	;		1	iteration-statement 134
373	<<=		1	iteration-statement 134
373	=		1	iteration-statement 134
373	>>=		1	iteration-statement 134
373	^=		1	iteration-statement 134
373	_KULV_END_		1	iteration-statement 134
373	auto		1	iteration-statement 134
373	break		1	iteration-statement 134
373	case		1	iteration-statement 134
373	char		1	iteration-statement 134
373	character-constant		1	iteration-statement 134
373	const		1	iteration-statement 134
373	continue		1	iteration-statement 134
373	default		1	iteration-statement 134
373	do		1	iteration-statement 134
373	double		1	iteration-statement 134
373	else		1	iteration-statement 134
373	enumeration-constant		1	iteration-statement 134
373	extern		1	iteration-statement 134
373	float		1	iteration-statement 134
373	floating-constant		1	iteration-statement 134
373	for		1	iteration-statement 134
373	goto		1	iteration-statement 134
373	identifier		1	iteration-statement 134
373	if		1	iteration-statement 134
373	int		1	iteration-statement 134
373	integer-constant		1	iteration-statement 134
373	long		1	iteration-statement 134
373	register		1	iteration-statement 134
373	return		1	iteration-statement 134
373	short		1	iteration-statement 134
373	signed		1	iteration-statement 134
373	sizeof		1	iteration-statement 134
373	static		1	iteration-statement 134
373	string-constant		1	iteration-statement 134
373	switch		1	iteration-statement 134
373	typedef		1	iteration-statement 134
373	unsigned		1	iteration-statement 134
373	void		1	iteration-statement 134
373	volatile		1	iteration-statement 134
373	while		1	iteration-statement 134
373	{		1	iteration-statement 134
373	|=		1	iteration-statement 134
373	}		1	iteration-statement 134
373	~		1	iteration-statement 134

94	!		1	constant	217
94	!=		1	constant	217
94	%		1	constant	217
94	%=		1	constant	217
94	&		1	constant	217
94	&&		1	constant	217
94	&=		1	constant	217
94	(		1	constant	217
94	)		1	constant	217
94	*		1	constant	217
94	*=		1	constant	217
94	+		1	constant	217
94	++		1	constant	217
94	+=		1	constant	217
94	,		1	constant	217
94	-		1	constant	217
94	--		1	constant	217
94	-=		1	constant	217
94	->		1	constant	217
94	.		1	constant	217
94	/		1	constant	217
94	/=		1	constant	217
94	:		1	constant	217
94	;		1	constant	217
94	<		1	constant	217
94	<<		1	constant	217
94	<<=		1	constant	217
94	<=		1	constant	217
94	=		1	constant	217
94	==		1	constant	217
94	>		1	constant	217
94	>=		1	constant	217
94	>>		1	constant	217
94	>>=		1	constant	217
94	?		1	constant	217
94	[		1	constant	217
94	]		1	constant	217
94	^		1	constant	217
94	^=		1	constant	217
94	_KULV_END_		1	constant	217
94	auto		1	constant	217
94	break		1	constant	217
94	case		1	constant	217
94	char		1	constant	217
94	character-constant		1	constant	217
94	const		1	constant	217
94	continue		1	constant	217
94	default		1	constant	217
94	do		1	constant	217
94	double		1	constant	217
94	else		1	constant	217
94	enum		1	constant	217
94	enumeration-constant		1	constant	217
94	extern		1	constant	217
94	float		1	constant	217
94	floating-constant		1	constant	217
94	for		1	constant	217
94	goto		1	constant	217
94	identifier		1	constant	217
94	if		1	constant	217
94	int		1	constant	217
94	integer-constant		1	constant	217
94	long		1	constant	217
94	register		1	constant	217
94	return		1	constant	217
94	short		1	constant	217
94	signed		1	constant	217
94	sizeof		1	constant	217
94	static		1	constant	217
94	string-constant		1	constant	217
94	switch		1	constant	217
94	typedef		1	constant	217
94	unsigned		1	constant	217
94	void		1	constant	217
94	volatile		1	constant	217
94	while		1	constant	217
94	{		1	constant	217
94	|		1	constant	217
94	|=		1	constant	217
94	||		1	constant	217
94	}		1	constant	217
94	~		1	constant	217

222	char		0	4
222	const		0	5
222	double		0	10
222	float		0	13
222	int		0	16
222	long		0	17
222	short		0	20
222	signed		0	21
222	unsigned		0	28
222	void		0	29
222	volatile		0	30

350	,		1	enum-specifier	57
350	identifier		1	enum-specifier	57
350	}		1	enum-specifier	57


39	!		1	declaration-list	11
39	&		1	declaration-list	11
39	(		1	declaration-list	11
39	*		1	declaration-list	11
39	+		1	declaration-list	11
39	++		1	declaration-list	11
39	-		1	declaration-list	11
39	--		1	declaration-list	11
39	;		1	declaration-list	11
39	auto		1	declaration-list	11
39	break		1	declaration-list	11
39	case		1	declaration-list	11
39	char		1	declaration-list	11
39	character-constant		1	declaration-list	11
39	const		1	declaration-list	11
39	continue		1	declaration-list	11
39	default		1	declaration-list	11
39	do		1	declaration-list	11
39	double		1	declaration-list	11
39	enumeration-constant		1	declaration-list	11
39	extern		1	declaration-list	11
39	float		1	declaration-list	11
39	floating-constant		1	declaration-list	11
39	for		1	declaration-list	11
39	goto		1	declaration-list	11
39	identifier		1	declaration-list	11
39	if		1	declaration-list	11
39	int		1	declaration-list	11
39	integer-constant		1	declaration-list	11
39	long		1	declaration-list	11
39	register		1	declaration-list	11
39	return		1	declaration-list	11
39	short		1	declaration-list	11
39	signed		1	declaration-list	11
39	sizeof		1	declaration-list	11
39	static		1	declaration-list	11
39	string-constant		1	declaration-list	11
39	switch		1	declaration-list	11
39	typedef		1	declaration-list	11
39	unsigned		1	declaration-list	11
39	void		1	declaration-list	11
39	volatile		1	declaration-list	11
39	while		1	declaration-list	11
39	{		1	declaration-list	11
39	}		1	declaration-list	11
39	~		1	declaration-list	11
167	!		0	66
167	&		0	67
167	(		0	68
167	*		0	69
167	+		0	70
167	++		0	71
167	-		0	72
167	--		0	73
167	;		0	251
167	character-constant		0	81
167	enumeration-constant		0	89
167	floating-constant		0	94
167	identifier		0	133
167	integer-constant		0	100
167	sizeof		0	113
167	string-constant		0	116
167	~		0	122

295	char		1	struct-declaration-list	41
295	const		1	struct-declaration-list	41
295	double		1	struct-declaration-list	41
295	enum		1	struct-declaration-list	41
295	float		1	struct-declaration-list	41
295	int		1	struct-declaration-list	41
295	long		1	struct-declaration-list	41
295	short		1	struct-declaration-list	41
295	signed		1	struct-declaration-list	41
295	unsigned		1	struct-declaration-list	41
295	void		1	struct-declaration-list	41
295	volatile		1	struct-declaration-list	41
295	}		1	struct-declaration-list	41


48	(		1	translation-unit 2
48	*		1	translation-unit 2
48	_KULV_END_		1	translation-unit 2
48	auto		1	translation-unit 2
48	char		1	translation-unit 2
48	const		1	translation-unit 2
48	double		1	translation-unit 2
48	extern		1	translation-unit 2
48	float		1	translation-unit 2
48	identifier		1	translation-unit 2
48	int		1	translation-unit 2
48	long		1	translation-unit 2
48	register		1	translation-unit 2
48	short		1	translation-unit 2
48	signed		1	translation-unit 2
48	static		1	translation-unit 2
48	typedef		1	translation-unit 2
48	unsigned		1	translation-unit 2
48	void		1	translation-unit 2
48	volatile		1	translation-unit 2


176	!		0	66
176	&		0	67
176	(		0	68
176	*		0	69
176	+		0	70
176	++		0	71
176	-		0	72
176	--		0	73
176	character-constant		0	81
176	enumeration-constant		0	89
176	floating-constant		0	94
176	identifier		0	133
176	integer-constant		0	100
176	sizeof		0	113
176	string-constant		0	116
176	~		0	122


304	!		1	labeled-statement 114
304	%=		1	labeled-statement 114
304	&		1	labeled-statement 114
304	&=		1	labeled-statement 114
304	(		1	labeled-statement 114
304	)		1	labeled-statement 114
304	*		1	labeled-statement 114
304	*=		1	labeled-statement 114
304	+		1	labeled-statement 114
304	++		1	labeled-statement 114
304	+=		1	labeled-statement 114
304	,		1	labeled-statement 114
304	-		1	labeled-statement 114
304	--		1	labeled-statement 114
304	-=		1	labeled-statement 114
304	/=		1	labeled-statement 114
304	;		1	labeled-statement 114
304	<<=		1	labeled-statement 114
304	=		1	labeled-statement 114
304	>>=		1	labeled-statement 114
304	^=		1	labeled-statement 114
304	_KULV_END_		1	labeled-statement 114
304	auto		1	labeled-statement 114
304	break		1	labeled-statement 114
304	case		1	labeled-statement 114
304	char		1	labeled-statement 114
304	character-constant		1	labeled-statement 114
304	const		1	labeled-statement 114
304	continue		1	labeled-statement 114
304	default		1	labeled-statement 114
304	do		1	labeled-statement 114
304	double		1	labeled-statement 114
304	else		1	labeled-statement 114
304	enumeration-constant		1	labeled-statement 114
304	extern		1	labeled-statement 114
304	float		1	labeled-statement 114
304	floating-constant		1	labeled-statement 114
304	for		1	labeled-statement 114
304	goto		1	labeled-statement 114
304	identifier		1	labeled-statement 114
304	if		1	labeled-statement 114
304	int		1	labeled-statement 114
304	integer-constant		1	labeled-statement 114
304	long		1	labeled-statement 114
304	register		1	labeled-statement 114
304	return		1	labeled-statement 114
304	short		1	labeled-statement 114
304	signed		1	labeled-statement 114
304	sizeof		1	labeled-statement 114
304	static		1	labeled-statement 114
304	string-constant		1	labeled-statement 114
304	switch		1	labeled-statement 114
304	typedef		1	labeled-statement 114
304	unsigned		1	labeled-statement 114
304	void		1	labeled-statement 114
304	volatile		1	labeled-statement 114
304	while		1	labeled-statement 114
304	{		1	labeled-statement 114
304	|=		1	labeled-statement 114
304	}		1	labeled-statement 114
304	~		1	labeled-statement 114

25	(		1	declaration-specifiers	17
25	)		1	declaration-specifiers	17
25	*		1	declaration-specifiers	17
25	,		1	declaration-specifiers	17
25	;		1	declaration-specifiers	17
25	[		1	declaration-specifiers	17
25	identifier		1	declaration-specifiers	17
25	auto		0	3
25	char		0	4
25	const		0	5
25	double		0	10
25	extern		0	11
25	float		0	13
25	int		0	16
25	long		0	17
25	register		0	19
25	short		0	20
25	signed		0	21
25	static		0	22
25	typedef		0	27
25	unsigned		0	28
25	void		0	29
25	volatile		0	30

153	!		0	66
153	&		0	67
153	(		0	68
153	*		0	69
153	+		0	70
153	++		0	71
153	-		0	72
153	--		0	73
153	character-constant		0	81
153	enumeration-constant		0	89
153	floating-constant		0	94
153	identifier		0	133
153	integer-constant		0	100
153	sizeof		0	113
153	string-constant		0	116
153	~		0	122


281	)		0	318


98	(		0	170


226	identifier		1	enum-specifier	58
226	{		0	297


354	!		0	66
354	&		0	67
354	(		0	68
354	)		0	364
354	*		0	69
354	+		0	70
354	++		0	71
354	-		0	72
354	--		0	73
354	character-constant		0	81
354	enumeration-constant		0	89
354	floating-constant		0	94
354	identifier		0	133
354	integer-constant		0	100
354	sizeof		0	113
354	string-constant		0	116
354	~		0	122

75	!		1	exclusive-OR-expression	166
75	!=		1	exclusive-OR-expression	166
75	%		1	exclusive-OR-expression	166
75	%=		1	exclusive-OR-expression	166
75	&		0	152
75	&&		1	exclusive-OR-expression	166
75	&=		1	exclusive-OR-expression	166
75	(		1	exclusive-OR-expression	166
75	)		1	exclusive-OR-expression	166
75	*		1	exclusive-OR-expression	166
75	*=		1	exclusive-OR-expression	166
75	+		1	exclusive-OR-expression	166
75	++		1	exclusive-OR-expression	166
75	+=		1	exclusive-OR-expression	166
75	,		1	exclusive-OR-expression	166
75	-		1	exclusive-OR-expression	166
75	--		1	exclusive-OR-expression	166
75	-=		1	exclusive-OR-expression	166
75	->		1	exclusive-OR-expression	166
75	.		1	exclusive-OR-expression	166
75	/		1	exclusive-OR-expression	166
75	/=		1	exclusive-OR-expression	166
75	:		1	exclusive-OR-expression	166
75	;		1	exclusive-OR-expression	166
75	<		1	exclusive-OR-expression	166
75	<<		1	exclusive-OR-expression	166
75	<<=		1	exclusive-OR-expression	166
75	<=		1	exclusive-OR-expression	166
75	=		1	exclusive-OR-expression	166
75	==		1	exclusive-OR-expression	166
75	>		1	exclusive-OR-expression	166
75	>=		1	exclusive-OR-expression	166
75	>>		1	exclusive-OR-expression	166
75	>>=		1	exclusive-OR-expression	166
75	?		1	exclusive-OR-expression	166
75	[		1	exclusive-OR-expression	166
75	]		1	exclusive-OR-expression	166
75	^		1	exclusive-OR-expression	166
75	^=		1	exclusive-OR-expression	166
75	_KULV_END_		1	exclusive-OR-expression	166
75	auto		1	exclusive-OR-expression	166
75	break		1	exclusive-OR-expression	166
75	case		1	exclusive-OR-expression	166
75	char		1	exclusive-OR-expression	166
75	character-constant		1	exclusive-OR-expression	166
75	const		1	exclusive-OR-expression	166
75	continue		1	exclusive-OR-expression	166
75	default		1	exclusive-OR-expression	166
75	do		1	exclusive-OR-expression	166
75	double		1	exclusive-OR-expression	166
75	else		1	exclusive-OR-expression	166
75	enum		1	exclusive-OR-expression	166
75	enumeration-constant		1	exclusive-OR-expression	166
75	extern		1	exclusive-OR-expression	166
75	float		1	exclusive-OR-expression	166
75	floating-constant		1	exclusive-OR-expression	166
75	for		1	exclusive-OR-expression	166
75	goto		1	exclusive-OR-expression	166
75	identifier		1	exclusive-OR-expression	166
75	if		1	exclusive-OR-expression	166
75	int		1	exclusive-OR-expression	166
75	integer-constant		1	exclusive-OR-expression	166
75	long		1	exclusive-OR-expression	166
75	register		1	exclusive-OR-expression	166
75	return		1	exclusive-OR-expression	166
75	short		1	exclusive-OR-expression	166
75	signed		1	exclusive-OR-expression	166
75	sizeof		1	exclusive-OR-expression	166
75	static		1	exclusive-OR-expression	166
75	string-constant		1	exclusive-OR-expression	166
75	switch		1	exclusive-OR-expression	166
75	typedef		1	exclusive-OR-expression	166
75	unsigned		1	exclusive-OR-expression	166
75	void		1	exclusive-OR-expression	166
75	volatile		1	exclusive-OR-expression	166
75	while		1	exclusive-OR-expression	166
75	{		1	exclusive-OR-expression	166
75	|		1	exclusive-OR-expression	166
75	|=		1	exclusive-OR-expression	166
75	||		1	exclusive-OR-expression	166
75	}		1	exclusive-OR-expression	166
75	~		1	exclusive-OR-expression	166


203	!		1	assignment-operator	152
203	&		1	assignment-operator	152
203	(		1	assignment-operator	152
203	*		1	assignment-operator	152
203	+		1	assignment-operator	152
203	++		1	assignment-operator	152
203	-		1	assignment-operator	152
203	--		1	assignment-operator	152
203	character-constant		1	assignment-operator	152
203	enumeration-constant		1	assignment-operator	152
203	floating-constant		1	assignment-operator	152
203	identifier		1	assignment-operator	152
203	integer-constant		1	assignment-operator	152
203	sizeof		1	assignment-operator	152
203	string-constant		1	assignment-operator	152
203	~		1	assignment-operator	152

331	identifier		0	300

84	!		1	primary-expression	211
84	!=		1	primary-expression	211
84	%		1	primary-expression	211
84	%=		1	primary-expression	211
84	&		1	primary-expression	211
84	&&		1	primary-expression	211
84	&=		1	primary-expression	211
84	(		1	primary-expression	211
84	)		1	primary-expression	211
84	*		1	primary-expression	211
84	*=		1	primary-expression	211
84	+		1	primary-expression	211
84	++		1	primary-expression	211
84	+=		1	primary-expression	211
84	,		1	primary-expression	211
84	-		1	primary-expression	211
84	--		1	primary-expression	211
84	-=		1	primary-expression	211
84	->		1	primary-expression	211
84	.		1	primary-expression	211
84	/		1	primary-expression	211
84	/=		1	primary-expression	211
84	:		1	primary-expression	211
84	;		1	primary-expression	211
84	<		1	primary-expression	211
84	<<		1	primary-expression	211
84	<<=		1	primary-expression	211
84	<=		1	primary-expression	211
84	=		1	primary-expression	211
84	==		1	primary-expression	211
84	>		1	primary-expression	211
84	>=		1	primary-expression	211
84	>>		1	primary-expression	211
84	>>=		1	primary-expression	211
84	?		1	primary-expression	211
84	[		1	primary-expression	211
84	]		1	primary-expression	211
84	^		1	primary-expression	211
84	^=		1	primary-expression	211
84	_KULV_END_		1	primary-expression	211
84	auto		1	primary-expression	211
84	break		1	primary-expression	211
84	case		1	primary-expression	211
84	char		1	primary-expression	211
84	character-constant		1	primary-expression	211
84	const		1	primary-expression	211
84	continue		1	primary-expression	211
84	default		1	primary-expression	211
84	do		1	primary-expression	211
84	double		1	primary-expression	211
84	else		1	primary-expression	211
84	enum		1	primary-expression	211
84	enumeration-constant		1	primary-expression	211
84	extern		1	primary-expression	211
84	float		1	primary-expression	211
84	floating-constant		1	primary-expression	211
84	for		1	primary-expression	211
84	goto		1	primary-expression	211
84	identifier		1	primary-expression	211
84	if		1	primary-expression	211
84	int		1	primary-expression	211
84	integer-constant		1	primary-expression	211
84	long		1	primary-expression	211
84	register		1	primary-expression	211
84	return		1	primary-expression	211
84	short		1	primary-expression	211
84	signed		1	primary-expression	211
84	sizeof		1	primary-expression	211
84	static		1	primary-expression	211
84	string-constant		1	primary-expression	211
84	switch		1	primary-expression	211
84	typedef		1	primary-expression	211
84	unsigned		1	primary-expression	211
84	void		1	primary-expression	211
84	volatile		1	primary-expression	211
84	while		1	primary-expression	211
84	{		1	primary-expression	211
84	|		1	primary-expression	211
84	|=		1	primary-expression	211
84	||		1	primary-expression	211
84	}		1	primary-expression	211
84	~		1	primary-expression	211


212	!		0	66
212	&		0	67
212	(		0	68
212	*		0	69
212	+		0	70
212	++		0	71
212	-		0	72
212	--		0	73
212	]		0	282
212	character-constant		0	81
212	enumeration-constant		0	89
212	floating-constant		0	94
212	identifier		0	133
212	integer-constant		0	100
212	sizeof		0	113
212	string-constant		0	116
212	~		0	122


340	!		0	66
340	&		0	67
340	(		0	68
340	*		0	69
340	+		0	70
340	++		0	71
340	-		0	72
340	--		0	73
340	;		0	74
340	break		0	78
340	case		0	79
340	character-constant		0	81
340	continue		0	85
340	default		0	87
340	do		0	88
340	enumeration-constant		0	89
340	floating-constant		0	94
340	for		0	95
340	goto		0	96
340	identifier		0	97
340	if		0	98
340	integer-constant		0	100
340	return		0	110
340	sizeof		0	113
340	string-constant		0	116
340	switch		0	117
340	while		0	120
340	{		0	43
340	~		0	122

61	!		1	declaration	10
61	%=		1	declaration	10
61	&		1	declaration	10
61	&=		1	declaration	10
61	(		1	declaration	10
61	)		1	declaration	10
61	*		1	declaration	10
61	*=		1	declaration	10
61	+		1	declaration	10
61	++		1	declaration	10
61	+=		1	declaration	10
61	,		1	declaration	10
61	-		1	declaration	10
61	--		1	declaration	10
61	-=		1	declaration	10
61	/=		1	declaration	10
61	;		1	declaration	10
61	<<=		1	declaration	10
61	=		1	declaration	10
61	>>=		1	declaration	10
61	^=		1	declaration	10
61	_KULV_END_		1	declaration	10
61	auto		1	declaration	10
61	break		1	declaration	10
61	case		1	declaration	10
61	char		1	declaration	10
61	character-constant		1	declaration	10
61	const		1	declaration	10
61	continue		1	declaration	10
61	default		1	declaration	10
61	do		1	declaration	10
61	double		1	declaration	10
61	else		1	declaration	10
61	enumeration-constant		1	declaration	10
61	extern		1	declaration	10
61	float		1	declaration	10
61	floating-constant		1	declaration	10
61	for		1	declaration	10
61	goto		1	declaration	10
61	identifier		1	declaration	10
61	if		1	declaration	10
61	int		1	declaration	10
61	integer-constant		1	declaration	10
61	long		1	declaration	10
61	register		1	declaration	10
61	return		1	declaration	10
61	short		1	declaration	10
61	signed		1	declaration	10
61	sizeof		1	declaration	10
61	static		1	declaration	10
61	string-constant		1	declaration	10
61	switch		1	declaration	10
61	typedef		1	declaration	10
61	unsigned		1	declaration	10
61	void		1	declaration	10
61	volatile		1	declaration	10
61	while		1	declaration	10
61	{		1	declaration	10
61	|=		1	declaration	10
61	}		1	declaration	10
61	~		1	declaration	10

189	!		1	jump-statement	140
189	%=		1	jump-statement	140
189	&		1	jump-statement	140
189	&=		1	jump-statement	140
189	(		1	jump-statement	140
189	)		1	jump-statement	140
189	*		1	jump-statement	140
189	*=		1	jump-statement	140
189	+		1	jump-statement	140
189	++		1	jump-statement	140
189	+=		1	jump-statement	140
189	,		1	jump-statement	140
189	-		1	jump-statement	140
189	--		1	jump-statement	140
189	-=		1	jump-statement	140
189	/=		1	jump-statement	140
189	;		1	jump-statement	140
189	<<=		1	jump-statement	140
189	=		1	jump-statement	140
189	>>=		1	jump-statement	140
189	^=		1	jump-statement	140
189	_KULV_END_		1	jump-statement	140
189	auto		1	jump-statement	140
189	break		1	jump-statement	140
189	case		1	jump-statement	140
189	char		1	jump-statement	140
189	character-constant		1	jump-statement	140
189	const		1	jump-statement	140
189	continue		1	jump-statement	140
189	default		1	jump-statement	140
189	do		1	jump-statement	140
189	double		1	jump-statement	140
189	else		1	jump-statement	140
189	enumeration-constant		1	jump-statement	140
189	extern		1	jump-statement	140
189	float		1	jump-statement	140
189	floating-constant		1	jump-statement	140
189	for		1	jump-statement	140
189	goto		1	jump-statement	140
189	identifier		1	jump-statement	140
189	if		1	jump-statement	140
189	int		1	jump-statement	140
189	integer-constant		1	jump-statement	140
189	long		1	jump-statement	140
189	register		1	jump-statement	140
189	return		1	jump-statement	140
189	short		1	jump-statement	140
189	signed		1	jump-statement	140
189	sizeof		1	jump-statement	140
189	static		1	jump-statement	140
189	string-constant		1	jump-statement	140
189	switch		1	jump-statement	140
189	typedef		1	jump-statement	140
189	unsigned		1	jump-statement	140
189	void		1	jump-statement	140
189	volatile		1	jump-statement	140
189	while		1	jump-statement	140
189	{		1	jump-statement	140
189	|=		1	jump-statement	140
189	}		1	jump-statement	140
189	~		1	jump-statement	140



317	(		1	direct-abstract-declarator	97
317	)		1	direct-abstract-declarator	97
317	,		1	direct-abstract-declarator	97
317	[		1	direct-abstract-declarator	97


6	(		1	external-declaration	4
6	*		1	external-declaration	4
6	_KULV_END_		1	external-declaration	4
6	auto		1	external-declaration	4
6	char		1	external-declaration	4
6	const		1	external-declaration	4
6	double		1	external-declaration	4
6	extern		1	external-declaration	4
6	float		1	external-declaration	4
6	identifier		1	external-declaration	4
6	int		1	external-declaration	4
6	long		1	external-declaration	4
6	register		1	external-declaration	4
6	short		1	external-declaration	4
6	signed		1	external-declaration	4
6	static		1	external-declaration	4
6	typedef		1	external-declaration	4
6	unsigned		1	external-declaration	4
6	void		1	external-declaration	4
6	volatile		1	external-declaration	4


134	!		1	cast-expression	188
134	!=		1	cast-expression	188
134	%		1	cast-expression	188
134	%=		1	cast-expression	188
134	&		1	cast-expression	188
134	&&		1	cast-expression	188
134	&=		1	cast-expression	188
134	(		1	cast-expression	188
134	)		1	cast-expression	188
134	*		1	cast-expression	188
134	*=		1	cast-expression	188
134	+		1	cast-expression	188
134	++		1	cast-expression	188
134	+=		1	cast-expression	188
134	,		1	cast-expression	188
134	-		1	cast-expression	188
134	--		1	cast-expression	188
134	-=		1	cast-expression	188
134	->		1	cast-expression	188
134	.		1	cast-expression	188
134	/		1	cast-expression	188
134	/=		1	cast-expression	188
134	:		1	cast-expression	188
134	;		1	cast-expression	188
134	<		1	cast-expression	188
134	<<		1	cast-expression	188
134	<<=		1	cast-expression	188
134	<=		1	cast-expression	188
134	=		1	cast-expression	188
134	==		1	cast-expression	188
134	>		1	cast-expression	188
134	>=		1	cast-expression	188
134	>>		1	cast-expression	188
134	>>=		1	cast-expression	188
134	?		1	cast-expression	188
134	[		1	cast-expression	188
134	]		1	cast-expression	188
134	^		1	cast-expression	188
134	^=		1	cast-expression	188
134	_KULV_END_		1	cast-expression	188
134	auto		1	cast-expression	188
134	break		1	cast-expression	188
134	case		1	cast-expression	188
134	char		1	cast-expression	188
134	character-constant		1	cast-expression	188
134	const		1	cast-expression	188
134	continue		1	cast-expression	188
134	default		1	cast-expression	188
134	do		1	cast-expression	188
134	double		1	cast-expression	188
134	else		1	cast-expression	188
134	enum		1	cast-expression	188
134	enumeration-constant		1	cast-expression	188
134	extern		1	cast-expression	188
134	float		1	cast-expression	188
134	floating-constant		1	cast-expression	188
134	for		1	cast-expression	188
134	goto		1	cast-expression	188
134	identifier		1	cast-expression	188
134	if		1	cast-expression	188
134	int		1	cast-expression	188
134	integer-constant		1	cast-expression	188
134	long		1	cast-expression	188
134	register		1	cast-expression	188
134	return		1	cast-expression	188
134	short		1	cast-expression	188
134	signed		1	cast-expression	188
134	sizeof		1	cast-expression	188
134	static		1	cast-expression	188
134	string-constant		1	cast-expression	188
134	switch		1	cast-expression	188
134	typedef		1	cast-expression	188
134	unsigned		1	cast-expression	188
134	void		1	cast-expression	188
134	volatile		1	cast-expression	188
134	while		1	cast-expression	188
134	{		1	cast-expression	188
134	|		1	cast-expression	188
134	|=		1	cast-expression	188
134	||		1	cast-expression	188
134	}		1	cast-expression	188
134	~		1	cast-expression	188


262	)		0	312
262	,		0	311


111	!		1	statement	110
111	%=		1	statement	110
111	&		1	statement	110
111	&=		1	statement	110
111	(		1	statement	110
111	)		1	statement	110
111	*		1	statement	110
111	*=		1	statement	110
111	+		1	statement	110
111	++		1	statement	110
111	+=		1	statement	110
111	,		1	statement	110
111	-		1	statement	110
111	--		1	statement	110
111	-=		1	statement	110
111	/=		1	statement	110
111	;		1	statement	110
111	<<=		1	statement	110
111	=		1	statement	110
111	>>=		1	statement	110
111	^=		1	statement	110
111	_KULV_END_		1	statement	110
111	auto		1	statement	110
111	break		1	statement	110
111	case		1	statement	110
111	char		1	statement	110
111	character-constant		1	statement	110
111	const		1	statement	110
111	continue		1	statement	110
111	default		1	statement	110
111	do		1	statement	110
111	double		1	statement	110
111	else		1	statement	110
111	enumeration-constant		1	statement	110
111	extern		1	statement	110
111	float		1	statement	110
111	floating-constant		1	statement	110
111	for		1	statement	110
111	goto		1	statement	110
111	identifier		1	statement	110
111	if		1	statement	110
111	int		1	statement	110
111	integer-constant		1	statement	110
111	long		1	statement	110
111	register		1	statement	110
111	return		1	statement	110
111	short		1	statement	110
111	signed		1	statement	110
111	sizeof		1	statement	110
111	static		1	statement	110
111	string-constant		1	statement	110
111	switch		1	statement	110
111	typedef		1	statement	110
111	unsigned		1	statement	110
111	void		1	statement	110
111	volatile		1	statement	110
111	while		1	statement	110
111	{		1	statement	110
111	|=		1	statement	110
111	}		1	statement	110
111	~		1	statement	110

239	!		1	AND-expression	169
239	!=		0	162
239	%		1	AND-expression	169
239	%=		1	AND-expression	169
239	&		1	AND-expression	169
239	&&		1	AND-expression	169
239	&=		1	AND-expression	169
239	(		1	AND-expression	169
239	)		1	AND-expression	169
239	*		1	AND-expression	169
239	*=		1	AND-expression	169
239	+		1	AND-expression	169
239	++		1	AND-expression	169
239	+=		1	AND-expression	169
239	,		1	AND-expression	169
239	-		1	AND-expression	169
239	--		1	AND-expression	169
239	-=		1	AND-expression	169
239	->		1	AND-expression	169
239	.		1	AND-expression	169
239	/		1	AND-expression	169
239	/=		1	AND-expression	169
239	:		1	AND-expression	169
239	;		1	AND-expression	169
239	<		1	AND-expression	169
239	<<		1	AND-expression	169
239	<<=		1	AND-expression	169
239	<=		1	AND-expression	169
239	=		1	AND-expression	169
239	==		0	163
239	>		1	AND-expression	169
239	>=		1	AND-expression	169
239	>>		1	AND-expression	169
239	>>=		1	AND-expression	169
239	?		1	AND-expression	169
239	[		1	AND-expression	169
239	]		1	AND-expression	169
239	^		1	AND-expression	169
239	^=		1	AND-expression	169
239	_KULV_END_		1	AND-expression	169
239	auto		1	AND-expression	169
239	break		1	AND-expression	169
239	case		1	AND-expression	169
239	char		1	AND-expression	169
239	character-constant		1	AND-expression	169
239	const		1	AND-expression	169
239	continue		1	AND-expression	169
239	default		1	AND-expression	169
239	do		1	AND-expression	169
239	double		1	AND-expression	169
239	else		1	AND-expression	169
239	enum		1	AND-expression	169
239	enumeration-constant		1	AND-expression	169
239	extern		1	AND-expression	169
239	float		1	AND-expression	169
239	floating-constant		1	AND-expression	169
239	for		1	AND-expression	169
239	goto		1	AND-expression	169
239	identifier		1	AND-expression	169
239	if		1	AND-expression	169
239	int		1	AND-expression	169
239	integer-constant		1	AND-expression	169
239	long		1	AND-expression	169
239	register		1	AND-expression	169
239	return		1	AND-expression	169
239	short		1	AND-expression	169
239	signed		1	AND-expression	169
239	sizeof		1	AND-expression	169
239	static		1	AND-expression	169
239	string-constant		1	AND-expression	169
239	switch		1	AND-expression	169
239	typedef		1	AND-expression	169
239	unsigned		1	AND-expression	169
239	void		1	AND-expression	169
239	volatile		1	AND-expression	169
239	while		1	AND-expression	169
239	{		1	AND-expression	169
239	|		1	AND-expression	169
239	|=		1	AND-expression	169
239	||		1	AND-expression	169
239	}		1	AND-expression	169
239	~		1	AND-expression	169


367	!		0	66
367	&		0	67
367	(		0	68
367	*		0	69
367	+		0	70
367	++		0	71
367	-		0	72
367	--		0	73
367	;		0	74
367	break		0	78
367	case		0	79
367	character-constant		0	81
367	continue		0	85
367	default		0	87
367	do		0	88
367	enumeration-constant		0	89
367	floating-constant		0	94
367	for		0	95
367	goto		0	96
367	identifier		0	97
367	if		0	98
367	integer-constant		0	100
367	return		0	110
367	sizeof		0	113
367	string-constant		0	116
367	switch		0	117
367	while		0	120
367	{		0	43
367	~		0	122

120	(		0	210

248	!		1	exclusive-OR-expression	167
248	!=		1	exclusive-OR-expression	167
248	%		1	exclusive-OR-expression	167
248	%=		1	exclusive-OR-expression	167
248	&		0	152
248	&&		1	exclusive-OR-expression	167
248	&=		1	exclusive-OR-expression	167
248	(		1	exclusive-OR-expression	167
248	)		1	exclusive-OR-expression	167
248	*		1	exclusive-OR-expression	167
248	*=		1	exclusive-OR-expression	167
248	+		1	exclusive-OR-expression	167
248	++		1	exclusive-OR-expression	167
248	+=		1	exclusive-OR-expression	167
248	,		1	exclusive-OR-expression	167
248	-		1	exclusive-OR-expression	167
248	--		1	exclusive-OR-expression	167
248	-=		1	exclusive-OR-expression	167
248	->		1	exclusive-OR-expression	167
248	.		1	exclusive-OR-expression	167
248	/		1	exclusive-OR-expression	167
248	/=		1	exclusive-OR-expression	167
248	:		1	exclusive-OR-expression	167
248	;		1	exclusive-OR-expression	167
248	<		1	exclusive-OR-expression	167
248	<<		1	exclusive-OR-expression	167
248	<<=		1	exclusive-OR-expression	167
248	<=		1	exclusive-OR-expression	167
248	=		1	exclusive-OR-expression	167
248	==		1	exclusive-OR-expression	167
248	>		1	exclusive-OR-expression	167
248	>=		1	exclusive-OR-expression	167
248	>>		1	exclusive-OR-expression	167
248	>>=		1	exclusive-OR-expression	167
248	?		1	exclusive-OR-expression	167
248	[		1	exclusive-OR-expression	167
248	]		1	exclusive-OR-expression	167
248	^		1	exclusive-OR-expression	167
248	^=		1	exclusive-OR-expression	167
248	_KULV_END_		1	exclusive-OR-expression	167
248	auto		1	exclusive-OR-expression	167
248	break		1	exclusive-OR-expression	167
248	case		1	exclusive-OR-expression	167
248	char		1	exclusive-OR-expression	167
248	character-constant		1	exclusive-OR-expression	167
248	const		1	exclusive-OR-expression	167
248	continue		1	exclusive-OR-expression	167
248	default		1	exclusive-OR-expression	167
248	do		1	exclusive-OR-expression	167
248	double		1	exclusive-OR-expression	167
248	else		1	exclusive-OR-expression	167
248	enum		1	exclusive-OR-expression	167
248	enumeration-constant		1	exclusive-OR-expression	167
248	extern		1	exclusive-OR-expression	167
248	float		1	exclusive-OR-expression	167
248	floating-constant		1	exclusive-OR-expression	167
248	for		1	exclusive-OR-expression	167
248	goto		1	exclusive-OR-expression	167
248	identifier		1	exclusive-OR-expression	167
248	if		1	exclusive-OR-expression	167
248	int		1	exclusive-OR-expression	167
248	integer-constant		1	exclusive-OR-expression	167
248	long		1	exclusive-OR-expression	167
248	register		1	exclusive-OR-expression	167
248	return		1	exclusive-OR-expression	167
248	short		1	exclusive-OR-expression	167
248	signed		1	exclusive-OR-expression	167
248	sizeof		1	exclusive-OR-expression	167
248	static		1	exclusive-OR-expression	167
248	string-constant		1	exclusive-OR-expression	167
248	switch		1	exclusive-OR-expression	167
248	typedef		1	exclusive-OR-expression	167
248	unsigned		1	exclusive-OR-expression	167
248	void		1	exclusive-OR-expression	167
248	volatile		1	exclusive-OR-expression	167
248	while		1	exclusive-OR-expression	167
248	{		1	exclusive-OR-expression	167
248	|		1	exclusive-OR-expression	167
248	|=		1	exclusive-OR-expression	167
248	||		1	exclusive-OR-expression	167
248	}		1	exclusive-OR-expression	167
248	~		1	exclusive-OR-expression	167


65	!		1	init-declarator	44
65	%=		1	init-declarator	44
65	&		1	init-declarator	44
65	&=		1	init-declarator	44
65	(		1	init-declarator	44
65	)		1	init-declarator	44
65	*		1	init-declarator	44
65	*=		1	init-declarator	44
65	+		1	init-declarator	44
65	++		1	init-declarator	44
65	+=		1	init-declarator	44
65	,		1	init-declarator	44
65	-		1	init-declarator	44
65	--		1	init-declarator	44
65	-=		1	init-declarator	44
65	/=		1	init-declarator	44
65	;		1	init-declarator	44
65	<<=		1	init-declarator	44
65	=		0	60
65	>>=		1	init-declarator	44
65	^=		1	init-declarator	44
65	_KULV_END_		1	init-declarator	44
65	auto		1	init-declarator	44
65	break		1	init-declarator	44
65	case		1	init-declarator	44
65	char		1	init-declarator	44
65	character-constant		1	init-declarator	44
65	const		1	init-declarator	44
65	continue		1	init-declarator	44
65	default		1	init-declarator	44
65	do		1	init-declarator	44
65	double		1	init-declarator	44
65	else		1	init-declarator	44
65	enumeration-constant		1	init-declarator	44
65	extern		1	init-declarator	44
65	float		1	init-declarator	44
65	floating-constant		1	init-declarator	44
65	for		1	init-declarator	44
65	goto		1	init-declarator	44
65	identifier		1	init-declarator	44
65	if		1	init-declarator	44
65	int		1	init-declarator	44
65	integer-constant		1	init-declarator	44
65	long		1	init-declarator	44
65	register		1	init-declarator	44
65	return		1	init-declarator	44
65	short		1	init-declarator	44
65	signed		1	init-declarator	44
65	sizeof		1	init-declarator	44
65	static		1	init-declarator	44
65	string-constant		1	init-declarator	44
65	switch		1	init-declarator	44
65	typedef		1	init-declarator	44
65	unsigned		1	init-declarator	44
65	void		1	init-declarator	44
65	volatile		1	init-declarator	44
65	while		1	init-declarator	44
65	{		1	init-declarator	44
65	|=		1	init-declarator	44
65	}		1	init-declarator	44
65	~		1	init-declarator	44



193	!		1	unary-expression	194
193	!=		1	unary-expression	194
193	%		1	unary-expression	194
193	%=		1	unary-expression	194
193	&		1	unary-expression	194
193	&&		1	unary-expression	194
193	&=		1	unary-expression	194
193	(		1	unary-expression	194
193	)		1	unary-expression	194
193	*		1	unary-expression	194
193	*=		1	unary-expression	194
193	+		1	unary-expression	194
193	++		1	unary-expression	194
193	+=		1	unary-expression	194
193	,		1	unary-expression	194
193	-		1	unary-expression	194
193	--		1	unary-expression	194
193	-=		1	unary-expression	194
193	->		1	unary-expression	194
193	.		1	unary-expression	194
193	/		1	unary-expression	194
193	/=		1	unary-expression	194
193	:		1	unary-expression	194
193	;		1	unary-expression	194
193	<		1	unary-expression	194
193	<<		1	unary-expression	194
193	<<=		1	unary-expression	194
193	<=		1	unary-expression	194
193	=		1	unary-expression	194
193	==		1	unary-expression	194
193	>		1	unary-expression	194
193	>=		1	unary-expression	194
193	>>		1	unary-expression	194
193	>>=		1	unary-expression	194
193	?		1	unary-expression	194
193	[		1	unary-expression	194
193	]		1	unary-expression	194
193	^		1	unary-expression	194
193	^=		1	unary-expression	194
193	_KULV_END_		1	unary-expression	194
193	auto		1	unary-expression	194
193	break		1	unary-expression	194
193	case		1	unary-expression	194
193	char		1	unary-expression	194
193	character-constant		1	unary-expression	194
193	const		1	unary-expression	194
193	continue		1	unary-expression	194
193	default		1	unary-expression	194
193	do		1	unary-expression	194
193	double		1	unary-expression	194
193	else		1	unary-expression	194
193	enum		1	unary-expression	194
193	enumeration-constant		1	unary-expression	194
193	extern		1	unary-expression	194
193	float		1	unary-expression	194
193	floating-constant		1	unary-expression	194
193	for		1	unary-expression	194
193	goto		1	unary-expression	194
193	identifier		1	unary-expression	194
193	if		1	unary-expression	194
193	int		1	unary-expression	194
193	integer-constant		1	unary-expression	194
193	long		1	unary-expression	194
193	register		1	unary-expression	194
193	return		1	unary-expression	194
193	short		1	unary-expression	194
193	signed		1	unary-expression	194
193	sizeof		1	unary-expression	194
193	static		1	unary-expression	194
193	string-constant		1	unary-expression	194
193	switch		1	unary-expression	194
193	typedef		1	unary-expression	194
193	unsigned		1	unary-expression	194
193	void		1	unary-expression	194
193	volatile		1	unary-expressio		194
193	while		1	unary-expression	194
193	{		1	unary-expression	194
193	|		1	unary-expression	194
193	|=		1	unary-expression	194
193	||		1	unary-expression	194
193	}		1	unary-expression	194
193	~		1	unary-expression	194


321	)		0	346


42	(		1	function-definition	5
42	*		1	function-definition	5
42	_KULV_END_		1	function-definition	5
42	auto		1	function-definition	5
42	char		1	function-definition	5
42	const		1	function-definition	5
42	double		1	function-definition	5
42	extern		1	function-definition	5
42	float		1	function-definition	5
42	identifier		1	function-definition	5
42	int		1	function-definition	5
42	long		1	function-definition	5
42	register		1	function-definition	5
42	short		1	function-definition	5
42	signed		1	function-definition	5
42	static		1	function-definition	5
42	typedef		1	function-definition	5
42	unsigned		1	function-definition	5
42	void		1	function-definition	5
42	volatile		1	function-definition	5



170	!		0	66
170	&		0	67
170	(		0	68
170	*		0	69
170	+		0	70
170	++		0	71
170	-		0	72
170	--		0	73
170	character-constant		0	81
170	enumeration-constant		0	89
170	floating-constant		0	94
170	identifier		0	133
170	integer-constant		0	100
170	sizeof		0	113
170	string-constant		0	116
170	~		0	122
298	,		0	331
298	}		0	330

51	identifier		1	struct-or-union	38
51	{		1	struct-or-union	38

179	!		1	postfix-expression	208
179	!=		1	postfix-expression	208
179	%		1	postfix-expression	208
179	%=		1	postfix-expression	208
179	&		1	postfix-expression	208
179	&&		1	postfix-expression	208
179	&=		1	postfix-expression	208
179	(		1	postfix-expression	208
179	)		1	postfix-expression	208
179	*		1	postfix-expression	208
179	*=		1	postfix-expression	208
179	+		1	postfix-expression	208
179	++		1	postfix-expression	208
179	+=		1	postfix-expression	208
179	,		1	postfix-expression	208
179	-		1	postfix-expression	208
179	--		1	postfix-expression	208
179	-=		1	postfix-expression	208
179	->		1	postfix-expression	208
179	.		1	postfix-expression	208
179	/		1	postfix-expression	208
179	/=		1	postfix-expression	208
179	:		1	postfix-expression	208
179	;		1	postfix-expression	208
179	<		1	postfix-expression	208
179	<<		1	postfix-expression	208
179	<<=		1	postfix-expression	208
179	<=		1	postfix-expression	208
179	=		1	postfix-expression	208
179	==		1	postfix-expression	208
179	>		1	postfix-expression	208
179	>=		1	postfix-expression	208
179	>>		1	postfix-expression	208
179	>>=		1	postfix-expression	208
179	?		1	postfix-expression	208
179	[		1	postfix-expression	208
179	]		1	postfix-expression	208
179	^		1	postfix-expression	208
179	^=		1	postfix-expression	208
179	_KULV_END_		1	postfix-expression	208
179	auto		1	postfix-expression	208
179	break		1	postfix-expression	208
179	case		1	postfix-expression	208
179	char		1	postfix-expression	208
179	character-constant		1	postfix-expression	208
179	const		1	postfix-expression	208
179	continue		1	postfix-expression	208
179	default		1	postfix-expression	208
179	do		1	postfix-expression	208
179	double		1	postfix-expression	208
179	else		1	postfix-expression	208
179	enum		1	postfix-expression	208
179	enumeration-constant		1	postfix-expression	208
179	extern		1	postfix-expression	208
179	float		1	postfix-expression	208
179	floating-constant		1	postfix-expression	208
179	for		1	postfix-expression	208
179	goto		1	postfix-expression	208
179	identifier		1	postfix-expression	208
179	if		1	postfix-expression	208
179	int		1	postfix-expression	208
179	integer-constant		1	postfix-expression	208
179	long		1	postfix-expression	208
179	register		1	postfix-expression	208
179	return		1	postfix-expression	208
179	short		1	postfix-expression	208
179	signed		1	postfix-expression	208
179	sizeof		1	postfix-expression	208
179	static		1	postfix-expression	208
179	string-constant		1	postfix-expression	208
179	switch		1	postfix-expression	208
179	typedef		1	postfix-expression	208
179	unsigned		1	postfix-expression	208
179	void		1	postfix-expression	208
179	volatile		1	postfix-expression	208
179	while		1	postfix-expression	208
179	{		1	postfix-expression	208
179	|		1	postfix-expression	208
179	|=		1	postfix-expression	208
179	||		1	postfix-expression	208
179	}		1	postfix-expression	208
179	~		1	postfix-expression	208


307	,		0	165
307	;		0	338

28	struct		0	51
28	union		0	53

156	:		0	242

284	)		0	320
284	auto		0	3
284	char		0	4
284	const		0	5
284	double		0	10
284	extern		0	11
284	float		0	13
284	int		0	16
284	long		0	17
284	register		0	19
284	short		0	20
284	signed		0	21
284	static		0	22
284	typedef		0	27
284	unsigned		0	28
284	void		0	29
284	volatile		0	30

101	!		1	statement	111
101	%=		1	statement	111
101	&		1	statement	111
101	&=		1	statement	111
101	(		1	statement	111
101	)		1	statement	111
101	*		1	statement	111
101	*=		1	statement	111
101	+		1	statement	111
101	++		1	statement	111
101	+=		1	statement	111
101	,		1	statement	111
101	-		1	statement	111
101	--		1	statement	111
101	-=		1	statement	111
101	/=		1	statement	111
101	;		1	statement	111
101	<<=		1	statement	111
101	=		1	statement	111
101	>>=		1	statement	111
101	^=		1	statement	111
101	_KULV_END_		1	statement	111
101	auto		1	statement	111
101	break		1	statement	111
101	case		1	statement	111
101	char		1	statement	111
101	character-constant		1	statement	111
101	const		1	statement	111
101	continue		1	statement	111
101	default		1	statement	111
101	do		1	statement	111
101	double		1	statement	111
101	else		1	statement	111
101	enumeration-constant		1	statement	111
101	extern		1	statement	111
101	float		1	statement	111
101	floating-constant		1	statement	111
101	for		1	statement	111
101	goto		1	statement	111
101	identifier		1	statement	111
101	if		1	statement	111
101	int		1	statement	111
101	integer-constant		1	statement	111
101	long		1	statement	111
101	register		1	statement	111
101	return		1	statement	111
101	short		1	statement	111
101	signed		1	statement	111
101	sizeof		1	statement	111
101	static		1	statement	111
101	string-constant		1	statement	111
101	switch		1	statement	111
101	typedef		1	statement	111
101	unsigned		1	statement	111
101	void		1	statement	111
101	volatile		1	statement	111
101	while		1	statement	111
101	{		1	statement	111
101	|=		1	statement	111
101	}		1	statement	111
101	~		1	statement	111

229	(		1	type-specifier	32
229	)		1	type-specifier	32
229	*		1	type-specifier	32
229	,		1	type-specifier	32
229	:		1	type-specifier	32
229	;		1	type-specifier	32
229	[		1	type-specifier	32
229	auto		1	type-specifier	32
229	char		1	type-specifier	32
229	const		1	type-specifier	32
229	double		1	type-specifier	32
229	extern		1	type-specifier	32
229	float		1	type-specifier	32
229	identifier		1	type-specifier	32
229	int		1	type-specifier	32
229	long		1	type-specifier	32
229	register		1	type-specifier	32
229	short		1	type-specifier	32
229	signed		1	type-specifier	32
229	static		1	type-specifier	32
229	typedef		1	type-specifier	32
229	unsigned		1	type-specifier	32
229	void		1	type-specifier	32
229	volatile		1	type-specifier	32


357	)		0	367
357	,		0	165


78	;		0	155


206	!		1	assignment-operator	155
206	&		1	assignment-operator	155
206	(		1	assignment-operator	155
206	*		1	assignment-operator	155
206	+		1	assignment-operator	155
206	++		1	assignment-operator	155
206	-		1	assignment-operator	155
206	--		1	assignment-operator	155
206	character-constant		1	assignment-operator	155
206	enumeration-constant		1	assignment-operator	155
206	floating-constant		1	assignment-operator	155
206	identifier		1	assignment-operator	155
206	integer-constant		1	assignment-operator	155
206	sizeof		1	assignment-operator	155
206	string-constant		1	assignment-operator	155
206	~		1	assignment-operator	155


334	!		1	initializer	89
334	%=		1	initializer	89
334	&		1	initializer	89
334	&=		1	initializer	89
334	(		1	initializer	89
334	)		1	initializer	89
334	*		1	initializer	89
334	*=		1	initializer	89
334	+		1	initializer	89
334	++		1	initializer	89
334	+=		1	initializer	89
334	,		1	initializer	89
334	-		1	initializer	89
334	--		1	initializer	89
334	-=		1	initializer	89
334	/=		1	initializer	89
334	;		1	initializer	89
334	<<=		1	initializer	89
334	=		1	initializer	89
334	>>=		1	initializer	89
334	^=		1	initializer	89
334	_KULV_END_		1	initializer	89
334	auto		1	initializer	89
334	break		1	initializer	89
334	case		1	initializer	89
334	char		1	initializer	89
334	character-constant		1	initializer	89
334	const		1	initializer	89
334	continue		1	initializer	89
334	default		1	initializer	89
334	do		1	initializer	89
334	double		1	initializer	89
334	else		1	initializer	89
334	enumeration-constant		1	initializer	89
334	extern		1	initializer	89
334	float		1	initializer	89
334	floating-constant		1	initializer	89
334	for		1	initializer	89
334	goto		1	initializer	89
334	identifier		1	initializer	89
334	if		1	initializer	89
334	int		1	initializer	89
334	integer-constant		1	initializer	89
334	long		1	initializer	89
334	register		1	initializer	89
334	return		1	initializer	89
334	short		1	initializer	89
334	signed		1	initializer	89
334	sizeof		1	initializer	89
334	static		1	initializer	89
334	string-constant		1	initializer	89
334	switch		1	initializer	89
334	typedef		1	initializer	89
334	unsigned		1	initializer	89
334	void		1	initializer	89
334	volatile		1	initializer	89
334	while		1	initializer	89
334	{		1	initializer	89
334	|=		1	initializer	89
334	}		1	initializer	89
334	~		1	initializer	89


87	:		0	160

215	(		0	284
215	)		1	abstract-declarator	95
215	,		1	abstract-declarator	95
215	[		0	285
343	!		1	argument-expression-list	214
343	!=		1	argument-expression-list	214
343	%		1	argument-expression-list	214
343	%=		1	argument-expression-list	214
343	&		1	argument-expression-list	214
343	&&		1	argument-expression-list	214
343	&=		1	argument-expression-list	214
343	(		1	argument-expression-list	214
343	)		1	argument-expression-list	214
343	*		1	argument-expression-list	214
343	*=		1	argument-expression-list	214
343	+		1	argument-expression-list	214
343	++		1	argument-expression-list	214
343	+=		1	argument-expression-list	214
343	,		1	argument-expression-list	214
343	-		1	argument-expression-list	214
343	--		1	argument-expression-list	214
343	-=		1	argument-expression-list	214
343	->		1	argument-expression-list	214
343	.		1	argument-expression-list	214
343	/		1	argument-expression-list	214
343	/=		1	argument-expression-list	214
343	:		1	argument-expression-list	214
343	;		1	argument-expression-list	214
343	<		1	argument-expression-list	214
343	<<		1	argument-expression-list	214
343	<<=		1	argument-expression-list	214
343	<=		1	argument-expression-list	214
343	=		1	argument-expression-list	214
343	==		1	argument-expression-list	214
343	>		1	argument-expression-list	214
343	>=		1	argument-expression-list	214
343	>>		1	argument-expression-list	214
343	>>=		1	argument-expression-list	214
343	?		1	argument-expression-list	214
343	[		1	argument-expression-list	214
343	]		1	argument-expression-list	214
343	^		1	argument-expression-list	214
343	^=		1	argument-expression-list	214
343	_KULV_END_		1	argument-expression-list	214
343	auto		1	argument-expression-list	214
343	break		1	argument-expression-list	214
343	case		1	argument-expression-list	214
343	char		1	argument-expression-list	214
343	character-constant		1	argument-expression-list	214
343	const		1	argument-expression-list	214
343	continue		1	argument-expression-list	214
343	default		1	argument-expression-list	214
343	do		1	argument-expression-list	214
343	double		1	argument-expression-list	214
343	else		1	argument-expression-list	214
343	enum		1	argument-expression-list	214
343	enumeration-constant		1	argument-expression-list	214
343	extern		1	argument-expression-list	214
343	float		1	argument-expression-list	214
343	floating-constant		1	argument-expression-list	214
343	for		1	argument-expression-list	214
343	goto		1	argument-expression-list	214
343	identifier		1	argument-expression-list	214
343	if		1	argument-expression-list	214
343	int		1	argument-expression-list	214
343	integer-constant		1	argument-expression-list	214
343	long		1	argument-expression-list	214
343	register		1	argument-expression-list	214
343	return		1	argument-expression-list	214
343	short		1	argument-expression-list	214
343	signed		1	argument-expression-list	214
343	sizeof		1	argument-expression-list	214
343	static		1	argument-expression-list	214
343	string-constant		1	argument-expression-list	214
343	switch		1	argument-expression-list	214
343	typedef		1	argument-expression-list	214
343	unsigned		1	argument-expression-list	214
343	void		1	argument-expression-list	214
343	volatile		1	argument-expression-list	214
343	while		1	argument-expression-list	214
343	{		1	argument-expression-list	214
343	|		1	argument-expression-list	214
343	|=		1	argument-expression-list	214
343	||		1	argument-expression-list	214
343	}		1	argument-expression-list	214
343	~		1	argument-expression-list	214


32	(		1	pointer	74
32	)		1	pointer	74
32	*		1	pointer	74
32	,		1	pointer	74
32	[		1	pointer	74
32	const		1	pointer	74
32	identifier		1	pointer	74
32	volatile		1	pointer	74


160	!		0	66
160	&		0	67
160	(		0	68
160	*		0	69
160	+		0	70
160	++		0	71
160	-		0	72
160	--		0	73
160	;		0	74
160	break		0	78
160	case		0	79
160	character-constant		0	81
160	continue		0	85
160	default		0	87
160	do		0	88
160	enumeration-constant		0	89
160	floating-constant		0	94
160	for		0	95
160	goto		0	96
160	identifier		0	97
160	if		0	98
160	integer-constant		0	100
160	return		0	110
160	sizeof		0	113
160	string-constant		0	116
160	switch		0	117
160	while		0	120
160	{		0	43
160	~		0	122

288	)		1	parameter-type-list	79
288	,		1	parameter-type-list	79

9	!		1	declarator	63
9	%=		1	declarator	63
9	&		1	declarator	63
9	&=		1	declarator	63
9	(		0	44
9	)		1	declarator	63
9	*		1	declarator	63
9	*=		1	declarator	63
9	+		1	declarator	63
9	++		1	declarator	63
9	+=		1	declarator	63
9	,		1	declarator	63
9	-		1	declarator	63
9	--		1	declarator	63
9	-=		1	declarator	63
9	/=		1	declarator	63
9	:		1	declarator	63
9	;		1	declarator	63
9	<<=		1	declarator	63
9	=		1	declarator	63
9	>>=		1	declarator	63
9	[		0	45
9	^=		1	declarator	63
9	_KULV_END_		1	declarator	63
9	auto		1	declarator	63
9	break		1	declarator	63
9	case		1	declarator	63
9	char		1	declarator	63
9	character-constant		1	declarator	63
9	const		1	declarator	63
9	continue		1	declarator	63
9	default		1	declarator	63
9	do		1	declarator	63
9	double		1	declarator	63
9	else		1	declarator	63
9	enum		1	declarator	63
9	enumeration-constant		1	declarator	63
9	extern		1	declarator	63
9	float		1	declarator	63
9	floating-constant		1	declarator	63
9	for		1	declarator	63
9	goto		1	declarator	63
9	identifier		1	declarator	63
9	if		1	declarator	63
9	int		1	declarator	63
9	integer-constant		1	declarator	63
9	long		1	declarator	63
9	register		1	declarator	63
9	return		1	declarator	63
9	short		1	declarator	63
9	signed		1	declarator	63
9	sizeof		1	declarator	63
9	static		1	declarator	63
9	string-constant		1	declarator	63
9	switch		1	declarator	63
9	typedef		1	declarator	63
9	unsigned		1	declarator	63
9	void		1	declarator	63
9	volatile		1	declarator	63
9	while		1	declarator	63
9	{		1	declarator	63
9	|=		1	declarator	63
9	}		1	declarator	63
9	~		1	declarator	63


137	identifier		0	226
137	{		0	227


265	!		1	postfix-expression	207
265	!=		1	postfix-expression	207
265	%		1	postfix-expression	207
265	%=		1	postfix-expression	207
265	&		1	postfix-expression	207
265	&&		1	postfix-expression	207
265	&=		1	postfix-expression	207
265	(		1	postfix-expression	207
265	)		1	postfix-expression	207
265	*		1	postfix-expression	207
265	*=		1	postfix-expression	207
265	+		1	postfix-expression	207
265	++		1	postfix-expression	207
265	+=		1	postfix-expression	207
265	,		1	postfix-expression	207
265	-		1	postfix-expression	207
265	--		1	postfix-expression	207
265	-=		1	postfix-expression	207
265	->		1	postfix-expression	207
265	.		1	postfix-expression	207
265	/		1	postfix-expression	207
265	/=		1	postfix-expression	207
265	:		1	postfix-expression	207
265	;		1	postfix-expression	207
265	<		1	postfix-expression	207
265	<<		1	postfix-expression	207
265	<<=		1	postfix-expression	207
265	<=		1	postfix-expression	207
265	=		1	postfix-expression	207
265	==		1	postfix-expression	207
265	>		1	postfix-expression	207
265	>=		1	postfix-expression	207
265	>>		1	postfix-expression	207
265	>>=		1	postfix-expression	207
265	?		1	postfix-expression	207
265	[		1	postfix-expression	207
265	]		1	postfix-expression	207
265	^		1	postfix-expression	207
265	^=		1	postfix-expression	207
265	_KULV_END_		1	postfix-expression	207
265	auto		1	postfix-expression	207
265	break		1	postfix-expression	207
265	case		1	postfix-expression	207
265	char		1	postfix-expression	207
265	character-constant		1	postfix-expression	207
265	const		1	postfix-expression	207
265	continue		1	postfix-expression	207
265	default		1	postfix-expression	207
265	do		1	postfix-expression	207
265	double		1	postfix-expression	207
265	else		1	postfix-expression	207
265	enum		1	postfix-expression	207
265	enumeration-constant		1	postfix-expression	207
265	extern		1	postfix-expression	207
265	float		1	postfix-expression	207
265	floating-constant		1	postfix-expression	207
265	for		1	postfix-expression	207
265	goto		1	postfix-expression	207
265	identifier		1	postfix-expression	207
265	if		1	postfix-expression	207
265	int		1	postfix-expression	207
265	integer-constant		1	postfix-expression	207
265	long		1	postfix-expression	207
265	register		1	postfix-expression	207
265	return		1	postfix-expression	207
265	short		1	postfix-expression	207
265	signed		1	postfix-expression	207
265	sizeof		1	postfix-expression	207
265	static		1	postfix-expression	207
265	string-constant		1	postfix-expression	207
265	switch		1	postfix-expression	207
265	typedef		1	postfix-expression	207
265	unsigned		1	postfix-expression	207
265	void		1	postfix-expression	207
265	volatile		1	postfix-expression	207
265	while		1	postfix-expression	207
265	{		1	postfix-expression	207
265	|		1	postfix-expression	207
265	|=		1	postfix-expression	207
265	||		1	postfix-expression	207
265	}		1	postfix-expression	207
265	~		1	postfix-expression	207


18	(		0	1
18	identifier		0	15


146	(		0	234
146	)		1	type-name	92
146	*		0	2
146	[		0	212


274	!		1	shift-expression	180
274	!=		1	shift-expression	180
274	%		1	shift-expression	180
274	%=		1	shift-expression	180
274	&		1	shift-expression	180
274	&&		1	shift-expression	180
274	&=		1	shift-expression	180
274	(		1	shift-expression	180
274	)		1	shift-expression	180
274	*		1	shift-expression	180
274	*=		1	shift-expression	180
274	+		0	153
274	++		1	shift-expression	180
274	+=		1	shift-expression	180
274	,		1	shift-expression	180
274	-		0	154
274	--		1	shift-expression	180
274	-=		1	shift-expression	180
274	->		1	shift-expression	180
274	.		1	shift-expression	180
274	/		1	shift-expression	180
274	/=		1	shift-expression	180
274	:		1	shift-expression	180
274	;		1	shift-expression	180
274	<		1	shift-expression	180
274	<<		1	shift-expression	180
274	<<=		1	shift-expression	180
274	<=		1	shift-expression	180
274	=		1	shift-expression	180
274	==		1	shift-expression	180
274	>		1	shift-expression	180
274	>=		1	shift-expression	180
274	>>		1	shift-expression	180
274	>>=		1	shift-expression	180
274	?		1	shift-expression	180
274	[		1	shift-expression	180
274	]		1	shift-expression	180
274	^		1	shift-expression	180
274	^=		1	shift-expression	180
274	_KULV_END_		1	shift-expression	180
274	auto		1	shift-expression	180
274	break		1	shift-expression	180
274	case		1	shift-expression	180
274	char		1	shift-expression	180
274	character-constant		1	shift-expression	180
274	const		1	shift-expression	180
274	continue		1	shift-expression	180
274	default		1	shift-expression	180
274	do		1	shift-expression	180
274	double		1	shift-expression	180
274	else		1	shift-expression	180
274	enum		1	shift-expression	180
274	enumeration-constant		1	shift-expression	180
274	extern		1	shift-expression	180
274	float		1	shift-expression	180
274	floating-constant		1	shift-expression	180
274	for		1	shift-expression	180
274	goto		1	shift-expression	180
274	identifier		1	shift-expression	180
274	if		1	shift-expression	180
274	int		1	shift-expression	180
274	integer-constant		1	shift-expression	180
274	long		1	shift-expression	180
274	register		1	shift-expression	180
274	return		1	shift-expression	180
274	short		1	shift-expression	180
274	signed		1	shift-expression	180
274	sizeof		1	shift-expression	180
274	static		1	shift-expression	180
274	string-constant		1	shift-expression	180
274	switch		1	shift-expression	180
274	typedef		1	shift-expression	180
274	unsigned		1	shift-expression	180
274	void		1	shift-expression	180
274	volatile		1	shift-expression	180
274	while		1	shift-expression	180
274	{		1	shift-expression	180
274	|		1	shift-expression	180
274	|=		1	shift-expression	180
274	||		1	shift-expression	180
274	}		1	shift-expression	180
274	~		1	shift-expression	180


123	(		0	211
123	)		1	parameter-declaration	83
123	*		0	2
123	,		1	parameter-declaration	83
123	[		0	212
123	identifier		0	15


251	!		0	66
251	&		0	67
251	(		0	68
251	*		0	69
251	+		0	70
251	++		0	71
251	-		0	72
251	--		0	73
251	;		0	308
251	character-constant		0	81
251	enumeration-constant		0	89
251	floating-constant		0	94
251	identifier		0	133
251	integer-constant		0	100
251	sizeof		0	113
251	string-constant		0	116
251	~		0	122


68	!		0	66
68	&		0	67
68	(		0	68
68	*		0	69
68	+		0	70
68	++		0	71
68	-		0	72
68	--		0	73
68	char		0	4
68	character-constant		0	81
68	const		0	5
68	double		0	10
68	enumeration-constant		0	89
68	float		0	13
68	floating-constant		0	94
68	identifier		0	133
68	int		0	16
68	integer-constant		0	100
68	long		0	17
68	short		0	20
68	signed		0	21
68	sizeof		0	113
68	string-constant		0	116
68	unsigned		0	28
68	void		0	29
68	volatile		0	30
68	~		0	122


196	!		0	66
196	&		0	67
196	(		0	68
196	*		0	69
196	+		0	70
196	++		0	71
196	-		0	72
196	--		0	73
196	character-constant		0	81
196	enumeration-constant		0	89
196	floating-constant		0	94
196	identifier		0	133
196	integer-constant		0	100
196	sizeof		0	113
196	string-constant		0	116
196	~		0	122


324	char		1	struct-or-union-specifier	36
324	const		1	struct-or-union-specifier	36
324	double		1	struct-or-union-specifier	36
324	enum		1	struct-or-union-specifier	36
324	float		1	struct-or-union-specifier	36
324	int		1	struct-or-union-specifier	36
324	long		1	struct-or-union-specifier	36
324	short		1	struct-or-union-specifier	36
324	signed		1	struct-or-union-specifier	36
324	unsigned		1	struct-or-union-specifier	36
324	void		1	struct-or-union-specifier	36
324	volatile		1	struct-or-union-specifier	36
324	}		1	struct-or-union-specifier	36


45	!		0	66
45	&		0	67
45	(		0	68
45	*		0	69
45	+		0	70
45	++		0	71
45	-		0	72
45	--		0	73
45	]		0	131
45	character-constant		0	81
45	enumeration-constant		0	89
45	floating-constant		0	94
45	identifier		0	133
45	integer-constant		0	100
45	sizeof		0	113
45	string-constant		0	116
45	~		0	122


173	!		0	66
173	&		0	67
173	(		0	68
173	*		0	69
173	+		0	70
173	++		0	71
173	-		0	72
173	--		0	73
173	character-constant		0	81
173	enumeration-constant		0	89
173	floating-constant		0	94
173	identifier		0	133
173	integer-constant		0	100
173	sizeof		0	113
173	string-constant		0	116
173	~		0	122


301	!		0	66
301	&		0	67
301	(		0	68
301	*		0	69
301	+		0	70
301	++		0	71
301	-		0	72
301	--		0	73
301	character-constant		0	81
301	enumeration-constant		0	89
301	floating-constant		0	94
301	identifier		0	133
301	integer-constant		0	100
301	sizeof		0	113
301	string-constant		0	116
301	{		0	142
301	}		0	334
301	~		0	122
54	enum		0	137


118	!		1	cast-expression	188
118	!=		1	cast-expression	188
118	%		1	cast-expression	188
118	%=		0	197
118	&		1	cast-expression	188
118	&&		1	cast-expression	188
118	&=		0	198
118	(		1	cast-expression	188
118	)		1	cast-expression	188
118	*		1	cast-expression	188
118	*=		0	199
118	+		1	cast-expression	188
118	++		1	cast-expression	188
118	+=		0	200
118	,		1	cast-expression	188
118	-		1	cast-expression	188
118	--		1	cast-expression	188
118	-=		0	201
118	->		1	cast-expression	188
118	.		1	cast-expression	188
118	/		1	cast-expression	188
118	/=		0	202
118	:		1	cast-expression	188
118	;		1	cast-expression	188
118	<		1	cast-expression	188
118	<<		1	cast-expression	188
118	<<=		0	203
118	<=		1	cast-expression	188
118	=		0	204
118	==		1	cast-expression	188
118	>		1	cast-expression	188
118	>=		1	cast-expression	188
118	>>		1	cast-expression	188
118	>>=		0	205
118	?		1	cast-expression	188
118	[		1	cast-expression	188
118	]		1	cast-expression	188
118	^		1	cast-expression	188
118	^=		0	206
118	_KULV_END_		1	cast-expression	188
118	auto		1	cast-expression	188
118	break		1	cast-expression	188
118	case		1	cast-expression	188
118	char		1	cast-expression	188
118	character-constant		1	cast-expression	188
118	const		1	cast-expression	188
118	continue		1	cast-expression	188
118	default		1	cast-expression	188
118	do		1	cast-expression	188
118	double		1	cast-expression	188
118	else		1	cast-expression	188
118	enum		1	cast-expression	188
118	enumeration-constant		1	cast-expression	188
118	extern		1	cast-expression	188
118	float		1	cast-expression	188
118	floating-constant		1	cast-expression	188
118	for		1	cast-expression	188
118	goto		1	cast-expression	188
118	identifier		1	cast-expression	188
118	if		1	cast-expression	188
118	int		1	cast-expression	188
118	integer-constant		1	cast-expression	188
118	long		1	cast-expression	188
118	register		1	cast-expression	188
118	return		1	cast-expression	188
118	short		1	cast-expression	188
118	signed		1	cast-expression	188
118	sizeof		1	cast-expression	188
118	static		1	cast-expression	188
118	string-constant		1	cast-expression	188
118	switch		1	cast-expression	188
118	typedef		1	cast-expression	188
118	unsigned		1	cast-expression	188
118	void		1	cast-expression	188
118	volatile		1	cast-expression	188
118	while		1	cast-expression	188
118	{		1	cast-expression	188
118	|		1	cast-expression	188
118	|=		0	208
118	||		1	cast-expression	188
118	}		1	cast-expression	188
118	~		1	cast-expression	188


182	identifier		0	266


246	!		1	equality-expression	172
246	!=		1	equality-expression	172
246	%		1	equality-expression	172
246	%=		1	equality-expression	172
246	&		1	equality-expression	172
246	&&		1	equality-expression	172
246	&=		1	equality-expression	172
246	(		1	equality-expression	172
246	)		1	equality-expression	172
246	*		1	equality-expression	172
246	*=		1	equality-expression	172
246	+		1	equality-expression	172
246	++		1	equality-expression	172
246	+=		1	equality-expression	172
246	,		1	equality-expression	172
246	-		1	equality-expression	172
246	--		1	equality-expression	172
246	-=		1	equality-expression	172
246	->		1	equality-expression	172
246	.		1	equality-expression	172
246	/		1	equality-expression	172
246	/=		1	equality-expression	172
246	:		1	equality-expression	172
246	;		1	equality-expression	172
246	<		0	184
246	<<		1	equality-expression	172
246	<<=		1	equality-expression	172
246	<=		0	185
246	=		1	equality-expression	172
246	==		1	equality-expression	172
246	>		0	186
246	>=		0	187
246	>>		1	equality-expression	172
246	>>=		1	equality-expression	172
246	?		1	equality-expression	172
246	[		1	equality-expression	172
246	]		1	equality-expression	172
246	^		1	equality-expression	172
246	^=		1	equality-expression	172
246	_KULV_END_		1	equality-expression	172
246	auto		1	equality-expression	172
246	break		1	equality-expression	172
246	case		1	equality-expression	172
246	char		1	equality-expression	172
246	character-constant		1	equality-expression	172
246	const		1	equality-expression	172
246	continue		1	equality-expression	172
246	default		1	equality-expression	172
246	do		1	equality-expression	172
246	double		1	equality-expression	172
246	else		1	equality-expression	172
246	enum		1	equality-expression	172
246	enumeration-constant		1	equality-expression	172
246	extern		1	equality-expression	172
246	float		1	equality-expression	172
246	floating-constant		1	equality-expression	172
246	for		1	equality-expression	172
246	goto		1	equality-expression	172
246	identifier		1	equality-expression	172
246	if		1	equality-expression	172
246	int		1	equality-expression	172
246	integer-constant		1	equality-expression	172
246	long		1	equality-expression	172
246	register		1	equality-expression	172
246	return		1	equality-expression	172
246	short		1	equality-expression	172
246	signed		1	equality-expression	172
246	sizeof		1	equality-expression	172
246	static		1	equality-expression	172
246	string-constant		1	equality-expression	172
246	switch		1	equality-expression	172
246	typedef		1	equality-expression	172
246	unsigned		1	equality-expression	172
246	void		1	equality-expression	172
246	volatile		1	equality-expression	172
246	while		1	equality-expression	172
246	{		1	equality-expression	172
246	|		1	equality-expression	172
246	|=		1	equality-expression	172
246	||		1	equality-expression	172
246	}		1	equality-expression	172
246	~		1	equality-expression	173


310	!		0	66
310	&		0	67
310	(		0	68
310	*		0	69
310	+		0	70
310	++		0	71
310	-		0	72
310	--		0	73
310	character-constant		0	81
310	enumeration-constant		0	89
310	floating-constant		0	94
310	identifier		0	133
310	integer-constant		0	100
310	sizeof		0	113
310	string-constant		0	116
310	~		0	122


374	!		1	iteration-statement	132
374	%=		1	iteration-statement	132
374	&		1	iteration-statement	132
374	&=		1	iteration-statement	132
374	(		1	iteration-statement	132
374	)		1	iteration-statement	132
374	*		1	iteration-statement	132
374	*=		1	iteration-statement	132
374	+		1	iteration-statement	132
374	++		1	iteration-statement	132
374	+=		1	iteration-statement	132
374	,		1	iteration-statement	132
374	-		1	iteration-statement	132
374	--		1	iteration-statement	132
374	-=		1	iteration-statement	132
374	/=		1	iteration-statement	132
374	;		1	iteration-statement	132
374	<<=		1	iteration-statement	132
374	=		1	iteration-statement	132
374	>>=		1	iteration-statement	132
374	^=		1	iteration-statement	132
374	_KULV_END_		1	iteration-statement	132
374	auto		1	iteration-statement	132
374	break		1	iteration-statement	132
374	case		1	iteration-statement	132
374	char		1	iteration-statement	132
374	character-constant		1	iteration-statement	132
374	const		1	iteration-statement	132
374	continue		1	iteration-statement	132
374	default		1	iteration-statement	132
374	do		1	iteration-statement	132
374	double		1	iteration-statement	132
374	else		1	iteration-statement	132
374	enumeration-constant		1	iteration-statement	132
374	extern		1	iteration-statement	132
374	float		1	iteration-statement	132
374	floating-constant		1	iteration-statement	132
374	for		1	iteration-statement	132
374	goto		1	iteration-statement	132
374	identifier		1	iteration-statement	132
374	if		1	iteration-statement	132
374	int		1	iteration-statement	132
374	integer-constant		1	iteration-statement	132
374	long		1	iteration-statement	132
374	register		1	iteration-statement	132
374	return		1	iteration-statement	132
374	short		1	iteration-statement	132
374	signed		1	iteration-statement	132
374	sizeof		1	iteration-statement	132
374	static		1	iteration-statement	132
374	string-constant		1	iteration-statement	132
374	switch		1	iteration-statement	132
374	typedef		1	iteration-statement	132
374	unsigned		1	iteration-statement	132
374	void		1	iteration-statement	132
374	volatile		1	iteration-statement	132
374	while		1	iteration-statement	132
374	{		1	iteration-statement	132
374	|=		1	iteration-statement	132
374	}		1	iteration-statement	132
374	~		1	iteration-statement	132

31	)		0	55

95	(		0	167

159	!		1	compound-statement	120
159	%=		1	compound-statement	120
159	&		1	compound-statement	120
159	&=		1	compound-statement	120
159	(		1	compound-statement	120
159	)		1	compound-statement	120
159	*		1	compound-statement	120
159	*=		1	compound-statement	120
159	+		1	compound-statement	120
159	++		1	compound-statement	120
159	+=		1	compound-statement	120
159	,		1	compound-statement	120
159	-		1	compound-statement	120
159	--		1	compound-statement	120
159	-=		1	compound-statement	120
159	/=		1	compound-statement	120
159	;		1	compound-statement	120
159	<<=		1	compound-statement	120
159	=		1	compound-statement	120
159	>>=		1	compound-statement	120
159	^=		1	compound-statement	120
159	_KULV_END_		1	compound-statement	120
159	auto		1	compound-statement	120
159	break		1	compound-statement	120
159	case		1	compound-statement	120
159	char		1	compound-statement	120
159	character-constant		1	compound-statement	120
159	const		1	compound-statement	120
159	continue		1	compound-statement	120
159	default		1	compound-statement	120
159	do		1	compound-statement	120
159	double		1	compound-statement	120
159	else		1	compound-statement	120
159	enumeration-constant		1	compound-statement	120
159	extern		1	compound-statement	120
159	float		1	compound-statement	120
159	floating-constant		1	compound-statement	120
159	for		1	compound-statement	120
159	goto		1	compound-statement	120
159	identifier		1	compound-statement	120
159	if		1	compound-statement	120
159	int		1	compound-statement	120
159	integer-constant		1	compound-statement	120
159	long		1	compound-statement	120
159	register		1	compound-statement	120
159	return		1	compound-statement	120
159	short		1	compound-statement	120
159	signed		1	compound-statement	120
159	sizeof		1	compound-statement	120
159	static		1	compound-statement	120
159	string-constant		1	compound-statement	120
159	switch		1	compound-statement	120
159	typedef		1	compound-statement	120
159	unsigned		1	compound-statement	120
159	void		1	compound-statement	120
159	volatile		1	compound-statement	120
159	while		1	compound-statement	120
159	{		1	compound-statement	120
159	|=		1	compound-statement	120
159	}		1	compound-statement	120
159	~		1	compound-statement	120


223	(		0	1
223	*		0	2
223	:		0	291
223	identifier		0	15


287	!		1	identifier-list	86
287	%=		1	identifier-list	86
287	&		1	identifier-list	86
287	&=		1	identifier-list	86
287	(		1	identifier-list	86
287	)		1	identifier-list	86
287	*		1	identifier-list	86
287	*=		1	identifier-list	86
287	+		1	identifier-list	86
287	++		1	identifier-list	86
287	+=		1	identifier-list	86
287	,		1	identifier-list	86
287	-		1	identifier-list	86
287	--		1	identifier-list	86
287	-=		1	identifier-list	86
287	/=		1	identifier-list	86
287	:		1	identifier-list	86
287	;		1	identifier-list	86
287	<<=		1	identifier-list	86
287	=		1	identifier-list	86
287	>>=		1	identifier-list	86
287	[		1	identifier-list	86
287	^=		1	identifier-list	86
287	_KULV_END_		1	identifier-list	86
287	auto		1	identifier-list	86
287	break		1	identifier-list	86
287	case		1	identifier-list	86
287	char		1	identifier-list	86
287	character-constant		1	identifier-list	86
287	const		1	identifier-list	86
287	continue		1	identifier-list	86
287	default		1	identifier-list	86
287	do		1	identifier-list	86
287	double		1	identifier-list	86
287	else		1	identifier-list	86
287	enum		1	identifier-list	86
287	enumeration-constant		1	identifier-list	86
287	extern		1	identifier-list	86
287	float		1	identifier-list	86
287	floating-constant		1	identifier-list	86
287	for		1	identifier-list	86
287	goto		1	identifier-list	86
287	identifier		1	identifier-list	86
287	if		1	identifier-list	86
287	int		1	identifier-list	86
287	integer-constant		1	identifier-list	86
287	long		1	identifier-list	86
287	register		1	identifier-list	86
287	return		1	identifier-list	86
287	short		1	identifier-list	86
287	signed		1	identifier-list	86
287	sizeof		1	identifier-list	86
287	static		1	identifier-list	86
287	string-constant		1	identifier-list	86
287	switch		1	identifier-list	86
287	typedef		1	identifier-list	86
287	unsigned		1	identifier-list	86
287	void		1	identifier-list	86
287	volatile		1	identifier-list	86
287	while		1	identifier-list	86
287	{		1	identifier-list	86
287	|=		1	identifier-list	86
287	}		1	identifier-list	86
287	~		1	identifier-list	86

351	,		1	enumerator-list	60
351	identifier		1	enumerator-list	60
351	}		1	enumerator-list	60


40	auto		0	3
40	char		0	4
40	const		0	5
40	double		0	10
40	extern		0	11
40	float		0	13
40	int		0	16
40	long		0	17
40	register		0	19
40	short		0	20
40	signed		0	21
40	static		0	22
40	typedef		0	27
40	unsigned		0	28
40	void		0	29
40	volatile		0	30
40	{		0	43


104	!		1	logical-OR-expression	160
104	!=		1	logical-OR-expression	160
104	%		1	logical-OR-expression	160
104	%=		1	logical-OR-expression	160
104	&		1	logical-OR-expression	160
104	&&		0	172
104	&=		1	logical-OR-expression	160
104	(		1	logical-OR-expression	160
104	)		1	logical-OR-expression	160
104	*		1	logical-OR-expression	160
104	*=		1	logical-OR-expression	160
104	+		1	logical-OR-expression	160
104	++		1	logical-OR-expression	160
104	+=		1	logical-OR-expression	160
104	,		1	logical-OR-expression	160
104	-		1	logical-OR-expression	160
104	--		1	logical-OR-expression	160
104	-=		1	logical-OR-expression	160
104	->		1	logical-OR-expression	160
104	.		1	logical-OR-expression	160
104	/		1	logical-OR-expression	160
104	/=		1	logical-OR-expression	160
104	:		1	logical-OR-expression	160
104	;		1	logical-OR-expression	160
104	<		1	logical-OR-expression	160
104	<<		1	logical-OR-expression	160
104	<<=		1	logical-OR-expression	160
104	<=		1	logical-OR-expression	160
104	=		1	logical-OR-expression	160
104	==		1	logical-OR-expression	160
104	>		1	logical-OR-expression	160
104	>=		1	logical-OR-expression	160
104	>>		1	logical-OR-expression	160
104	>>=		1	logical-OR-expression	160
104	?		1	logical-OR-expression	160
104	[		1	logical-OR-expression	160
104	]		1	logical-OR-expression	160
104	^		1	logical-OR-expression	160
104	^=		1	logical-OR-expression	160
104	_KULV_END_		1	logical-OR-expression	160
104	auto		1	logical-OR-expression	160
104	break		1	logical-OR-expression	160
104	case		1	logical-OR-expression	160
104	char		1	logical-OR-expression	160
104	character-constant		1	logical-OR-expression	160
104	const		1	logical-OR-expression	160
104	continue		1	logical-OR-expression	160
104	default		1	logical-OR-expression	160
104	do		1	logical-OR-expression	160
104	double		1	logical-OR-expression	160
104	else		1	logical-OR-expression	160
104	enum		1	logical-OR-expression	160
104	enumeration-constant		1	logical-OR-expression	160
104	extern		1	logical-OR-expression	160
104	float		1	logical-OR-expression	160
104	floating-constant		1	logical-OR-expression	160
104	for		1	logical-OR-expression	160
104	goto		1	logical-OR-expression	160
104	identifier		1	logical-OR-expression	160
104	if		1	logical-OR-expression	160
104	int		1	logical-OR-expression	160
104	integer-constant		1	logical-OR-expression	160
104	long		1	logical-OR-expression	160
104	register		1	logical-OR-expression	160
104	return		1	logical-OR-expression	160
104	short		1	logical-OR-expression	160
104	signed		1	logical-OR-expression	160
104	sizeof		1	logical-OR-expression	160
104	static		1	logical-OR-expression	160
104	string-constant		1	logical-OR-expression	160
104	switch		1	logical-OR-expression	160
104	typedef		1	logical-OR-expression	160
104	unsigned		1	logical-OR-expression	160
104	void		1	logical-OR-expression	160
104	volatile		1	logical-OR-expression	160
104	while		1	logical-OR-expression	160
104	{		1	logical-OR-expression	160
104	|		1	logical-OR-expression	160
104	|=		1	logical-OR-expression	160
104	||		1	logical-OR-expression	160
104	}		1	logical-OR-expression	160
104	~		1	logical-OR-expression	160


168	;		0	252


232	!		1	primary-expression	212
232	!=		1	primary-expression	212
232	%		1	primary-expression	212
232	%=		1	primary-expression	212
232	&		1	primary-expression	212
232	&&		1	primary-expression	212
232	&=		1	primary-expression	212
232	(		1	primary-expression	212
232	)		1	primary-expression	212
232	*		1	primary-expression	212
232	*=		1	primary-expression	212
232	+		1	primary-expression	212
232	++		1	primary-expression	212
232	+=		1	primary-expression	212
232	,		1	primary-expression	212
232	-		1	primary-expression	212
232	--		1	primary-expression	212
232	-=		1	primary-expression	212
232	->		1	primary-expression	212
232	.		1	primary-expression	212
232	/		1	primary-expression	212
232	/=		1	primary-expression	212
232	:		1	primary-expression	212
232	;		1	primary-expression	212
232	<		1	primary-expression	212
232	<<		1	primary-expression	212
232	<<=		1	primary-expression	212
232	<=		1	primary-expression	212
232	=		1	primary-expression	212
232	==		1	primary-expression	212
232	>		1	primary-expression	212
232	>=		1	primary-expression	212
232	>>		1	primary-expression	212
232	>>=		1	primary-expression	212
232	?		1	primary-expression	212
232	[		1	primary-expression	212
232	]		1	primary-expression	212
232	^		1	primary-expression	212
232	^=		1	primary-expression	212
232	_KULV_END_		1	primary-expression	212
232	auto		1	primary-expression	212
232	break		1	primary-expression	212
232	case		1	primary-expression	212
232	char		1	primary-expression	212
232	character-constant		1	primary-expression	212
232	const		1	primary-expression	212
232	continue		1	primary-expression	212
232	default		1	primary-expression	212
232	do		1	primary-expression	212
232	double		1	primary-expression	212
232	else		1	primary-expression	212
232	enum		1	primary-expression	212
232	enumeration-constant		1	primary-expression	212
232	extern		1	primary-expression	212
232	float		1	primary-expression	212
232	floating-constant		1	primary-expression	212
232	for		1	primary-expression	212
232	goto		1	primary-expression	212
232	identifier		1	primary-expression	212
232	if		1	primary-expression	212
232	int		1	primary-expression	212
232	integer-constant		1	primary-expression	212
232	long		1	primary-expression	212
232	register		1	primary-expression	212
232	return		1	primary-expression	212
232	short		1	primary-expression	212
232	signed		1	primary-expression	212
232	sizeof		1	primary-expression	212
232	static		1	primary-expression	212
232	string-constant		1	primary-expression	212
232	switch		1	primary-expression	212
232	typedef		1	primary-expression	212
232	unsigned		1	primary-expression	212
232	void		1	primary-expression	212
232	volatile		1	primary-expression	212
232	while		1	primary-expression	212
232	{		1	primary-expression	212
232	|		1	primary-expression	212
232	|=		1	primary-expression	212
232	||		1	primary-expression	212
232	}		1	primary-expression	212
232	~		1	primary-expression	212


296	char		1	struct-or-union-specifier	35
296	const		1	struct-or-union-specifier	35
296	double		1	struct-or-union-specifier	35
296	enum		1	struct-or-union-specifier	35
296	float		1	struct-or-union-specifier	35
296	int		1	struct-or-union-specifier	35
296	long		1	struct-or-union-specifier	35
296	short		1	struct-or-union-specifier	35
296	signed		1	struct-or-union-specifier	35
296	unsigned		1	struct-or-union-specifier	35
296	void		1	struct-or-union-specifier	35
296	volatile		1	struct-or-union-specifier	35
296	}		1	struct-or-union-specifier	35


360	!		1	iteration-statement	129
360	%=		1	iteration-statement	129
360	&		1	iteration-statement	129
360	&=		1	iteration-statement	129
360	(		1	iteration-statement	129
360	)		1	iteration-statement	129
360	*		1	iteration-statement	129
360	*=		1	iteration-statement	129
360	+		1	iteration-statement	129
360	++		1	iteration-statement	129
360	+=		1	iteration-statement	129
360	,		1	iteration-statement	129
360	-		1	iteration-statement	129
360	--		1	iteration-statement	129
360	-=		1	iteration-statement	129
360	/=		1	iteration-statement	129
360	;		1	iteration-statement	129
360	<<=		1	iteration-statement	129
360	=		1	iteration-statement	129
360	>>=		1	iteration-statement	129
360	^=		1	iteration-statement	129
360	_KULV_END_		1	iteration-statement	129
360	auto		1	iteration-statement	129
360	break		1	iteration-statement	129
360	case		1	iteration-statement	129
360	char		1	iteration-statement	129
360	character-constant		1	iteration-statement	129
360	const		1	iteration-statement	129
360	continue		1	iteration-statement	129
360	default		1	iteration-statement	129
360	do		1	iteration-statement	129
360	double		1	iteration-statement	129
360	else		1	iteration-statement	129
360	enumeration-constant		1	iteration-statement	129
360	extern		1	iteration-statement	129
360	float		1	iteration-statement	129
360	floating-constant		1	iteration-statement	129
360	for		1	iteration-statement	129
360	goto		1	iteration-statement	129
360	identifier		1	iteration-statement	129
360	if		1	iteration-statement	129
360	int		1	iteration-statement	129
360	integer-constant		1	iteration-statement	129
360	long		1	iteration-statement	129
360	register		1	iteration-statement	129
360	return		1	iteration-statement	129
360	short		1	iteration-statement	129
360	signed		1	iteration-statement	129
360	sizeof		1	iteration-statement	129
360	static		1	iteration-statement	129
360	string-constant		1	iteration-statement	129
360	switch		1	iteration-statement	129
360	typedef		1	iteration-statement	129
360	unsigned		1	iteration-statement	129
360	void		1	iteration-statement	129
360	volatile		1	iteration-statement	129
360	while		1	iteration-statement	129
360	{		1	iteration-statement	129
360	|=		1	iteration-statement	129
360	}		1	iteration-statement	129
360	~		1	iteration-statement	129


49	(		1	declaration-specifiers	18
49	)		1	declaration-specifiers	18
49	*		1	declaration-specifiers	18
49	,		1	declaration-specifiers	18
49	;		1	declaration-specifiers	18
49	[		1	declaration-specifiers	18
49	identifier		1	declaration-specifiers	18


113	!		0	66
113	&		0	67
113	(		0	192
113	*		0	69
113	+		0	70
113	++		0	71
113	-		0	72
113	--		0	73
113	character-constant		0	81
113	enumeration-constant		0	89
113	floating-constant		0	94
113	identifier		0	133
113	integer-constant		0	100
113	sizeof		0	113
113	string-constant		0	116
113	~		0	122


177	!		0	66
177	&		0	67
177	(		0	68
177	*		0	69
177	+		0	70
177	++		0	71
177	-		0	72
177	--		0	73
177	character-constant		0	81
177	enumeration-constant		0	89
177	floating-constant		0	94
177	identifier		0	133
177	integer-constant		0	100
177	sizeof		0	113
177	string-constant		0	116
177	~		0	122


241	!		1	additive-expression	183
241	!=		1	additive-expression	183
241	%		0	175
241	%=		1	additive-expression	183
241	&		1	additive-expression	183
241	&&		1	additive-expression	183
241	&=		1	additive-expression	183
241	(		1	additive-expression	183
241	)		1	additive-expression	183
241	*		0	176
241	*=		1	additive-expression	183
241	+		1	additive-expression	183
241	++		1	additive-expression	183
241	+=		1	additive-expression	183
241	,		1	additive-expression	183
241	-		1	additive-expression	183
241	--		1	additive-expression	183
241	-=		1	additive-expression	183
241	->		1	additive-expression	183
241	.		1	additive-expression	183
241	/		0	177
241	/=		1	additive-expression	183
241	:		1	additive-expression	183
241	;		1	additive-expression	183
241	<		1	additive-expression	183
241	<<		1	additive-expression	183
241	<<=		1	additive-expression	183
241	<=		1	additive-expression	183
241	=		1	additive-expression	183
241	==		1	additive-expression	183
241	>		1	additive-expression	183
241	>=		1	additive-expression	183
241	>>		1	additive-expression	183
241	>>=		1	additive-expression	183
241	?		1	additive-expression	183
241	[		1	additive-expression	183
241	]		1	additive-expression	183
241	^		1	additive-expression	183
241	^=		1	additive-expression	183
241	_KULV_END_		1	additive-expression	183
241	auto		1	additive-expression	183
241	break		1	additive-expression	183
241	case		1	additive-expression	183
241	char		1	additive-expression	183
241	character-constant		1	additive-expression	183
241	const		1	additive-expression	183
241	continue		1	additive-expression	183
241	default		1	additive-expression	183
241	do		1	additive-expression	183
241	double		1	additive-expression	183
241	else		1	additive-expression	183
241	enum		1	additive-expression	183
241	enumeration-constant		1	additive-expression	183
241	extern		1	additive-expression	183
241	float		1	additive-expression	183
241	floating-constant		1	additive-expression	183
241	for		1	additive-expression	183
241	goto		1	additive-expression	183
241	identifier		1	additive-expression	183
241	if		1	additive-expression	183
241	int		1	additive-expression	183
241	integer-constant		1	additive-expression	183
241	long		1	additive-expression	183
241	register		1	additive-expression	183
241	return		1	additive-expression	183
241	short		1	additive-expression	183
241	signed		1	additive-expression	183
241	sizeof		1	additive-expression	183
241	static		1	additive-expression	183
241	string-constant		1	additive-expression	183
241	switch		1	additive-expression	183
241	typedef		1	additive-expression	183
241	unsigned		1	additive-expression	183
241	void		1	additive-expression	183
241	volatile		1	additive-expression	183
241	while		1	additive-expression	183
241	{		1	additive-expression	183
241	|		1	additive-expression	183
241	|=		1	additive-expression	183
241	||		1	additive-expression	183
241	}		1	additive-expression	183
241	~		1	additive-expression	183




305	!		0	66
305	&		0	67
305	(		0	68
305	*		0	69
305	+		0	70
305	++		0	71
305	-		0	72
305	--		0	73
305	character-constant		0	81
305	enumeration-constant		0	89
305	floating-constant		0	94
305	identifier		0	133
305	integer-constant		0	100
305	sizeof		0	113
305	string-constant		0	116
305	~		0	122


369	!		1	iteration-statement	130
369	%=		1	iteration-statement 130
369	&		1	iteration-statement 130
369	&=		1	iteration-statement 130
369	(		1	iteration-statement 130
369	)		1	iteration-statement 130
369	*		1	iteration-statement 130
369	*=		1	iteration-statement 130
369	+		1	iteration-statement 130
369	++		1	iteration-statement 130
369	+=		1	iteration-statement 130
369	,		1	iteration-statement 130
369	-		1	iteration-statement 130
369	--		1	iteration-statement 130
369	-=		1	iteration-statement 130
369	/=		1	iteration-statement 130
369	;		1	iteration-statement 130
369	<<=		1	iteration-statement 130
369	=		1	iteration-statement 130
369	>>=		1	iteration-statement 130
369	^=		1	iteration-statement 130
369	_KULV_END_		1	iteration-statement 130
369	auto		1	iteration-statement 130
369	break		1	iteration-statement 130
369	case		1	iteration-statement 130
369	char		1	iteration-statement 130
369	character-constant		1	iteration-statement 130
369	const		1	iteration-statement 130
369	continue		1	iteration-statement 130
369	default		1	iteration-statement 130
369	do		1	iteration-statement 130
369	double		1	iteration-statement 130
369	else		1	iteration-statement 130
369	enumeration-constant		1	iteration-statement 130
369	extern		1	iteration-statement 130
369	float		1	iteration-statement 130
369	floating-constant		1	iteration-statement 130
369	for		1	iteration-statement 130
369	goto		1	iteration-statement 130
369	identifier		1	iteration-statement 130
369	if		1	iteration-statement 130
369	int		1	iteration-statement 130
369	integer-constant		1	iteration-statement 130
369	long		1	iteration-statement 130
369	register		1	iteration-statement 130
369	return		1	iteration-statement 130
369	short		1	iteration-statement 130
369	signed		1	iteration-statement 130
369	sizeof		1	iteration-statement 130
369	static		1	iteration-statement 130
369	string-constant		1	iteration-statement 130
369	switch		1	iteration-statement 130
369	typedef		1	iteration-statement 130
369	unsigned		1	iteration-statement 130
369	void		1	iteration-statement 130
369	volatile		1	iteration-statement 130
369	while		1	iteration-statement 130
369	{		1	iteration-statement 130
369	|=		1	iteration-statement 130
369	}		1	iteration-statement 130
369	~		1	iteration-statement	130




26	(		1	declaration-specifiers	15
26	)		1	declaration-specifiers	15
26	*		1	declaration-specifiers	15
26	,		1	declaration-specifiers	15
26	;		1	declaration-specifiers	15
26	[		1	declaration-specifiers	15
26	auto		0	3
26	char		0	4
26	const		0	5
26	double		0	10
26	extern		0	11
26	float		0	13
26	identifier		1	declaration-specifiers	2
26	int		0	16
26	long		0	17
26	register		0	19
26	short		0	20
26	signed		0	21
26	static		0	22
26	typedef		0	27
26	unsigned		0	28
26	void		0	29
26	volatile		0	30



90	!		1	AND-expression	168
90	!=		0	162
90	%		1	AND-expression	168
90	%=		1	AND-expression	168
90	&		1	AND-expression 168
90	&&		1	AND-expression 168
90	&=		1	AND-expression 168
90	(		1	AND-expression 168
90	)		1	AND-expression 168
90	*		1	AND-expression 168
90	*=		1	AND-expression 168
90	+		1	AND-expression 168
90	++		1	AND-expression 168
90	+=		1	AND-expression 168
90	,		1	AND-expression 168
90	-		1	AND-expression 168
90	--		1	AND-expression 168
90	-=		1	AND-expression 168
90	->		1	AND-expression 168
90	.		1	AND-expression 168
90	/		1	AND-expression 168
90	/=		1	AND-expression 168
90	:		1	AND-expression 168
90	;		1	AND-expression 168
90	<		1	AND-expression 168
90	<<		1	AND-expression 168
90	<<=		1	AND-expression 168
90	<=		1	AND-expression 168
90	=		1	AND-expression 168
90	==		0	163
90	>		1	AND-expression 168
90	>=		1	AND-expression 168
90	>>		1	AND-expression 168
90	>>=		1	AND-expression 168
90	?		1	AND-expression 168
90	[		1	AND-expression 168
90	]		1	AND-expression 168
90	^		1	AND-expression 168
90	^=		1	AND-expression 168
90	_KULV_END_		1	AND-expression 168
90	auto		1	AND-expression 168
90	break		1	AND-expression 168
90	case		1	AND-expression 168
90	char		1	AND-expression 168
90	character-constant		1	AND-expression 168
90	const		1	AND-expression 168
90	continue		1	AND-expression 168
90	default		1	AND-expression 168
90	do		1	AND-expression 168
90	double		1	AND-expression 168
90	else		1	AND-expression 168
90	enum		1	AND-expression 168
90	enumeration-constant		1	AND-expression 168
90	extern		1	AND-expression 168
90	float		1	AND-expression 168
90	floating-constant		1	AND-expression 168
90	for		1	AND-expression 168
90	goto		1	AND-expression 168
90	identifier		1	AND-expression 168
90	if		1	AND-expression 168
90	int		1	AND-expression 168
90	integer-constant		1	AND-expression 168
90	long		1	AND-expression 168
90	register		1	AND-expression 168
90	return		1	AND-expression 168
90	short		1	AND-expression 168
90	signed		1	AND-expression 168
90	sizeof		1	AND-expression 168
90	static		1	AND-expression 168
90	string-constant		1	AND-expression 168
90	switch		1	AND-expression 168
90	typedef		1	AND-expression 168
90	unsigned		1	AND-expression 168
90	void		1	AND-expression 168
90	volatile		1	AND-expression 168
90	while		1	AND-expression 168
90	{		1	AND-expression 168
90	|		1	AND-expression 168
90	|=		1	AND-expression 168
90	||		1	AND-expression 168
90	}		1	AND-expression 168
90	~		1	AND-expression 168


154	!		0	66
154	&		0	67
154	(		0	68
154	*		0	69
154	+		0	70
154	++		0	71
154	-		0	72
154	--		0	73
154	character-constant		0	81
154	enumeration-constant		0	89
154	floating-constant		0	94
154	identifier		0	133
154	integer-constant		0	100
154	sizeof		0	113
154	string-constant		0	116
154	~		0	122
218	identifier		0	287


282	(		1	direct-abstract-declarator	98
282	)		1	direct-abstract-declarator	98
282	,		1	direct-abstract-declarator	98
282	[		1	direct-abstract-declarator	98



346	(		1	direct-abstract-declarator	105
346	)		1	direct-abstract-declarator	105
346	,		1	direct-abstract-declarator	105
346	[		1	direct-abstract-declarator	105


35	!		1	declaration	9
35	%=		1	declaration	9
35	&		1	declaration	9
35	&=		1	declaration	9
35	(		1	declaration	9
35	)		1	declaration	9
35	*		1	declaration	9
35	*=		1	declaration	9
35	+		1	declaration	9
35	++		1	declaration	9
35	+=		1	declaration	9
35	,		1	declaration	9
35	-		1	declaration	9
35	--		1	declaration	9
35	-=		1	declaration	9
35	/=		1	declaration	9
35	;		1	declaration	9
35	<<=		1	declaration	9
35	=		1	declaration	9
35	>>=		1	declaration	9
35	^=		1	declaration	9
35	_KULV_END_		1	declaration	9
35	auto		1	declaration	9
35	break		1	declaration	9
35	case		1	declaration	9
35	char		1	declaration	9
35	character-constant		1	declaration	9
35	const		1	declaration	9
35	continue		1	declaration	9
35	default		1	declaration	9
35	do		1	declaration	9
35	double		1	declaration	9
35	else		1	declaration	9
35	enumeration-constant		1	declaration	9
35	extern		1	declaration	9
35	float		1	declaration	9
35	floating-constant		1	declaration	9
35	for		1	declaration	9
35	goto		1	declaration	9
35	identifier		1	declaration	9
35	if		1	declaration	9
35	int		1	declaration	9
35	integer-constant		1	declaration	9
35	long		1	declaration	9
35	register		1	declaration	9
35	return		1	declaration	9
35	short		1	declaration	9
35	signed		1	declaration	9
35	sizeof		1	declaration	9
35	static		1	declaration	9
35	string-constant		1	declaration	9
35	switch		1	declaration	9
35	typedef		1	declaration	9
35	unsigned		1	declaration	9
35	void		1	declaration	9
35	volatile		1	declaration	9
35	while		1	declaration	9
35	{		1	declaration	9
35	|=		1	declaration	9
35	}		1	declaration	9
35	~		1	declaration	9


99	!		1	logical-AND-expression	162
99	!=		1	logical-AND-expression	162
99	%		1	logical-AND-expression	162
99	%=		1	logical-AND-expression	162
99	&		1	logical-AND-expression	162
99	&&		1	logical-AND-expression	162
99	&=		1	logical-AND-expression	162
99	(		1	logical-AND-expression	162
99	)		1	logical-AND-expression	162
99	*		1	logical-AND-expression	162
99	*=		1	logical-AND-expression	162
99	+		1	logical-AND-expression	162
99	++		1	logical-AND-expression	162
99	+=		1	logical-AND-expression	162
99	,		1	logical-AND-expression	162
99	-		1	logical-AND-expression	162
99	--		1	logical-AND-expression	162
99	-=		1	logical-AND-expression	162
99	->		1	logical-AND-expression	162
99	.		1	logical-AND-expression	162
99	/		1	logical-AND-expression	162
99	/=		1	logical-AND-expression	162
99	:		1	logical-AND-expression	162
99	;		1	logical-AND-expression	162
99	<		1	logical-AND-expression	162
99	<<		1	logical-AND-expression	162
99	<<=		1	logical-AND-expression	162
99	<=		1	logical-AND-expression	162
99	=		1	logical-AND-expression	162
99	==		1	logical-AND-expression	162
99	>		1	logical-AND-expression	162
99	>=		1	logical-AND-expression	162
99	>>		1	logical-AND-expression	162
99	>>=		1	logical-AND-expression	162
99	?		1	logical-AND-expression	162
99	[		1	logical-AND-expression	162
99	]		1	logical-AND-expression	162
99	^		1	logical-AND-expression	162
99	^=		1	logical-AND-expression	162
99	_KULV_END_		1	logical-AND-expression	162
99	auto		1	logical-AND-expression	162
99	break		1	logical-AND-expression	162
99	case		1	logical-AND-expression	162
99	char		1	logical-AND-expression	162
99	character-constant		1	logical-AND-expression	162
99	const		1	logical-AND-expression	162
99	continue		1	logical-AND-expression	162
99	default		1	logical-AND-expression	162
99	do		1	logical-AND-expression	162
99	double		1	logical-AND-expression	162
99	else		1	logical-AND-expression	162
99	enum		1	logical-AND-expression	162
99	enumeration-constant		1	logical-AND-expression	162
99	extern		1	logical-AND-expression	162
99	float		1	logical-AND-expression	162
99	floating-constant		1	logical-AND-expression	162
99	for		1	logical-AND-expression	162
99	goto		1	logical-AND-expression	162
99	identifier		1	logical-AND-expression	162
99	if		1	logical-AND-expression	162
99	int		1	logical-AND-expression	162
99	integer-constant		1	logical-AND-expression	162
99	long		1	logical-AND-expression	162
99	register		1	logical-AND-expression	162
99	return		1	logical-AND-expression	162
99	short		1	logical-AND-expression	162
99	signed		1	logical-AND-expression	162
99	sizeof		1	logical-AND-expression	162
99	static		1	logical-AND-expression	162
99	string-constant		1	logical-AND-expression	162
99	switch		1	logical-AND-expression	162
99	typedef		1	logical-AND-expression	162
99	unsigned		1	logical-AND-expression	162
99	void		1	logical-AND-expression	162
99	volatile		1	logical-AND-expression	162
99	while		1	logical-AND-expression	162
99	{		1	logical-AND-expression	162
99	|		0	171
99	|=		1	logical-AND-expression	162
99	||		1	logical-AND-expression	162
99	}		1	logical-AND-expression	162
99	~		1	logical-AND-expression	162



163	!		0	66
163	&		0	67
163	(		0	68
163	*		0	69
163	+		0	70
163	++		0	71
163	-		0	72
163	--		0	73
163	character-constant		0	81
163	enumeration-constant		0	89
163	floating-constant		0	94
163	identifier		0	133
163	integer-constant		0	100
163	sizeof		0	113
163	string-constant		0	116
163	~		0	122


227	identifier		0	300


291	!		0	66
291	&		0	67
291	(		0	68
291	*		0	69
291	+		0	70
291	++		0	71
291	-		0	72
291	--		0	73
291	character-constant		0	81
291	enumeration-constant		0	89
291	floating-constant		0	94
291	identifier		0	133
291	integer-constant		0	100
291	sizeof		0	113
291	string-constant		0	116
291	~		0	122
355	)		0	365
355	,		0	165


12	(		1	translation-unit	1
12	*		1	translation-unit	1
12	_KULV_END_		1	translation-unit	1
12	auto		1	translation-unit	1
12	char		1	translation-unit	1
12	const		1	translation-unit	1
12	double		1	translation-unit	1
12	extern		1	translation-unit	1
12	float		1	translation-unit	1
12	identifier		1	translation-unit	1
12	int		1	translation-unit	1
12	long		1	translation-unit	1
12	register		1	translation-unit	1
12	short		1	translation-unit	1
12	signed		1	translation-unit	1
12	static		1	translation-unit	1
12	typedef		1	translation-unit	1
12	unsigned		1	translation-unit	1
12	void		1	translation-unit	1
12	volatile		1	translation-unit	1


76	!		1	shift-expression	178
76	!=		1	shift-expression	178
76	%		1	shift-expression	178
76	%=		1	shift-expression	178
76	&		1	shift-expression	178
76	&&		1	shift-expression	178
76	&=		1	shift-expression	178
76	(		1	shift-expression	178
76	)		1	shift-expression	178
76	*		1	shift-expression	178
76	*=		1	shift-expression	178
76	+		0	153
76	++		1	shift-expression	178
76	+=		1	shift-expression	178
76	,		1	shift-expression	178
76	-		0	154
76	--		1	shift-expression	178
76	-=		1	shift-expression	178
76	->		1	shift-expression	178
76	.		1	shift-expression	178
76	/		1	shift-expression	178
76	/=		1	shift-expression	178
76	:		1	shift-expression	178
76	;		1	shift-expression	178
76	<		1	shift-expression	178
76	<<		1	shift-expression	178
76	<<=		1	shift-expression	178
76	<=		1	shift-expression	178
76	=		1	shift-expression	178
76	==		1	shift-expression	178
76	>		1	shift-expression	178
76	>=		1	shift-expression	178
76	>>		1	shift-expression	178
76	>>=		1	shift-expression	178
76	?		1	shift-expression	178
76	[		1	shift-expression	178
76	]		1	shift-expression	178
76	^		1	shift-expression	178
76	^=		1	shift-expression	178
76	_KULV_END_		1	shift-expression	178
76	auto		1	shift-expression	178
76	break		1	shift-expression	178
76	case		1	shift-expression	178
76	char		1	shift-expression	178
76	character-constant		1	shift-expression	178
76	const		1	shift-expression	178
76	continue		1	shift-expression	178
76	default		1	shift-expression	178
76	do		1	shift-expression	178
76	double		1	shift-expression	178
76	else		1	shift-expression	178
76	enum		1	shift-expression	178
76	enumeration-constant		1	shift-expression	178
76	extern		1	shift-expression	178
76	float		1	shift-expression	178
76	floating-constant		1	shift-expression	178
76	for		1	shift-expression	178
76	goto		1	shift-expression	178
76	identifier		1	shift-expression	178
76	if		1	shift-expression	178
76	int		1	shift-expression	178
76	integer-constant		1	shift-expression	178
76	long		1	shift-expression	178
76	register		1	shift-expression	178
76	return		1	shift-expression	178
76	short		1	shift-expression	178
76	signed		1	shift-expression	178
76	sizeof		1	shift-expression	178
76	static		1	shift-expression	178
76	string-constant		1	shift-expression	178
76	switch		1	shift-expression	178
76	typedef		1	shift-expression	178
76	unsigned		1	shift-expression	178
76	void		1	shift-expression	178
76	volatile		1	shift-expression	178
76	while		1	shift-expression	178
76	{		1	shift-expression	178
76	|		1	shift-expression	178
76	|=		1	shift-expression	178
76	||		1	shift-expression	178
76	}		1	shift-expression	178
76	~		1	shift-expression	178


140	!		1	initializer	87
140	%=		1	initializer	87
140	&		1	initializer	87
140	&=		1	initializer	87
140	(		1	initializer	87
140	)		1	initializer	87
140	*		1	initializer	87
140	*=		1	initializer	87
140	+		1	initializer	87
140	++		1	initializer	87
140	+=		1	initializer	87
140	,		1	initializer	87
140	-		1	initializer	87
140	--		1	initializer	87
140	-=		1	initializer	87
140	/=		1	initializer	87
140	;		1	initializer	87
140	<<=		1	initializer	87
140	=		1	initializer	87
140	>>=		1	initializer	87
140	^=		1	initializer	87
140	_KULV_END_		1	initializer	87
140	auto		1	initializer	87
140	break		1	initializer	87
140	case		1	initializer	87
140	char		1	initializer	87
140	character-constant		1	initializer	87
140	const		1	initializer	87
140	continue		1	initializer	87
140	default		1	initializer	87
140	do		1	initializer	87
140	double		1	initializer	87
140	else		1	initializer	87
140	enumeration-constant		1	initializer	87
140	extern		1	initializer	87
140	float		1	initializer	87
140	floating-constant		1	initializer	87
140	for		1	initializer	87
140	goto		1	initializer	87
140	identifier		1	initializer	87
140	if		1	initializer	87
140	int		1	initializer	87
140	integer-constant		1	initializer	87
140	long		1	initializer	87
140	register		1	initializer	87
140	return		1	initializer	87
140	short		1	initializer	87
140	signed		1	initializer	87
140	sizeof		1	initializer	87
140	static		1	initializer	87
140	string-constant		1	initializer	87
140	switch		1	initializer	87
140	typedef		1	initializer	87
140	unsigned		1	initializer	87
140	void		1	initializer	87
140	volatile		1	initializer	87
140	while		1	initializer	87
140	{		1	initializer	87
140	|=		1	initializer	87
140	}		1	initializer	87
140	~		1	initializer	87


204	!		1	assignment-operator	146
204	&		1	assignment-operator	146
204	(		1	assignment-operator	146
204	*		1	assignment-operator	146
204	+		1	assignment-operator	146
204	++		1	assignment-operator	146
204	-		1	assignment-operator	146
204	--		1	assignment-operator	146
204	character-constant		1	assignment-operator	146
204	enumeration-constant		1	assignment-operator	146
204	floating-constant		1	assignment-operator	146
204	identifier		1	assignment-operator	146
204	integer-constant		1	assignment-operator	146
204	sizeof		1	assignment-operator	146
204	string-constant		1	assignment-operator	146
204	~		1	assignment-operator	146


268	!		1	relational-expression	174
268	!=		1	relational-expression	174
268	%		1	relational-expression	174
268	%=		1	relational-expression	174
268	&		1	relational-expression	174
268	&&		1	relational-expression	174
268	&=		1	relational-expression	174
268	(		1	relational-expression	174
268	)		1	relational-expression	174
268	*		1	relational-expression	174
268	*=		1	relational-expression	174
268	+		1	relational-expression	174
268	++		1	relational-expression	174
268	+=		1	relational-expression	174
268	,		1	relational-expression	174
268	-		1	relational-expression	174
268	--		1	relational-expression	174
268	-=		1	relational-expression	174
268	->		1	relational-expression	174
268	.		1	relational-expression	174
268	/		1	relational-expression	174
268	/=		1	relational-expression	174
268	:		1	relational-expression	174
268	;		1	relational-expression	174
268	<		1	relational-expression	174
268	<<		0	190
268	<<=		1	relational-expression	174
268	<=		1	relational-expression	174
268	=		1	relational-expression	174
268	==		1	relational-expression	174
268	>		1	relational-expression	174
268	>=		1	relational-expression	174
268	>>		0	191
268	>>=		1	relational-expression	174
268	?		1	relational-expression	174
268	[		1	relational-expression	174
268	]		1	relational-expression	174
268	^		1	relational-expression	174
268	^=		1	relational-expression	174
268	_KULV_END_		1	relational-expression	174
268	auto		1	relational-expression	174
268	break		1	relational-expression	174
268	case		1	relational-expression	174
268	char		1	relational-expression	174
268	character-constant		1	relational-expression	174
268	const		1	relational-expression	174
268	continue		1	relational-expression	174
268	default		1	relational-expression	174
268	do		1	relational-expression	174
268	double		1	relational-expression	174
268	else		1	relational-expression	174
268	enum		1	relational-expression	174
268	enumeration-constant		1	relational-expression	174
268	extern		1	relational-expression	174
268	float		1	relational-expression	174
268	floating-constant		1	relational-expression	174
268	for		1	relational-expression	174
268	goto		1	relational-expression	174
268	identifier		1	relational-expression	174
268	if		1	relational-expression	174
268	int		1	relational-expression	174
268	integer-constant		1	relational-expression	174
268	long		1	relational-expression	174
268	register		1	relational-expression	174
268	return		1	relational-expression	174
268	short		1	relational-expression	174
268	signed		1	relational-expression	174
268	sizeof		1	relational-expression	174
268	static		1	relational-expression	174
268	string-constant		1	relational-expression	174
268	switch		1	relational-expression	174
268	typedef		1	relational-expression	174
268	unsigned		1	relational-expression	174
268	void		1	relational-expression	174
268	volatile		1	relational-expression	174
268	while		1	relational-expression	174
268	{		1	relational-expression	174
268	|		1	relational-expression	174
268	|=		1	relational-expression	174
268	||		1	relational-expression	174
268	}		1	relational-expression	174
268	~		1	relational-expression	174


332	!		0	66
332	&		0	67
332	(		0	68
332	*		0	69
332	+		0	70
332	++		0	71
332	-		0	72
332	--		0	73
332	character-constant		0	81
332	enumeration-constant		0	89
332	floating-constant		0	94
332	identifier		0	133
332	integer-constant		0	100
332	sizeof		0	113
332	string-constant		0	116
332	~		0	122


21	(		1	type-specifier	31
21	)		1	type-specifier	31
21	*		1	type-specifier	31
21	,		1	type-specifier	31
21	:		1	type-specifier	31
21	;		1	type-specifier	31
21	[		1	type-specifier	31
21	auto		1	type-specifier	31
21	char		1	type-specifier	31
21	const		1	type-specifier	31
21	double		1	type-specifier	31
21	extern		1	type-specifier	31
21	float		1	type-specifier	31
21	identifier		1	type-specifier	31
21	int		1	type-specifier	31
21	long		1	type-specifier	31
21	register		1	type-specifier	31
21	short		1	type-specifier	31
21	signed		1	type-specifier	31
21	static		1	type-specifier	31
21	typedef		1	type-specifier	31
21	unsigned		1	type-specifier	31
21	void		1	type-specifier	31
21	volatile		1	type-specifier	31


85	;		0	157


149	!		0	66
149	&		0	67
149	(		0	68
149	*		0	69
149	+		0	70
149	++		0	71
149	-		0	72
149	--		0	73
149	character-constant		0	81
149	enumeration-constant		0	89
149	floating-constant		0	94
149	identifier		0	133
149	integer-constant		0	100
149	sizeof		0	113
149	string-constant		0	116
149	~		0	122


213	)		1	parameter-declaration	84
213	,		1	parameter-declaration	84


277	!		1	assignment-expression	145
277	!=		1	assignment-expression	145
277	%		1	assignment-expression	145
277	%=		1	assignment-expression	145
277	&		1	assignment-expression	145
277	&&		1	assignment-expression	145
277	&=		1	assignment-expression	145
277	(		1	assignment-expression	145
277	)		1	assignment-expression	145
277	*		1	assignment-expression	145
277	*=		1	assignment-expression	145
277	+		1	assignment-expression	145
277	++		1	assignment-expression	145
277	+=		1	assignment-expression	145
277	,		1	assignment-expression	145
277	-		1	assignment-expression	145
277	--		1	assignment-expression	145
277	-=		1	assignment-expression	145
277	->		1	assignment-expression	145
277	.		1	assignment-expression	145
277	/		1	assignment-expression	145
277	/=		1	assignment-expression	145
277	:		1	assignment-expression	145
277	;		1	assignment-expression	145
277	<		1	assignment-expression	145
277	<<		1	assignment-expression	145
277	<<=		1	assignment-expression	145
277	<=		1	assignment-expression	145
277	=		1	assignment-expression	145
277	==		1	assignment-expression	145
277	>		1	assignment-expression	145
277	>=		1	assignment-expression	145
277	>>		1	assignment-expression	145
277	>>=		1	assignment-expression	145
277	?		1	assignment-expression	145
277	[		1	assignment-expression	145
277	]		1	assignment-expression	145
277	^		1	assignment-expression	145
277	^=		1	assignment-expression	145
277	_KULV_END_		1	assignment-expression	145
277	auto		1	assignment-expression	145
277	break		1	assignment-expression	145
277	case		1	assignment-expression	145
277	char		1	assignment-expression	145
277	character-constant		1	assignment-expression	145
277	const		1	assignment-expression	145
277	continue		1	assignment-expression	145
277	default		1	assignment-expression	145
277	do		1	assignment-expression	145
277	double		1	assignment-expression	145
277	else		1	assignment-expression	145
277	enum		1	assignment-expression	145
277	enumeration-constant		1	assignment-expression	145
277	extern		1	assignment-expression	145
277	float		1	assignment-expression	145
277	floating-constant		1	assignment-expression	145
277	for		1	assignment-expression	145
277	goto		1	assignment-expression	145
277	identifier		1	assignment-expression	145
277	if		1	assignment-expression	145
277	int		1	assignment-expression	145
277	integer-constant		1	assignment-expression	145
277	long		1	assignment-expression	145
277	register		1	assignment-expression	145
277	return		1	assignment-expression	145
277	short		1	assignment-expression	145
277	signed		1	assignment-expression	145
277	sizeof		1	assignment-expression	145
277	static		1	assignment-expression	145
277	string-constant		1	assignment-expression	145
277	switch		1	assignment-expression	145
277	typedef		1	assignment-expression	145
277	unsigned		1	assignment-expression	145
277	void		1	assignment-expression	145
277	volatile		1	assignment-expression	145
277	while		1	assignment-expression	145
277	{		1	assignment-expression	145
277	|		1	assignment-expression	145
277	|=		1	assignment-expression	145
277	||		1	assignment-expression	145
277	}		1	assignment-expression	145
277	~		1	assignment-expression	145


341	!		1	selection-statement	124
341	%=		1	selection-statement	124
341	&		1	selection-statement	124
341	&=		1	selection-statement	124
341	(		1	selection-statement	124
341	)		1	selection-statement	124
341	*		1	selection-statement	124
341	*=		1	selection-statement	124
341	+		1	selection-statement	124
341	++		1	selection-statement	124
341	+=		1	selection-statement	124
341	,		1	selection-statement	124
341	-		1	selection-statement	124
341	--		1	selection-statement	124
341	-=		1	selection-statement	124
341	/=		1	selection-statement	124
341	;		1	selection-statement	124
341	<<=		1	selection-statement	124
341	=		1	selection-statement	124
341	>>=		1	selection-statement	124
341	^=		1	selection-statement	124
341	_KULV_END_		1	selection-statement	124
341	auto		1	selection-statement	124
341	break		1	selection-statement	124
341	case		1	selection-statement	124
341	char		1	selection-statement	124
341	character-constant		1	selection-statement	124
341	const		1	selection-statement	124
341	continue		1	selection-statement	124
341	default		1	selection-statement	124
341	do		1	selection-statement	124
341	double		1	selection-statement	124
341	else		124	361
341	enumeration-constant		1	selection-statement	124
341	extern		1	selection-statement	124
341	float		1	selection-statement	124
341	floating-constant		1	selection-statement	124
341	for		1	selection-statement	124
341	goto		1	selection-statement	124
341	identifier		1	selection-statement	124
341	if		1	selection-statement	124
341	int		1	selection-statement	124
341	integer-constant		1	selection-statement	124
341	long		1	selection-statement	124
341	register		1	selection-statement	124
341	return		1	selection-statement	124
341	short		1	selection-statement	124
341	signed		1	selection-statement	124
341	sizeof		1	selection-statement	124
341	static		1	selection-statement	124
341	string-constant		1	selection-statement	124
341	switch		1	selection-statement	124
341	typedef		1	selection-statement	124
341	unsigned		1	selection-statement	124
341	void		1	selection-statement	124
341	volatile		1	selection-statement	124
341	while		1	selection-statement	124
341	{		1	selection-statement	124
341	|=		1	selection-statement	124
341	}		1	selection-statement	124
341	~		1	selection-statement	124


62	(		0	1
62	*		0	2
62	identifier		0	15


126	)		0	219


190	!		0	66
190	&		0	67
190	(		0	68
190	*		0	69
190	+		0	70
190	++		0	71
190	-		0	72
190	--		0	73
190	character-constant		0	81
190	enumeration-constant		0	89
190	floating-constant		0	94
190	identifier		0	133
190	integer-constant		0	100
190	sizeof		0	113
190	string-constant		0	116
190	~		0	122


254	)		0	309
254	,		0	165


318	(		1	direct-abstract-declarator	103
318	)		1	direct-abstract-declarator	103
318	,		1	direct-abstract-declarator	103
318	[		1	direct-abstract-declarator	103


7	(		0	1
7	*		0	2
7	;		0	35
7	identifier		0	15


71	!		0	66
71	&		0	67
71	(		0	149
71	*		0	69
71	+		0	70
71	++		0	71
71	-		0	72
71	--		0	73
71	character-constant		0	81
71	enumeration-constant		0	89
71	floating-constant		0	94
71	identifier		0	133
71	integer-constant		0	100
71	sizeof		0	113
71	string-constant		0	116
71	~		0	122


135	enum		1	struct-or-union-specifier	37


135	{		0	222


199	!		1	assignment-operator	147
199	&		1	assignment-operator	147
199	(		1	assignment-operator	147
199	*		1	assignment-operator	147
199	+		1	assignment-operator	147
199	++		1	assignment-operator	147
199	-		1	assignment-operator	147
199	--		1	assignment-operator	147
199	character-constant		1	assignment-operator	147
199	enumeration-constant		1	assignment-operator	147
199	floating-constant		1	assignment-operator	147
199	identifier		1	assignment-operator	147
199	integer-constant		1	assignment-operator	147
199	sizeof		1	assignment-operator	147
199	string-constant		1	assignment-operator	147
199	~		1	assignment-operator	147


263	)		1	argument-expression-list	213
263	,		1	argument-expression-list	213


327	,		1	struct-declaration	46
327	;		1	struct-declaration	46
327	char		1	struct-declaration	46
327	const		1	struct-declaration	46
327	double		1	struct-declaration	46
327	enum		1	struct-declaration	46
327	float		1	struct-declaration	46
327	int		1	struct-declaration	46
327	long		1	struct-declaration	46
327	short		1	struct-declaration	46
327	signed		1	struct-declaration	46
327	unsigned		1	struct-declaration	46
327	void		1	struct-declaration	46
327	volatile		1	struct-declaration	46
327	}		1	struct-declaration	46


16	(		1	type-specifier	27
16	)		1	type-specifier	27
16	*		1	type-specifier	27
16	,		1	type-specifier	27
16	:		1	type-specifier	27
16	;		1	type-specifier	27
16	[		1	type-specifier	27
16	auto		1	type-specifier	27
16	char		1	type-specifier	27
16	const		1	type-specifier	27
16	double		1	type-specifier	27
16	extern		1	type-specifier	27
16	float		1	type-specifier	27
16	identifier		1	type-specifier	27
16	int		1	type-specifier	27
16	long		1	type-specifier	27
16	register		1	type-specifier	27
16	short		1	type-specifier	27
16	signed		1	type-specifier	27
16	static		1	type-specifier	27
16	typedef		1	type-specifier	27
16	unsigned		1	type-specifier	27
16	void		1	type-specifier	27
16	volatile		1	type-specifier	27


80	!		1	multiplicative-expression	184
80	!=		1	multiplicative-expression	184
80	%		1	multiplicative-expression	184
80	%=		1	multiplicative-expression	184
80	&		1	multiplicative-expression	184
80	&&		1	multiplicative-expression	184
80	&=		1	multiplicative-expression	184
80	(		1	multiplicative-expression	184
80	)		1	multiplicative-expression	184
80	*		1	multiplicative-expression	184
80	*=		1	multiplicative-expression	184
80	+		1	multiplicative-expression	184
80	++		1	multiplicative-expression	184
80	+=		1	multiplicative-expression	184
80	,		1	multiplicative-expression	184
80	-		1	multiplicative-expression	184
80	--		1	multiplicative-expression	184
80	-=		1	multiplicative-expression	184
80	->		1	multiplicative-expression	184
80	.		1	multiplicative-expression	184
80	/		1	multiplicative-expression	184
80	/=		1	multiplicative-expression	184
80	:		1	multiplicative-expression	184
80	;		1	multiplicative-expression	184
80	<		1	multiplicative-expression	184
80	<<		1	multiplicative-expression	184
80	<<=		1	multiplicative-expression	184
80	<=		1	multiplicative-expression	184
80	=		1	multiplicative-expression	184
80	==		1	multiplicative-expression	184
80	>		1	multiplicative-expression	184
80	>=		1	multiplicative-expression	184
80	>>		1	multiplicative-expression	184
80	>>=		1	multiplicative-expression	184
80	?		1	multiplicative-expression	184
80	[		1	multiplicative-expression	184
80	]		1	multiplicative-expression	184
80	^		1	multiplicative-expression	184
80	^=		1	multiplicative-expression	184
80	_KULV_END_		1	multiplicative-expression	184
80	auto		1	multiplicative-expression	184
80	break		1	multiplicative-expression	184
80	case		1	multiplicative-expression	184
80	char		1	multiplicative-expression	184
80	character-constant		1	multiplicative-expression	184
80	const		1	multiplicative-expression	184
80	continue		1	multiplicative-expression	184
80	default		1	multiplicative-expression	184
80	do		1	multiplicative-expression	184
80	double		1	multiplicative-expression	184
80	else		1	multiplicative-expression	184
80	enum		1	multiplicative-expression	184
80	enumeration-constant		1	multiplicative-expression	184
80	extern		1	multiplicative-expression	184
80	float		1	multiplicative-expression	184
80	floating-constant		1	multiplicative-expression	184
80	for		1	multiplicative-expression	184
80	goto		1	multiplicative-expression	184
80	identifier		1	multiplicative-expression	184
80	if		1	multiplicative-expression	184
80	int		1	multiplicative-expression	184
80	integer-constant		1	multiplicative-expression	184
80	long		1	multiplicative-expression	184
80	register		1	multiplicative-expression	184
80	return		1	multiplicative-expression	184
80	short		1	multiplicative-expression	184
80	signed		1	multiplicative-expression	184
80	sizeof		1	multiplicative-expression	184
80	static		1	multiplicative-expression	184
80	string-constant		1	multiplicative-expression	184
80	switch		1	multiplicative-expression	184
80	typedef		1	multiplicative-expression	184
80	unsigned		1	multiplicative-expression	184
80	void		1	multiplicative-expression	184
80	volatile		1	multiplicative-expression	184
80	while		1	multiplicative-expression	184
80	{		1	multiplicative-expression	184
80	|		1	multiplicative-expression	184
80	|=		1	multiplicative-expression	184
80	||		1	multiplicative-expression	184
80	}		1	multiplicative-expression	184
80	~		1	multiplicative-expression	184


144	)		0	232
144	,		0	165


208	!		1	assignment-operator	156
208	&		1	assignment-operator	156
208	(		1	assignment-operator	156
208	*		1	assignment-operator	156
208	+		1	assignment-operator	156
208	++		1	assignment-operator	156
208	-		1	assignment-operator	156
208	--		1	assignment-operator	156
208	character-constant		1	assignment-operator	156
208	enumeration-constant		1	assignment-operator	156
208	floating-constant		1	assignment-operator	156
208	identifier		1	assignment-operator	156
208	integer-constant		1	assignment-operator	156
208	sizeof		1	assignment-operator	156
208	string-constant		1	assignment-operator	156
208	~		1	assignment-operator	156


272	!		1	jump-statement	141
272	%=		1	jump-statement	141
272	&		1	jump-statement	141
272	&=		1	jump-statement	141
272	(		1	jump-statement	141
272	)		1	jump-statement	141
272	*		1	jump-statement	141
272	*=		1	jump-statement	141
272	+		1	jump-statement	141
272	++		1	jump-statement	141
272	+=		1	jump-statement	141
272	,		1	jump-statement	141
272	-		1	jump-statement	141
272	--		1	jump-statement	141
272	-=		1	jump-statement	141
272	/=		1	jump-statement	141
272	;		1	jump-statement	141
272	<<=		1	jump-statement	141
272	=		1	jump-statement	141
272	>>=		1	jump-statement	141
272	^=		1	jump-statement	141
272	_KULV_END_		1	jump-statement	141
272	auto		1	jump-statement	141
272	break		1	jump-statement	141
272	case		1	jump-statement	141
272	char		1	jump-statement	141
272	character-constant		1	jump-statement	141
272	const		1	jump-statement	141
272	continue		1	jump-statement	141
272	default		1	jump-statement	141
272	do		1	jump-statement	141
272	double		1	jump-statement	141
272	else		1	jump-statement	141
272	enumeration-constant		1	jump-statement	141
272	extern		1	jump-statement	141
272	float		1	jump-statement	141
272	floating-constant		1	jump-statement	141
272	for		1	jump-statement	141
272	goto		1	jump-statement	141
272	identifier		1	jump-statement	141
272	if		1	jump-statement	141
272	int		1	jump-statement	141
272	integer-constant		1	jump-statement	141
272	long		1	jump-statement	141
272	register		1	jump-statement	141
272	return		1	jump-statement	141
272	short		1	jump-statement	141
272	signed		1	jump-statement	141
272	sizeof		1	jump-statement	141
272	static		1	jump-statement	141
272	string-constant		1	jump-statement	141
272	switch		1	jump-statement	141
272	typedef		1	jump-statement	141
272	unsigned		1	jump-statement	141
272	void		1	jump-statement	141
272	volatile		1	jump-statement	141
272	while		1	jump-statement	141
272	{		1	jump-statement	141
272	|=		1	jump-statement	141
272	}		1	jump-statement	141
272	~		1	jump-statement	141


336	,		0	165
336	;		0	354


57	(		1	type-qualifier-list	77
57	)		1	type-qualifier-list	77
57	*		1	type-qualifier-list	77
57	,		1	type-qualifier-list	77
57	[		1	type-qualifier-list	77
57	const		1	type-qualifier-list	77
57	identifier		1	type-qualifier-list	77
57	volatile		1	type-qualifier-list	77


121	!		1	compound-statement	118
121	%=		1	compound-statement	118
121	&		1	compound-statement	118
121	&=		1	compound-statement	118
121	(		1	compound-statement	118
121	)		1	compound-statement	118
121	*		1	compound-statement	118
121	*=		1	compound-statement	118
121	+		1	compound-statement	118
121	++		1	compound-statement	118
121	+=		1	compound-statement	118
121	,		1	compound-statement	118
121	-		1	compound-statement	118
121	--		1	compound-statement	118
121	-=		1	compound-statement	118
121	/=		1	compound-statement	118
121	;		1	compound-statement	118
121	<<=		1	compound-statement	118
121	=		1	compound-statement	118
121	>>=		1	compound-statement	118
121	^=		1	compound-statement	118
121	_KULV_END_		1	compound-statement	118
121	auto		1	compound-statement	118
121	break		1	compound-statement	118
121	case		1	compound-statement	118
121	char		1	compound-statement	118
121	character-constant		1	compound-statement	118
121	const		1	compound-statement	118
121	continue		1	compound-statement	118
121	default		1	compound-statement	118
121	do		1	compound-statement	118
121	double		1	compound-statement	118
121	else		1	compound-statement	118
121	enumeration-constant		1	compound-statement	118
121	extern		1	compound-statement	118
121	float		1	compound-statement	118
121	floating-constant		1	compound-statement	118
121	for		1	compound-statement	118
121	goto		1	compound-statement	118
121	identifier		1	compound-statement	118
121	if		1	compound-statement	118
121	int		1	compound-statement	118
121	integer-constant		1	compound-statement	118
121	long		1	compound-statement	118
121	register		1	compound-statement	118
121	return		1	compound-statement	118
121	short		1	compound-statement	118
121	signed		1	compound-statement	118
121	sizeof		1	compound-statement	118
121	static		1	compound-statement	118
121	string-constant		1	compound-statement	118
121	switch		1	compound-statement	118
121	typedef		1	compound-statement	118
121	unsigned		1	compound-statement	118
121	void		1	compound-statement	118
121	volatile		1	compound-statement	118
121	while		1	compound-statement	118
121	{		1	compound-statement	118
121	|=		1	compound-statement	118
121	}		1	compound-statement	118
121	~		1	compound-statement	118


185	!		0	66
185	&		0	67
185	(		0	68
185	*		0	69
185	+		0	70
185	++		0	71
185	-		0	72
185	--		0	73
185	character-constant		0	81
185	enumeration-constant		0	89
185	floating-constant		0	94
185	identifier		0	133
185	integer-constant		0	100
185	sizeof		0	113
185	string-constant		0	116
185	~		0	122


249	!		1	expression	143
249	!=		1	expression	143
249	%		1	expression	143
249	%=		1	expression	143
249	&		1	expression	143
249	&&		1	expression	143
249	&=		1	expression	143
249	(		1	expression	143
249	)		1	expression	143
249	*		1	expression	143
249	*=		1	expression	143
249	+		1	expression	143
249	++		1	expression	143
249	+=		1	expression	143
249	,		1	expression	143
249	-		1	expression	143
249	--		1	expression	143
249	-=		1	expression	143
249	->		1	expression	143
249	.		1	expression	143
249	/		1	expression	143
249	/=		1	expression	143
249	:		1	expression	143
249	;		1	expression	143
249	<		1	expression	143
249	<<		1	expression	143
249	<<=		1	expression	143
249	<=		1	expression	143
249	=		1	expression	143
249	==		1	expression	143
249	>		1	expression	143
249	>=		1	expression	143
249	>>		1	expression	143
249	>>=		1	expression	143
249	?		1	expression	143
249	[		1	expression	143
249	]		1	expression	143
249	^		1	expression	143
249	^=		1	expression	143
249	_KULV_END_		1	expression	143
249	auto		1	expression	143
249	break		1	expression	143
249	case		1	expression	143
249	char		1	expression	143
249	character-constant		1	expression	143
249	const		1	expression	143
249	continue		1	expression	143
249	default		1	expression	143
249	do		1	expression	143
249	double		1	expression	143
249	else		1	expression	143
249	enum		1	expression	143
249	enumeration-constant		1	expression	143
249	extern		1	expression	143
249	float		1	expression	143
249	floating-constant		1	expression	143
249	for		1	expression	143
249	goto		1	expression	143
249	identifier		1	expression	143
249	if		1	expression	143
249	int		1	expression	143
249	integer-constant		1	expression	143
249	long		1	expression	143
249	register		1	expression	143
249	return		1	expression	143
249	short		1	expression	143
249	signed		1	expression	143
249	sizeof		1	expression	143
249	static		1	expression	143
249	string-constant		1	expression	143
249	switch		1	expression	143
249	typedef		1	expression	143
249	unsigned		1	expression	143
249	void		1	expression	143
249	volatile		1	expression	143
249	while		1	expression	143
249	{		1	expression	143
249	|		1	expression	143
249	|=		1	expression	143
249	||		1	expression	143
249	}		1	expression	143
249	~		1	expression	143


313	!		1	postfix-expression	203
313	!=		1	postfix-expression	203
313	%		1	postfix-expression	203
313	%=		1	postfix-expression	203
313	&		1	postfix-expression	203
313	&&		1	postfix-expression	203
313	&=		1	postfix-expression	203
313	(		1	postfix-expression	203
313	)		1	postfix-expression	203
313	*		1	postfix-expression	203
313	*=		1	postfix-expression	203
313	+		1	postfix-expression	203
313	++		1	postfix-expression	203
313	+=		1	postfix-expression	203
313	,		1	postfix-expression	203
313	-		1	postfix-expression	203
313	--		1	postfix-expression	203
313	-=		1	postfix-expression	203
313	->		1	postfix-expression	203
313	.		1	postfix-expression	203
313	/		1	postfix-expression	203
313	/=		1	postfix-expression	203
313	:		1	postfix-expression	203
313	;		1	postfix-expression	203
313	<		1	postfix-expression	203
313	<<		1	postfix-expression	203
313	<<=		1	postfix-expression	203
313	<=		1	postfix-expression	203
313	=		1	postfix-expression	203
313	==		1	postfix-expression	203
313	>		1	postfix-expression	203
313	>=		1	postfix-expression	203
313	>>		1	postfix-expression	203
313	>>=		1	postfix-expression	203
313	?		1	postfix-expression	203
313	[		1	postfix-expression	203
313	]		1	postfix-expression	203
313	^		1	postfix-expression	203
313	^=		1	postfix-expression	203
313	_KULV_END_		1	postfix-expression	203
313	auto		1	postfix-expression	203
313	break		1	postfix-expression	203
313	case		1	postfix-expression	203
313	char		1	postfix-expression	203
313	character-constant		1	postfix-expression	203
313	const		1	postfix-expression	203
313	continue		1	postfix-expression	203
313	default		1	postfix-expression	203
313	do		1	postfix-expression	203
313	double		1	postfix-expression	203
313	else		1	postfix-expression	203
313	enum		1	postfix-expression	203
313	enumeration-constant		1	postfix-expression	203
313	extern		1	postfix-expression	203
313	float		1	postfix-expression	203
313	floating-constant		1	postfix-expression	203
313	for		1	postfix-expression	203
313	goto		1	postfix-expression	203
313	identifier		1	postfix-expression	203
313	if		1	postfix-expression	203
313	int		1	postfix-expression	203
313	integer-constant		1	postfix-expression	203
313	long		1	postfix-expression	203
313	register		1	postfix-expression	203
313	return		1	postfix-expression	203
313	short		1	postfix-expression	203
313	signed		1	postfix-expression	203
313	sizeof		1	postfix-expression	203
313	static		1	postfix-expression	203
313	string-constant		1	postfix-expression	203
313	switch		1	postfix-expression	203
313	typedef		1	postfix-expression	203
313	unsigned		1	postfix-expression	203
313	void		1	postfix-expression	203
313	volatile		1	postfix-expression	203
313	while		1	postfix-expression	203
313	{		1	postfix-expression	203
313	|		1	postfix-expression	203
313	|=		1	postfix-expression	203
313	||		1	postfix-expression	203
313	}		1	postfix-expression	203
313	~		1	postfix-expression	203


2	(		1	pointer	72
2	)		1	pointer	72
2	*		0	2
2	,		1	pointer	72
2	[		1	pointer	72
2	const		0	5
2	identifier		1	pointer	72
2	volatile		0	30


66	!		1	unary-operator	201
66	&		1	unary-operator	201
66	(		1	unary-operator	201
66	*		1	unary-operator	201
66	+		1	unary-operator	201
66	++		1	unary-operator	201
66	-		1	unary-operator	201
66	--		1	unary-operator	201
66	character-constant		1	unary-operator	201
66	enumeration-constant		1	unary-operator	201
66	floating-constant		1	unary-operator	201
66	identifier		1	unary-operator	201
66	integer-constant		1	unary-operator	201
66	sizeof		1	unary-operator	201
66	string-constant		1	unary-operator	201
66	~		1	unary-operator	201


130	,		1	constant-expression	159
130	:		1	constant-expression	159
130	;		1	constant-expression	159
130	]		1	constant-expression	159
130	char		1	constant-expression	159
130	const		1	constant-expression	159
130	double		1	constant-expression	159
130	enum		1	constant-expression	159
130	float		1	constant-expression	159
130	identifier		1	constant-expression	159
130	int		1	constant-expression	159
130	long		1	constant-expression	159
130	short		1	constant-expression	159
130	signed		1	constant-expression	159
130	unsigned		1	constant-expression	159
130	void		1	constant-expression	159
130	volatile		1	constant-expression	159
130	}		1	constant-expression	159


194	!		1	statement-list	123
194	%=		1	statement-list	123
194	&		1	statement-list	123
194	&=		1	statement-list	123
194	(		1	statement-list	123
194	)		1	statement-list	123
194	*		1	statement-list	123
194	*=		1	statement-list	123
194	+		1	statement-list	123
194	++		1	statement-list	123
194	+=		1	statement-list	123
194	,		1	statement-list	123
194	-		1	statement-list	123
194	--		1	statement-list	123
194	-=		1	statement-list	123
194	/=		1	statement-list	123
194	;		1	statement-list	123
194	<<=		1	statement-list	123
194	=		1	statement-list	123
194	>>=		1	statement-list	123
194	^=		1	statement-list	123
194	_KULV_END_		1	statement-list	123
194	auto		1	statement-list	123
194	break		1	statement-list	123
194	case		1	statement-list	123
194	char		1	statement-list	123
194	character-constant		1	statement-list	123
194	const		1	statement-list	123
194	continue		1	statement-list	123
194	default		1	statement-list	123
194	do		1	statement-list	123
194	double		1	statement-list	123
194	else		1	statement-list	123
194	enumeration-constant		1	statement-list	123
194	extern		1	statement-list	123
194	float		1	statement-list	123
194	floating-constant		1	statement-list	123
194	for		1	statement-list	123
194	goto		1	statement-list	123
194	identifier		1	statement-list	123
194	if		1	statement-list	123
194	int		1	statement-list	123
194	integer-constant		1	statement-list	123
194	long		1	statement-list	123
194	register		1	statement-list	123
194	return		1	statement-list	123
194	short		1	statement-list	123
194	signed		1	statement-list	123
194	sizeof		1	statement-list	123
194	static		1	statement-list	123
194	string-constant		1	statement-list	123
194	switch		1	statement-list	123
194	typedef		1	statement-list	123
194	unsigned		1	statement-list	123
194	void		1	statement-list	123
194	volatile		1	statement-list	123
194	while		1	statement-list	123
194	{		1	statement-list	123
194	|=		1	statement-list	123
194	}		1	statement-list	123
194	~		1	statement-list	123


258	!		1	logical-OR-expression	161
258	!=		1	logical-OR-expression	161
258	%		1	logical-OR-expression	161
258	%=		1	logical-OR-expression	161
258	&		1	logical-OR-expression	161
258	&&		0	172
258	&=		1	logical-OR-expression	161
258	(		1	logical-OR-expression	161
258	)		1	logical-OR-expression	161
258	*		1	logical-OR-expression	161
258	*=		1	logical-OR-expression	161
258	+		1	logical-OR-expression	161
258	++		1	logical-OR-expression	161
258	+=		1	logical-OR-expression	161
258	,		1	logical-OR-expression	161
258	-		1	logical-OR-expression	161
258	--		1	logical-OR-expression	161
258	-=		1	logical-OR-expression	161
258	->		1	logical-OR-expression	161
258	.		1	logical-OR-expression	161
258	/		1	logical-OR-expression	161
258	/=		1	logical-OR-expression	161
258	:		1	logical-OR-expression	161
258	;		1	logical-OR-expression	161
258	<		1	logical-OR-expression	161
258	<<		1	logical-OR-expression	161
258	<<=		1	logical-OR-expression	161
258	<=		1	logical-OR-expression	161
258	=		1	logical-OR-expression	161
258	==		1	logical-OR-expression	161
258	>		1	logical-OR-expression	161
258	>=		1	logical-OR-expression	161
258	>>		1	logical-OR-expression	161
258	>>=		1	logical-OR-expression	161
258	?		1	logical-OR-expression	161
258	[		1	logical-OR-expression	161
258	]		1	logical-OR-expression	161
258	^		1	logical-OR-expression	161
258	^=		1	logical-OR-expression	161
258	_KULV_END_		1	logical-OR-expression	161
258	auto		1	logical-OR-expression	161
258	break		1	logical-OR-expression	161
258	case		1	logical-OR-expression	161
258	char		1	logical-OR-expression	161
258	character-constant		1	logical-OR-expression	161
258	const		1	logical-OR-expression	161
258	continue		1	logical-OR-expression	161
258	default		1	logical-OR-expression	161
258	do		1	logical-OR-expression	161
258	double		1	logical-OR-expression	161
258	else		1	logical-OR-expression	161
258	enum		1	logical-OR-expression	161
258	enumeration-constant		1	logical-OR-expression	161
258	extern		1	logical-OR-expression	161
258	float		1	logical-OR-expression	161
258	floating-constant		1	logical-OR-expression	161
258	for		1	logical-OR-expression	161
258	goto		1	logical-OR-expression	161
258	identifier		1	logical-OR-expression	161
258	if		1	logical-OR-expression	161
258	int		1	logical-OR-expression	161
258	integer-constant		1	logical-OR-expression	161
258	long		1	logical-OR-expression	161
258	register		1	logical-OR-expression	161
258	return		1	logical-OR-expression	161
258	short		1	logical-OR-expression	161
258	signed		1	logical-OR-expression	161
258	sizeof		1	logical-OR-expression	161
258	static		1	logical-OR-expression	161
258	string-constant		1	logical-OR-expression	161
258	switch		1	logical-OR-expression	161
258	typedef		1	logical-OR-expression	161
258	unsigned		1	logical-OR-expression	161
258	void		1	logical-OR-expression	161
258	volatile		1	logical-OR-expression	161
258	while		1	logical-OR-expression	161
258	{		1	logical-OR-expression	161
258	|		1	logical-OR-expression	161
258	|=		1	logical-OR-expression	161
258	||		1	logical-OR-expression	161
258	}		1	logical-OR-expression	161
258	~		1	logical-OR-expression	161


322	(		1	direct-abstract-declarator	100
322	)		1	direct-abstract-declarator	100
322	,		1	direct-abstract-declarator	100
322	[		1	direct-abstract-declarator	100


43	!		0	66
43	&		0	67
43	(		0	68
43	*		0	69
43	+		0	70
43	++		0	71
43	-		0	72
43	--		0	73
43	;		0	74
43	auto		0	3
43	break		0	78
43	case		0	79
43	char		0	4
43	character-constant		0	81
43	const		0	5
43	continue		0	85
43	default		0	87
43	do		0	88
43	double		0	10
43	enumeration-constant		0	89
43	extern		0	11
43	float		0	13
43	floating-constant		0	94
43	for		0	95
43	goto		0	96
43	identifier		0	97
43	if		0	98
43	int		0	16
43	integer-constant		0	100
43	long		0	17
43	register		0	19
43	return		0	110
43	short		0	20
43	signed		0	21
43	sizeof		0	113
43	static		0	22
43	string-constant		0	116
43	switch		0	117
43	typedef		0	27
43	unsigned		0	28
43	void		0	29
43	volatile		0	30
43	while		0	120
43	{		0	43
43	}		0	121
43	~		0	122


107	!		1	unary-expression	190
107	!=		1	unary-expression	190
107	%		1	unary-expression	190
107	%=		1	unary-expression	190
107	&		1	unary-expression	190
107	&&		1	unary-expression	190
107	&=		1	unary-expression	190
107	(		0	178
107	)		1	unary-expression	190
107	*		1	unary-expression	190
107	*=		1	unary-expression	190
107	+		1	unary-expression	190
107	++		0	179
107	+=		1	unary-expression	190
107	,		1	unary-expression	190
107	-		1	unary-expression	190
107	--		0	180
107	-=		1	unary-expression	190
107	->		0	181
107	.		0	182
107	/		1	unary-expression	190
107	/=		1	unary-expression	190
107	:		1	unary-expression	190
107	;		1	unary-expression	190
107	<		1	unary-expression	190
107	<<		1	unary-expression	190
107	<<=		1	unary-expression	190
107	<=		1	unary-expression	190
107	=		1	unary-expression	190
107	==		1	unary-expression	190
107	>		1	unary-expression	190
107	>=		1	unary-expression	190
107	>>		1	unary-expression	190
107	>>=		1	unary-expression	190
107	?		1	unary-expression	190
107	[		0	183
107	]		1	unary-expression	190
107	^		1	unary-expression	190
107	^=		1	unary-expression	190
107	_KULV_END_		1	unary-expression	190
107	auto		1	unary-expression	190
107	break		1	unary-expression	190
107	case		1	unary-expression	190
107	char		1	unary-expression	190
107	character-constant		1	unary-expression	190
107	const		1	unary-expression	190
107	continue		1	unary-expression	190
107	default		1	unary-expression	190
107	do		1	unary-expression	190
107	double		1	unary-expression	190
107	else		1	unary-expression	190
107	enum		1	unary-expression	190
107	enumeration-constant		1	unary-expression	190
107	extern		1	unary-expression	190
107	float		1	unary-expression	190
107	floating-constant		1	unary-expression	190
107	for		1	unary-expression	190
107	goto		1	unary-expression	190
107	identifier		1	unary-expression	190
107	if		1	unary-expression	190
107	int		1	unary-expression	190
107	integer-constant		1	unary-expression	190
107	long		1	unary-expression	190
107	register		1	unary-expression	190
107	return		1	unary-expression	190
107	short		1	unary-expression	190
107	signed		1	unary-expression	190
107	sizeof		1	unary-expression	190
107	static		1	unary-expression	190
107	string-constant		1	unary-expression	190
107	switch		1	unary-expression	190
107	typedef		1	unary-expression	190
107	unsigned		1	unary-expression	190
107	void		1	unary-expression	190
107	volatile		1	unary-expression	190
107	while		1	unary-expression	190
107	{		1	unary-expression	190
107	|		1	unary-expression	190
107	|=		1	unary-expression	190
107	||		1	unary-expression	190
107	}		1	unary-expression	190
107	~		1	unary-expression	190


171	!		0	66
171	&		0	67
171	(		0	68
171	*		0	69
171	+		0	70
171	++		0	71
171	-		0	72
171	--		0	73
171	character-constant		0	81
171	enumeration-constant		0	89
171	floating-constant		0	94
171	identifier		0	133
171	integer-constant		0	100
171	sizeof		0	113
171	string-constant		0	116
171	~		0	122


235	(		0	234
235	)		1	abstract-declarator	94
235	[		0	212


299	,		1	enumerator-list	59
299	}		1	enumerator-list	59


363	)		0	371
363	,		0	165


52	identifier		0	135
52	{		0	136


116	!		1	constant	219
116	!=		1	constant	219
116	%		1	constant	219
116	%=		1	constant	219
116	&		1	constant	219
116	&&		1	constant	219
116	&=		1	constant	219
116	(		1	constant	219
116	)		1	constant	219
116	*		1	constant	219
116	*=		1	constant	219
116	+		1	constant	219
116	++		1	constant	219
116	+=		1	constant	219
116	,		1	constant	219
116	-		1	constant	219
116	--		1	constant	219
116	-=		1	constant	219
116	->		1	constant	219
116	.		1	constant	219
116	/		1	constant	219
116	/=		1	constant	219
116	:		1	constant	219
116	;		1	constant	219
116	<		1	constant	219
116	<<		1	constant	219
116	<<=		1	constant	219
116	<=		1	constant	219
116	=		1	constant	219
116	==		1	constant	219
116	>		1	constant	219
116	>=		1	constant	219
116	>>		1	constant	219
116	>>=		1	constant	219
116	?		1	constant	219
116	[		1	constant	219
116	]		1	constant	219
116	^		1	constant	219
116	^=		1	constant	219
116	_KULV_END_		1	constant	219
116	auto		1	constant	219
116	break		1	constant	219
116	case		1	constant	219
116	char		1	constant	219
116	character-constant		1	constant	219
116	const		1	constant	219
116	continue		1	constant	219
116	default		1	constant	219
116	do		1	constant	219
116	double		1	constant	219
116	else		1	constant	219
116	enum		1	constant	219
116	enumeration-constant		1	constant	219
116	extern		1	constant	219
116	float		1	constant	219
116	floating-constant		1	constant	219
116	for		1	constant	219
116	goto		1	constant	219
116	identifier		1	constant	219
116	if		1	constant	219
116	int		1	constant	219
116	integer-constant		1	constant	219
116	long		1	constant	219
116	register		1	constant	219
116	return		1	constant	219
116	short		1	constant	219
116	signed		1	constant	219
116	sizeof		1	constant	219
116	static		1	constant	219
116	string-constant		1	constant	219
116	switch		1	constant	219
116	typedef		1	constant	219
116	unsigned		1	constant	219
116	void		1	constant	219
116	volatile		1	constant	219
116	while		1	constant	219
116	{		1	constant	219
116	|		1	constant	219
116	|=		1	constant	219
116	||		1	constant	219
116	}		1	constant	219
116	~		1	constant	219


180	!		1	postfix-expression	209
180	!=		1	postfix-expression	209
180	%		1	postfix-expression	209
180	%=		1	postfix-expression	209
180	&		1	postfix-expression	209
180	&&		1	postfix-expression	209
180	&=		1	postfix-expression	209
180	(		1	postfix-expression	209
180	)		1	postfix-expression	209
180	*		1	postfix-expression	209
180	*=		1	postfix-expression	209
180	+		1	postfix-expression	209
180	++		1	postfix-expression	209
180	+=		1	postfix-expression	209
180	,		1	postfix-expression	209
180	-		1	postfix-expression	209
180	--		1	postfix-expression	209
180	-=		1	postfix-expression	209
180	->		1	postfix-expression	209
180	.		1	postfix-expression	209
180	/		1	postfix-expression	209
180	/=		1	postfix-expression	209
180	:		1	postfix-expression	209
180	;		1	postfix-expression	209
180	<		1	postfix-expression	209
180	<<		1	postfix-expression	209
180	<<=		1	postfix-expression	209
180	<=		1	postfix-expression	209
180	=		1	postfix-expression	209
180	==		1	postfix-expression	209
180	>		1	postfix-expression	209
180	>=		1	postfix-expression	209
180	>>		1	postfix-expression	209
180	>>=		1	postfix-expression	209
180	?		1	postfix-expression	209
180	[		1	postfix-expression	209
180	]		1	postfix-expression	209
180	^		1	postfix-expression	209
180	^=		1	postfix-expression	209
180	_KULV_END_		1	postfix-expression	209
180	auto		1	postfix-expression	209
180	break		1	postfix-expression	209
180	case		1	postfix-expression	209
180	char		1	postfix-expression	209
180	character-constant		1	postfix-expression	209
180	const		1	postfix-expression	209
180	continue		1	postfix-expression	209
180	default		1	postfix-expression	209
180	do		1	postfix-expression	209
180	double		1	postfix-expression	209
180	else		1	postfix-expression	209
180	enum		1	postfix-expression	209
180	enumeration-constant		1	postfix-expression	209
180	extern		1	postfix-expression	209
180	float		1	postfix-expression	209
180	floating-constant		1	postfix-expression	209
180	for		1	postfix-expression	209
180	goto		1	postfix-expression	209
180	identifier		1	postfix-expression	209
180	if		1	postfix-expression	209
180	int		1	postfix-expression	209
180	integer-constant		1	postfix-expression	209
180	long		1	postfix-expression	209
180	register		1	postfix-expression	209
180	return		1	postfix-expression	209
180	short		1	postfix-expression	209
180	signed		1	postfix-expression	209
180	sizeof		1	postfix-expression	209
180	static		1	postfix-expression	209
180	string-constant		1	postfix-expression	209
180	switch		1	postfix-expression	209
180	typedef		1	postfix-expression	209
180	unsigned		1	postfix-expression	209
180	void		1	postfix-expression	209
180	volatile		1	postfix-expression	209
180	while		1	postfix-expression	209
180	{		1	postfix-expression	209
180	|		1	postfix-expression	209
180	|=		1	postfix-expression	209
180	||		1	postfix-expression	209
180	}		1	postfix-expression	209
180	~		1	postfix-expression	209


244	!		1	labeled-statement	115
244	%=		1	labeled-statement	115
244	&		1	labeled-statement	115
244	&=		1	labeled-statement	115
244	(		1	labeled-statement	115
244	)		1	labeled-statement	115
244	*		1	labeled-statement	115
244	*=		1	labeled-statement	115
244	+		1	labeled-statement	115
244	++		1	labeled-statement	115
244	+=		1	labeled-statement	115
244	,		1	labeled-statement	115
244	-		1	labeled-statement	115
244	--		1	labeled-statement	115
244	-=		1	labeled-statement	115
244	/=		1	labeled-statement	115
244	;		1	labeled-statement	115
244	<<=		1	labeled-statement	115
244	=		1	labeled-statement	115
244	>>=		1	labeled-statement	115
244	^=		1	labeled-statement	115
244	_KULV_END_		1	labeled-statement	115
244	auto		1	labeled-statement	115
244	break		1	labeled-statement	115
244	case		1	labeled-statement	115
244	char		1	labeled-statement	115
244	character-constant		1	labeled-statement	115
244	const		1	labeled-statement	115
244	continue		1	labeled-statement	115
244	default		1	labeled-statement	115
244	do		1	labeled-statement	115
244	double		1	labeled-statement	115
244	else		1	labeled-statement	115
244	enumeration-constant		1	labeled-statement	115
244	extern		1	labeled-statement	115
244	float		1	labeled-statement	115
244	floating-constant		1	labeled-statement	115
244	for		1	labeled-statement	115
244	goto		1	labeled-statement	115
244	identifier		1	labeled-statement	115
244	if		1	labeled-statement	115
244	int		1	labeled-statement	115
244	integer-constant		1	labeled-statement	115
244	long		1	labeled-statement	115
244	register		1	labeled-statement	115
244	return		1	labeled-statement	115
244	short		1	labeled-statement	115
244	signed		1	labeled-statement	115
244	sizeof		1	labeled-statement	115
244	static		1	labeled-statement	115
244	string-constant		1	labeled-statement	115
244	switch		1	labeled-statement	115
244	typedef		1	labeled-statement	115
244	unsigned		1	labeled-statement	115
244	void		1	labeled-statement	115
244	volatile		1	labeled-statement	115
244	while		1	labeled-statement	115
244	{		1	labeled-statement	115
244	|=		1	labeled-statement	115
244	}		1	labeled-statement	115
244	~		1	labeled-statement	115


308	!		0	66
308	&		0	67
308	(		0	68
308	)		0	340
308	*		0	69
308	+		0	70
308	++		0	71
308	-		0	72
308	--		0	73
308	character-constant		0	81
308	enumeration-constant		0	89
308	floating-constant		0	94
308	identifier		0	133
308	integer-constant		0	100
308	sizeof		0	113
308	string-constant		0	116
308	~		0	122


372	!		1	iteration-statement	135
372	%=		1	iteration-statement	135
372	&		1	iteration-statement	135
372	&=		1	iteration-statement	135
372	(		1	iteration-statement	135
372	)		1	iteration-statement	135
372	*		1	iteration-statement	135
372	*=		1	iteration-statement	135
372	+		1	iteration-statement	135
372	++		1	iteration-statement	135
372	+=		1	iteration-statement	135
372	,		1	iteration-statement	135
372	-		1	iteration-statement	135
372	--		1	iteration-statement	135
372	-=		1	iteration-statement	135
372	/=		1	iteration-statement	135
372	;		1	iteration-statement	135
372	<<=		1	iteration-statement	135
372	=		1	iteration-statement	135
372	>>=		1	iteration-statement	135
372	^=		1	iteration-statement	135
372	_KULV_END_		1	iteration-statement	135
372	auto		1	iteration-statement	135
372	break		1	iteration-statement	135
372	case		1	iteration-statement	135
372	char		1	iteration-statement	135
372	character-constant		1	iteration-statement	135
372	const		1	iteration-statement	135
372	continue		1	iteration-statement	135
372	default		1	iteration-statement	135
372	do		1	iteration-statement	135
372	double		1	iteration-statement	135
372	else		1	iteration-statement	135
372	enumeration-constant		1	iteration-statement	135
372	extern		1	iteration-statement	135
372	float		1	iteration-statement	135
372	floating-constant		1	iteration-statement	135
372	for		1	iteration-statement	135
372	goto		1	iteration-statement	135
372	identifier		1	iteration-statement	135
372	if		1	iteration-statement	135
372	int		1	iteration-statement	135
372	integer-constant		1	iteration-statement	135
372	long		1	iteration-statement	135
372	register		1	iteration-statement	135
372	return		1	iteration-statement	135
372	short		1	iteration-statement	135
372	signed		1	iteration-statement	135
372	sizeof		1	iteration-statement	135
372	static		1	iteration-statement	135
372	string-constant		1	iteration-statement	135
372	switch		1	iteration-statement	135
372	typedef		1	iteration-statement	135
372	unsigned		1	iteration-statement	135
372	void		1	iteration-statement	135
372	volatile		1	iteration-statement	135
372	while		1	iteration-statement	135
372	{		1	iteration-statement	135
372	|=		1	iteration-statement	135
372	}		1	iteration-statement	135
372	~		1	iteration-statement	135


29	(		1	type-specifier	24
29	)		1	type-specifier	24
29	*		1	type-specifier	24
29	,		1	type-specifier	24
29	:		1	type-specifier	24
29	;		1	type-specifier	24
29	[		1	type-specifier	24
29	auto		1	type-specifier	24
29	char		1	type-specifier	24
29	const		1	type-specifier	24
29	double		1	type-specifier	24
29	extern		1	type-specifier	24
29	float		1	type-specifier	24
29	identifier		1	type-specifier	24
29	int		1	type-specifier	24
29	long		1	type-specifier	24
29	register		1	type-specifier	24
29	short		1	type-specifier	24
29	signed		1	type-specifier	24
29	static		1	type-specifier	24
29	typedef		1	type-specifier	24
29	unsigned		1	type-specifier	24
29	void		1	type-specifier	24
29	volatile		1	type-specifier	24


93	!		1	statement	108
93	%=		1	statement	108
93	&		1	statement	108
93	&=		1	statement	108
93	(		1	statement	108
93	)		1	statement	108
93	*		1	statement	108
93	*=		1	statement	108
93	+		1	statement	108
93	++		1	statement	108
93	+=		1	statement	108
93	,		1	statement	108
93	-		1	statement	108
93	--		1	statement	108
93	-=		1	statement	108
93	/=		1	statement	108
93	;		1	statement	108
93	<<=		1	statement	108
93	=		1	statement	108
93	>>=		1	statement	108
93	^=		1	statement	108
93	_KULV_END_		1	statement	108
93	auto		1	statement	108
93	break		1	statement	108
93	case		1	statement	108
93	char		1	statement	108
93	character-constant		1	statement	108
93	const		1	statement	108
93	continue		1	statement	108
93	default		1	statement	108
93	do		1	statement	108
93	double		1	statement	108
93	else		1	statement	108
93	enumeration-constant		1	statement	108
93	extern		1	statement	108
93	float		1	statement	108
93	floating-constant		1	statement	108
93	for		1	statement	108
93	goto		1	statement	108
93	identifier		1	statement	108
93	if		1	statement	108
93	int		1	statement	108
93	integer-constant		1	statement	108
93	long		1	statement	108
93	register		1	statement	108
93	return		1	statement	108
93	short		1	statement	108
93	signed		1	statement	108
93	sizeof		1	statement	108
93	static		1	statement	108
93	string-constant		1	statement	108
93	switch		1	statement	108
93	typedef		1	statement	108
93	unsigned		1	statement	108
93	void		1	statement	108
93	volatile		1	statement	108
93	while		1	statement	108
93	{		1	statement	108
93	|=		1	statement	108
93	}		1	statement	108
93	~		1	statement	108


157	!		1	jump-statement	138
157	%=		1	jump-statement	138
157	&		1	jump-statement	138
157	&=		1	jump-statement	138
157	(		1	jump-statement	138
157	)		1	jump-statement	138
157	*		1	jump-statement	138
157	*=		1	jump-statement	138
157	+		1	jump-statement	138
157	++		1	jump-statement	138
157	+=		1	jump-statement	138
157	,		1	jump-statement	138
157	-		1	jump-statement	138
157	--		1	jump-statement	138
157	-=		1	jump-statement	138
157	/=		1	jump-statement	138
157	;		1	jump-statement	138
157	<<=		1	jump-statement	138
157	=		1	jump-statement	138
157	>>=		1	jump-statement	138
157	^=		1	jump-statement	138
157	_KULV_END_		1	jump-statement	138
157	auto		1	jump-statement	138
157	break		1	jump-statement	138
157	case		1	jump-statement	138
157	char		1	jump-statement	138
157	character-constant		1	jump-statement	138
157	const		1	jump-statement	138
157	continue		1	jump-statement	138
157	default		1	jump-statement	138
157	do		1	jump-statement	138
157	double		1	jump-statement	138
157	else		1	jump-statement	138
157	enumeration-constant		1	jump-statement	138
157	extern		1	jump-statement	138
157	float		1	jump-statement	138
157	floating-constant		1	jump-statement	138
157	for		1	jump-statement	138
157	goto		1	jump-statement	138
157	identifier		1	jump-statement	138
157	if		1	jump-statement	138
157	int		1	jump-statement	138
157	integer-constant		1	jump-statement	138
157	long		1	jump-statement	138
157	register		1	jump-statement	138
157	return		1	jump-statement	138
157	short		1	jump-statement	138
157	signed		1	jump-statement	138
157	sizeof		1	jump-statement	138
157	static		1	jump-statement	138
157	string-constant		1	jump-statement	138
157	switch		1	jump-statement	138
157	typedef		1	jump-statement	138
157	unsigned		1	jump-statement	138
157	void		1	jump-statement	138
157	volatile		1	jump-statement	138
157	while		1	jump-statement	138
157	{		1	jump-statement	138
157	|=		1	jump-statement	138
157	}		1	jump-statement	138
157	~		1	jump-statement	138


221	!		1	direct-declarator	68
221	%=		1	direct-declarator	68
221	&		1	direct-declarator	68
221	&=		1	direct-declarator	68
221	(		1	direct-declarator	68
221	)		1	direct-declarator	68
221	*		1	direct-declarator	68
221	*=		1	direct-declarator	68
221	+		1	direct-declarator	68
221	++		1	direct-declarator	68
221	+=		1	direct-declarator	68
221	,		1	direct-declarator	68
221	-		1	direct-declarator	68
221	--		1	direct-declarator	68
221	-=		1	direct-declarator	68
221	/=		1	direct-declarator	68
221	:		1	direct-declarator	68
221	;		1	direct-declarator	68
221	<<=		1	direct-declarator	68
221	=		1	direct-declarator	68
221	>>=		1	direct-declarator	68
221	[		1	direct-declarator	68
221	^=		1	direct-declarator	68
221	_KULV_END_		1	direct-declarator	68
221	auto		1	direct-declarator	68
221	break		1	direct-declarator	68
221	case		1	direct-declarator	68
221	char		1	direct-declarator	68
221	character-constant		1	direct-declarator	68
221	const		1	direct-declarator	68
221	continue		1	direct-declarator	68
221	default		1	direct-declarator	68
221	do		1	direct-declarator	68
221	double		1	direct-declarator	68
221	else		1	direct-declarator	68
221	enum		1	direct-declarator	68
221	enumeration-constant		1	direct-declarator	68
221	extern		1	direct-declarator	68
221	float		1	direct-declarator	68
221	floating-constant		1	direct-declarator	68
221	for		1	direct-declarator	68
221	goto		1	direct-declarator	68
221	identifier		1	direct-declarator	68
221	if		1	direct-declarator	68
221	int		1	direct-declarator	68
221	integer-constant		1	direct-declarator	68
221	long		1	direct-declarator	68
221	register		1	direct-declarator	68
221	return		1	direct-declarator	68
221	short		1	direct-declarator	68
221	signed		1	direct-declarator	68
221	sizeof		1	direct-declarator	68
221	static		1	direct-declarator	68
221	string-constant		1	direct-declarator	68
221	switch		1	direct-declarator	68
221	typedef		1	direct-declarator	68
221	unsigned		1	direct-declarator	68
221	void		1	direct-declarator	68
221	volatile		1	direct-declarator	68
221	while		1	direct-declarator	68
221	{		1	direct-declarator	68
221	|=		1	direct-declarator	68
221	}		1	direct-declarator	68
221	~		1	direct-declarator	68


285	!		0	66
285	&		0	67
285	(		0	68
285	*		0	69
285	+		0	70
285	++		0	71
285	-		0	72
285	--		0	73
285	]		0	322
285	character-constant		0	81
285	enumeration-constant		0	89
285	floating-constant		0	94
285	identifier		0	133
285	integer-constant		0	100
285	sizeof		0	113
285	string-constant		0	116
285	~		0	122


349	,		1	struct-declarator-list	52
349	;		1	struct-declarator-list	52
349	char		1	struct-declarator-list	52
349	const		1	struct-declarator-list	52
349	double		1	struct-declarator-list	52
349	enum		1	struct-declarator-list	52
349	float		1	struct-declarator-list	52
349	int		1	struct-declarator-list	52
349	long		1	struct-declarator-list	52
349	short		1	struct-declarator-list	52
349	signed		1	struct-declarator-list	52
349	unsigned		1	struct-declarator-list	52
349	void		1	struct-declarator-list	52
349	volatile		1	struct-declarator-list	52
349	}		1	struct-declarator-list	52


38	,		1	init-declarator-list	42
38	;		1	init-declarator-list	42


102	!		1	statement	112
102	%=		1	statement	112
102	&		1	statement	112
102	&=		1	statement	112
102	(		1	statement	112
102	)		1	statement	112
102	*		1	statement	112
102	*=		1	statement	112
102	+		1	statement	112
102	++		1	statement	112
102	+=		1	statement	112
102	,		1	statement	112
102	-		1	statement	112
102	--		1	statement	112
102	-=		1	statement	112
102	/=		1	statement	112
102	;		1	statement	112
102	<<=		1	statement	112
102	=		1	statement	112
102	>>=		1	statement	112
102	^=		1	statement	112
102	_KULV_END_		1	statement	112
102	auto		1	statement	112
102	break		1	statement	112
102	case		1	statement	112
102	char		1	statement	112
102	character-constant		1	statement	112
102	const		1	statement	112
102	continue		1	statement	112
102	default		1	statement	112
102	do		1	statement	112
102	double		1	statement	112
102	else		1	statement	112
102	enumeration-constant		1	statement	112
102	extern		1	statement	112
102	float		1	statement	112
102	floating-constant		1	statement	112
102	for		1	statement	112
102	goto		1	statement	112
102	identifier		1	statement	112
102	if		1	statement	112
102	int		1	statement	112
102	integer-constant		1	statement	112
102	long		1	statement	112
102	register		1	statement	112
102	return		1	statement	112
102	short		1	statement	112
102	signed		1	statement	112
102	sizeof		1	statement	112
102	static		1	statement	112
102	string-constant		1	statement	112
102	switch		1	statement	112
102	typedef		1	statement	112
102	unsigned		1	statement	112
102	void		1	statement	112
102	volatile		1	statement	112
102	while		1	statement	112
102	{		1	statement	112
102	|=		1	statement	112
102	}		1	statement	112
102	~		1	statement	112


166	!		1	expression-statement	117
166	%=		1	expression-statement	117
166	&		1	expression-statement	117
166	&=		1	expression-statement	117
166	(		1	expression-statement	117
166	)		1	expression-statement	117
166	*		1	expression-statement	117
166	*=		1	expression-statement	117
166	+		1	expression-statement	117
166	++		1	expression-statement	117
166	+=		1	expression-statement	117
166	,		1	expression-statement	117
166	-		1	expression-statement	117
166	--		1	expression-statement	117
166	-=		1	expression-statement	117
166	/=		1	expression-statement	117
166	;		1	expression-statement	117
166	<<=		1	expression-statement	117
166	=		1	expression-statement	117
166	>>=		1	expression-statement	117
166	^=		1	expression-statement	117
166	_KULV_END_		1	expression-statement	117
166	auto		1	expression-statement	117
166	break		1	expression-statement	117
166	case		1	expression-statement	117
166	char		1	expression-statement	117
166	character-constant		1	expression-statement	117
166	const		1	expression-statement	117
166	continue		1	expression-statement	117
166	default		1	expression-statement	117
166	do		1	expression-statement	117
166	double		1	expression-statement	117
166	else		1	expression-statement	117
166	enumeration-constant		1	expression-statement	117
166	extern		1	expression-statement	117
166	float		1	expression-statement	117
166	floating-constant		1	expression-statement	117
166	for		1	expression-statement	117
166	goto		1	expression-statement	117
166	identifier		1	expression-statement	117
166	if		1	expression-statement	117
166	int		1	expression-statement	117
166	integer-constant		1	expression-statement	117
166	long		1	expression-statement	117
166	register		1	expression-statement	117
166	return		1	expression-statement	117
166	short		1	expression-statement	117
166	signed		1	expression-statement	117
166	sizeof		1	expression-statement	117
166	static		1	expression-statement	117
166	string-constant		1	expression-statement	117
166	switch		1	expression-statement	117
166	typedef		1	expression-statement	117
166	unsigned		1	expression-statement	117
166	void		1	expression-statement	117
166	volatile		1	expression-statement	117
166	while		1	expression-statement	117
166	{		1	expression-statement	117
166	|=		1	expression-statement	117
166	}		1	expression-statement	117
166	~		1	expression-statement	117


230	,		1	initializer-list	90
230	}		1	initializer-list	90


294	,		1	struct-declarator-list	51
294	;		1	struct-declarator-list	51


358	!		0	66
358	&		0	67
358	(		0	68
358	*		0	69
358	+		0	70
358	++		0	71
358	-		0	72
358	--		0	73
358	;		0	74
358	break		0	78
358	case		0	79
358	character-constant		0	81
358	continue		0	85
358	default		0	87
358	do		0	88
358	enumeration-constant		0	89
358	floating-constant		0	94
358	for		0	95
358	goto		0	96
358	identifier		0	97
358	if		0	98
358	integer-constant		0	100
358	return		0	110
358	sizeof		0	113
358	string-constant		0	116
358	switch		0	117
358	while		0	120
358	{		0	43
358	~		0	122


15	!		1	direct-declarator	65
15	%=		1	direct-declarator	65
15	&		1	direct-declarator	65
15	&=		1	direct-declarator	65
15	(		1	direct-declarator	65
15	)		1	direct-declarator	65
15	*		1	direct-declarator	65
15	*=		1	direct-declarator	65
15	+		1	direct-declarator	65
15	++		1	direct-declarator	65
15	+=		1	direct-declarator	65
15	,		1	direct-declarator	65
15	-		1	direct-declarator	65
15	--		1	direct-declarator	65
15	-=		1	direct-declarator	65
15	/=		1	direct-declarator	65
15	:		1	direct-declarator	65
15	;		1	direct-declarator	65
15	<<=		1	direct-declarator	65
15	=		1	direct-declarator	65
15	>>=		1	direct-declarator	65
15	[		1	direct-declarator	65
15	^=		1	direct-declarator	65
15	_KULV_END_		1	direct-declarator	65
15	auto		1	direct-declarator	65
15	break		1	direct-declarator	65
15	case		1	direct-declarator	65
15	char		1	direct-declarator	65
15	character-constant		1	direct-declarator	65
15	const		1	direct-declarator	65
15	continue		1	direct-declarator	65
15	default		1	direct-declarator	65
15	do		1	direct-declarator	65
15	double		1	direct-declarator	65
15	else		1	direct-declarator	65
15	enum		1	direct-declarator	65
15	enumeration-constant		1	direct-declarator	65
15	extern		1	direct-declarator	65
15	float		1	direct-declarator	65
15	floating-constant		1	direct-declarator	65
15	for		1	direct-declarator	65
15	goto		1	direct-declarator	65
15	identifier		1	direct-declarator	65
15	if		1	direct-declarator	65
15	int		1	direct-declarator	65
15	integer-constant		1	direct-declarator	65
15	long		1	direct-declarator	65
15	register		1	direct-declarator	65
15	return		1	direct-declarator	65
15	short		1	direct-declarator	65
15	signed		1	direct-declarator	65
15	sizeof		1	direct-declarator	65
15	static		1	direct-declarator	65
15	string-constant		1	direct-declarator	65
15	switch		1	direct-declarator	65
15	typedef		1	direct-declarator	65
15	unsigned		1	direct-declarator	65
15	void		1	direct-declarator	65
15	volatile		1	direct-declarator	65
15	while		1	direct-declarator	65
15	{		1	direct-declarator	65
15	|=		1	direct-declarator	65
15	}		1	direct-declarator	65
15	~		1	direct-declarator	65


79	!		0	66
79	&		0	67
79	(		0	68
79	*		0	69
79	+		0	70
79	++		0	71
79	-		0	72
79	--		0	73
79	character-constant		0	81
79	enumeration-constant		0	89
79	floating-constant		0	94
79	identifier		0	133
79	integer-constant		0	100
79	sizeof		0	113
79	string-constant		0	116
79	~		0	122


143	!		1	init-declarator-list	43
143	%=		1	init-declarator-list	43
143	&		1	init-declarator-list	43
143	&=		1	init-declarator-list	43
143	(		1	init-declarator-list	43
143	)		1	init-declarator-list	43
143	*		1	init-declarator-list	43
143	*=		1	init-declarator-list	43
143	+		1	init-declarator-list	43
143	++		1	init-declarator-list	43
143	+=		1	init-declarator-list	43
143	,		1	init-declarator-list	43
143	-		1	init-declarator-list	43
143	--		1	init-declarator-list	43
143	-=		1	init-declarator-list	43
143	/=		1	init-declarator-list	43
143	;		1	init-declarator-list	43
143	<<=		1	init-declarator-list	43
143	=		1	init-declarator-list	43
143	>>=		1	init-declarator-list	43
143	^=		1	init-declarator-list	43
143	_KULV_END_		1	init-declarator-list	43
143	auto		1	init-declarator-list	43
143	break		1	init-declarator-list	43
143	case		1	init-declarator-list	43
143	char		1	init-declarator-list	43
143	character-constant		1	init-declarator-list	43
143	const		1	init-declarator-list	43
143	continue		1	init-declarator-list	43
143	default		1	init-declarator-list	43
143	do		1	init-declarator-list	43
143	double		1	init-declarator-list	43
143	else		1	init-declarator-list	43
143	enumeration-constant		1	init-declarator-list	43
143	extern		1	init-declarator-list	43
143	float		1	init-declarator-list	43
143	floating-constant		1	init-declarator-list	43
143	for		1	init-declarator-list	43
143	goto		1	init-declarator-list	43
143	identifier		1	init-declarator-list	43
143	if		1	init-declarator-list	43
143	int		1	init-declarator-list	43
143	integer-constant		1	init-declarator-list	43
143	long		1	init-declarator-list	43
143	register		1	init-declarator-list	43
143	return		1	init-declarator-list	43
143	short		1	init-declarator-list	43
143	signed		1	init-declarator-list	43
143	sizeof		1	init-declarator-list	43
143	static		1	init-declarator-list	43
143	string-constant		1	init-declarator-list	43
143	switch		1	init-declarator-list	43
143	typedef		1	init-declarator-list	43
143	unsigned		1	init-declarator-list	43
143	void		1	init-declarator-list	43
143	volatile		1	init-declarator-list	43
143	while		1	init-declarator-list	43
143	{		1	init-declarator-list	43
143	|=		1	init-declarator-list	43
143	}		1	init-declarator-list	43
143	~		1	init-declarator-list	43


207	!		0	66
207	&		0	67
207	(		0	68
207	*		0	69
207	+		0	70
207	++		0	71
207	-		0	72
207	--		0	73
207	character-constant		0	81
207	enumeration-constant		0	89
207	floating-constant		0	94
207	identifier		0	133
207	integer-constant		0	100
207	sizeof		0	113
207	string-constant		0	116
207	~		0	122


271	!		1	relational-expression	177
271	!=		1	relational-expression	177
271	%		1	relational-expression	177
271	%=		1	relational-expression	177
271	&		1	relational-expression	177
271	&&		1	relational-expression	177
271	&=		1	relational-expression	177
271	(		1	relational-expression	177
271	)		1	relational-expression	177
271	*		1	relational-expression	177
271	*=		1	relational-expression	177
271	+		1	relational-expression	177
271	++		1	relational-expression	177
271	+=		1	relational-expression	177
271	,		1	relational-expression	177
271	-		1	relational-expression	177
271	--		1	relational-expression	177
271	-=		1	relational-expression	177
271	->		1	relational-expression	177
271	.		1	relational-expression	177
271	/		1	relational-expression	177
271	/=		1	relational-expression	177
271	:		1	relational-expression	177
271	;		1	relational-expression	177
271	<		1	relational-expression	177
271	<<		0	190
271	<<=		1	relational-expression	177
271	<=		1	relational-expression	177
271	=		1	relational-expression	177
271	==		1	relational-expression	177
271	>		1	relational-expression	177
271	>=		1	relational-expression	177
271	>>		0	191
271	>>=		1	relational-expression	177
271	?		1	relational-expression	177
271	[		1	relational-expression	177
271	]		1	relational-expression	177
271	^		1	relational-expression	177
271	^=		1	relational-expression	177
271	_KULV_END_		1	relational-expression	177
271	auto		1	relational-expression	177
271	break		1	relational-expression	177
271	case		1	relational-expression	177
271	char		1	relational-expression	177
271	character-constant		1	relational-expression	177
271	const		1	relational-expression	177
271	continue		1	relational-expression	177
271	default		1	relational-expression	177
271	do		1	relational-expression	177
271	double		1	relational-expression	177
271	else		1	relational-expression	177
271	enum		1	relational-expression	177
271	enumeration-constant		1	relational-expression	177
271	extern		1	relational-expression	177
271	float		1	relational-expression	177
271	floating-constant		1	relational-expression	177
271	for		1	relational-expression	177
271	goto		1	relational-expression	177
271	identifier		1	relational-expression	177
271	if		1	relational-expression	177
271	int		1	relational-expression	177
271	integer-constant		1	relational-expression	177
271	long		1	relational-expression	177
271	register		1	relational-expression	177
271	return		1	relational-expression	177
271	short		1	relational-expression	177
271	signed		1	relational-expression	177
271	sizeof		1	relational-expression	177
271	static		1	relational-expression	177
271	string-constant		1	relational-expression	177
271	switch		1	relational-expression	177
271	typedef		1	relational-expression	177
271	unsigned		1	relational-expression	177
271	void		1	relational-expression	177
271	volatile		1	relational-expression	177
271	while		1	relational-expression	177
271	{		1	relational-expression	177
271	|		1	relational-expression	177
271	|=		1	relational-expression	177
271	||		1	relational-expression	177
271	}		1	relational-expression	177
271	~		1	relational-expression	177


335	)		0	353
335	,		0	165


24	(		0	1
24	*		0	2
24	_KULV_END_		2	STARTER	0
24	auto		0	3
24	char		0	4
24	const		0	5
24	double		0	10
24	extern		0	11
24	float		0	13
24	identifier		0	15
24	int		0	16
24	long		0	17
24	register		0	19
24	short		0	20
24	signed		0	21
24	static		0	22
24	typedef		0	27
24	unsigned		0	28
24	void		0	29
24	volatile		0	30


88	!		0	66
88	&		0	67
88	(		0	68
88	*		0	69
88	+		0	70
88	++		0	71
88	-		0	72
88	--		0	73
88	;		0	74
88	break		0	78
88	case		0	79
88	character-constant		0	81
88	continue		0	85
88	default		0	87
88	do		0	88
88	enumeration-constant		0	89
88	floating-constant		0	94
88	for		0	95
88	goto		0	96
88	identifier		0	97
88	if		0	98
88	integer-constant		0	100
88	return		0	110
88	sizeof		0	113
88	string-constant		0	116
88	switch		0	117
88	while		0	120
88	{		0	43
88	~		0	122


152	!		0	66
152	&		0	67
152	(		0	68
152	*		0	69
152	+		0	70
152	++		0	71
152	-		0	72
152	--		0	73
152	character-constant		0	81
152	enumeration-constant		0	89
152	floating-constant		0	94
152	identifier		0	133
152	integer-constant		0	100
152	sizeof		0	113
152	string-constant		0	116
152	~		0	122


216	(		0	211
216	)		1	abstract-declarator	94
216	,		1	abstract-declarator	94
216	[		0	212
216	identifier		0	15


280	)		0	317


344	!		1	selection-statement	126
344	%=		1	selection-statement	126
344	&		1	selection-statement	126
344	&=		1	selection-statement	126
344	(		1	selection-statement	126
344	)		1	selection-statement	126
344	*		1	selection-statement	126
344	*=		1	selection-statement	126
344	+		1	selection-statement	126
344	++		1	selection-statement	126
344	+=		1	selection-statement	126
344	,		1	selection-statement	126
344	-		1	selection-statement	126
344	--		1	selection-statement	126
344	-=		1	selection-statement	126
344	/=		1	selection-statement	126
344	;		1	selection-statement	126
344	<<=		1	selection-statement	126
344	=		1	selection-statement	126
344	>>=		1	selection-statement	126
344	^=		1	selection-statement	126
344	_KULV_END_		1	selection-statement	126
344	auto		1	selection-statement	126
344	break		1	selection-statement	126
344	case		1	selection-statement	126
344	char		1	selection-statement	126
344	character-constant		1	selection-statement	126
344	const		1	selection-statement	126
344	continue		1	selection-statement	126
344	default		1	selection-statement	126
344	do		1	selection-statement	126
344	double		1	selection-statement	126
344	else		1	selection-statement	126
344	enumeration-constant		1	selection-statement	126
344	extern		1	selection-statement	126
344	float		1	selection-statement	126
344	floating-constant		1	selection-statement	126
344	for		1	selection-statement	126
344	goto		1	selection-statement	126
344	identifier		1	selection-statement	126
344	if		1	selection-statement	126
344	int		1	selection-statement	126
344	integer-constant		1	selection-statement	126
344	long		1	selection-statement	126
344	register		1	selection-statement	126
344	return		1	selection-statement	126
344	short		1	selection-statement	126
344	signed		1	selection-statement	126
344	sizeof		1	selection-statement	126
344	static		1	selection-statement	126
344	string-constant		1	selection-statement	126
344	switch		1	selection-statement	126
344	typedef		1	selection-statement	126
344	unsigned		1	selection-statement	126
344	void		1	selection-statement	126
344	volatile		1	selection-statement	126
344	while		1	selection-statement	126
344	{		1	selection-statement	126
344	|=		1	selection-statement	126
344	}		1	selection-statement	126
344	~		1	selection-statement	126


33	(		1	pointer	73
33	)		1	pointer	73
33	*		0	2
33	,		1	pointer	73
33	[		1	pointer	73
33	const		0	5
33	identifier		1	pointer	73
33	volatile		0	30


97	!		1	primary-expression	210
97	%=		1	primary-expression	210
97	&		1	primary-expression	210
97	&=		1	primary-expression	210
97	(		1	primary-expression	210
97	)		1	primary-expression	210
97	*		1	primary-expression	210
97	*=		1	primary-expression	210
97	+		1	primary-expression	210
97	++		1	primary-expression	210
97	+=		1	primary-expression	210
97	,		1	primary-expression	210
97	-		1	primary-expression	210
97	--		1	primary-expression	210
97	-=		1	primary-expression	210
97	/=		1	primary-expression	210
97	:		210	169
97	;		1	primary-expression	210
97	<<=		1	primary-expression	210
97	=		1	primary-expression	210
97	>>=		1	primary-expression	210
97	^=		1	primary-expression	210
97	_KULV_END_		1	primary-expression	210
97	auto		1	primary-expression	210
97	break		1	primary-expression	210
97	case		1	primary-expression	210
97	char		1	primary-expression	210
97	character-constant		1	primary-expression	210
97	const		1	primary-expression	210
97	continue		1	primary-expression	210
97	default		1	primary-expression	210
97	do		1	primary-expression	210
97	double		1	primary-expression	210
97	else		1	primary-expression	210
97	enumeration-constant		1	primary-expression	210
97	extern		1	primary-expression	210
97	float		1	primary-expression	210
97	floating-constant		1	primary-expression	210
97	for		1	primary-expression	210
97	goto		1	primary-expression	210
97	identifier		1	primary-expression	210
97	if		1	primary-expression	210
97	int		1	primary-expression	210
97	integer-constant		1	primary-expression	210
97	long		1	primary-expression	210
97	register		1	primary-expression	210
97	return		1	primary-expression	210
97	short		1	primary-expression	210
97	signed		1	primary-expression	210
97	sizeof		1	primary-expression	210
97	static		1	primary-expression	210
97	string-constant		1	primary-expression	210
97	switch		1	primary-expression	210
97	typedef		1	primary-expression	210
97	unsigned		1	primary-expression	210
97	void		1	primary-expression	210
97	volatile		1	primary-expression	210
97	while		1	primary-expression	210
97	{		1	primary-expression	210
97	|=		1	primary-expression	210
97	}		1	primary-expression	210
97	~		1	primary-expression	210


161	while		0	245
225	char		0	4
225	const		0	5
225	double		0	10
225	float		0	13
225	int		0	16
225	long		0	17
225	short		0	20
225	signed		0	21
225	unsigned		0	28
225	void		0	29
225	volatile		0	30
225	}		0	296


289	)		1	parameter-list	81
289	,		1	parameter-list	81


353	;		0	362


10	(		1	type-specifier	30
10	)		1	type-specifier	30
10	*		1	type-specifier	30
10	,		1	type-specifier	30
10	:		1	type-specifier	30
10	;		1	type-specifier	30
10	[		1	type-specifier	30
10	auto		1	type-specifier	30
10	char		1	type-specifier	30
10	const		1	type-specifier	30
10	double		1	type-specifier	30
10	extern		1	type-specifier	30
10	float		1	type-specifier	30
10	identifier		1	type-specifier	30
10	int		1	type-specifier	30
10	long		1	type-specifier	30
10	register		1	type-specifier	30
10	short		1	type-specifier	30
10	signed		1	type-specifier	30
10	static		1	type-specifier	30
10	typedef		1	type-specifier	30
10	unsigned		1	type-specifier	30
10	void		1	type-specifier	30
10	volatile		1	type-specifier	30


74	!		1	expression-statement	116
74	%=		1	expression-statement	116
74	&		1	expression-statement	116
74	&=		1	expression-statement	116
74	(		1	expression-statement	116
74	)		1	expression-statement	116
74	*		1	expression-statement	116
74	*=		1	expression-statement	116
74	+		1	expression-statement	116
74	++		1	expression-statement	116
74	+=		1	expression-statement	116
74	,		1	expression-statement	116
74	-		1	expression-statement	116
74	--		1	expression-statement	116
74	-=		1	expression-statement	116
74	/=		1	expression-statement	116
74	;		1	expression-statement	116
74	<<=		1	expression-statement	116
74	=		1	expression-statement	116
74	>>=		1	expression-statement	116
74	^=		1	expression-statement	116
74	_KULV_END_		1	expression-statement	116
74	auto		1	expression-statement	116
74	break		1	expression-statement	116
74	case		1	expression-statement	116
74	char		1	expression-statement	116
74	character-constant		1	expression-statement	116
74	const		1	expression-statement	116
74	continue		1	expression-statement	116
74	default		1	expression-statement	116
74	do		1	expression-statement	116
74	double		1	expression-statement	116
74	else		1	expression-statement	116
74	enumeration-constant		1	expression-statement	116
74	extern		1	expression-statement	116
74	float		1	expression-statement	116
74	floating-constant		1	expression-statement	116
74	for		1	expression-statement	116
74	goto		1	expression-statement	116
74	identifier		1	expression-statement	116
74	if		1	expression-statement	116
74	int		1	expression-statement	116
74	integer-constant		1	expression-statement	116
74	long		1	expression-statement	116
74	register		1	expression-statement	116
74	return		1	expression-statement	116
74	short		1	expression-statement	116
74	signed		1	expression-statement	116
74	sizeof		1	expression-statement	116
74	static		1	expression-statement	116
74	string-constant		1	expression-statement	116
74	switch		1	expression-statement	116
74	typedef		1	expression-statement	116
74	unsigned		1	expression-statement	116
74	void		1	expression-statement	116
74	volatile		1	expression-statement	116
74	while		1	expression-statement	116
74	{		1	expression-statement	116
74	|=		1	expression-statement	116
74	}		1	expression-statement	116
74	~		1	expression-statement	116


138	identifier		0	228


202	!		1	assignment-operator	148
202	&		1	assignment-operator	148
202	(		1	assignment-operator	148
202	*		1	assignment-operator	148
202	+		1	assignment-operator	148
202	++		1	assignment-operator	148
202	-		1	assignment-operator	148
202	--		1	assignment-operator	148
202	character-constant		1	assignment-operator	148
202	enumeration-constant		1	assignment-operator	148
202	floating-constant		1	assignment-operator	148
202	identifier		1	assignment-operator	148
202	integer-constant		1	assignment-operator	148
202	sizeof		1	assignment-operator	148
202	string-constant		1	assignment-operator	148
202	~		1	assignment-operator	148


266	!		1	postfix-expression	206
266	!=		1	postfix-expression	206
266	%		1	postfix-expression	206
266	%=		1	postfix-expression	206
266	&		1	postfix-expression	206
266	&&		1	postfix-expression	206
266	&=		1	postfix-expression	206
266	(		1	postfix-expression	206
266	)		1	postfix-expression	206
266	*		1	postfix-expression	206
266	*=		1	postfix-expression	206
266	+		1	postfix-expression	206
266	++		1	postfix-expression	206
266	+=		1	postfix-expression	206
266	,		1	postfix-expression	206
266	-		1	postfix-expression	206
266	--		1	postfix-expression	206
266	-=		1	postfix-expression	206
266	->		1	postfix-expression	206
266	.		1	postfix-expression	206
266	/		1	postfix-expression	206
266	/=		1	postfix-expression	206
266	:		1	postfix-expression	206
266	;		1	postfix-expression	206
266	<		1	postfix-expression	206
266	<<		1	postfix-expression	206
266	<<=		1	postfix-expression	206
266	<=		1	postfix-expression	206
266	=		1	postfix-expression	206
266	==		1	postfix-expression	206
266	>		1	postfix-expression	206
266	>=		1	postfix-expression	206
266	>>		1	postfix-expression	206
266	>>=		1	postfix-expression	206
266	?		1	postfix-expression	206
266	[		1	postfix-expression	206
266	]		1	postfix-expression	206
266	^		1	postfix-expression	206
266	^=		1	postfix-expression	206
266	_KULV_END_		1	postfix-expression	206
266	auto		1	postfix-expression	206
266	break		1	postfix-expression	206
266	case		1	postfix-expression	206
266	char		1	postfix-expression	206
266	character-constant		1	postfix-expression	206
266	const		1	postfix-expression	206
266	continue		1	postfix-expression	206
266	default		1	postfix-expression	206
266	do		1	postfix-expression	206
266	double		1	postfix-expression	206
266	else		1	postfix-expression	206
266	enum		1	postfix-expression	206
266	enumeration-constant		1	postfix-expression	206
266	extern		1	postfix-expression	206
266	float		1	postfix-expression	206
266	floating-constant		1	postfix-expression	206
266	for		1	postfix-expression	206
266	goto		1	postfix-expression	206
266	identifier		1	postfix-expression	206
266	if		1	postfix-expression	206
266	int		1	postfix-expression	206
266	integer-constant		1	postfix-expression	206
266	long		1	postfix-expression	206
266	register		1	postfix-expression	206
266	return		1	postfix-expression	206
266	short		1	postfix-expression	206
266	signed		1	postfix-expression	206
266	sizeof		1	postfix-expression	206
266	static		1	postfix-expression	206
266	string-constant		1	postfix-expression	206
266	switch		1	postfix-expression	206
266	typedef		1	postfix-expression	206
266	unsigned		1	postfix-expression	206
266	void		1	postfix-expression	206
266	volatile		1	postfix-expression	206
266	while		1	postfix-expression	206
266	{		1	postfix-expression	206
266	|		1	postfix-expression	206
266	|=		1	postfix-expression	206
266	||		1	postfix-expression	206
266	}		1	postfix-expression	206
266	~		1	postfix-expression	206


330	,		1	enum-specifier	56
330	identifier		1	enum-specifier	56
330	}		1	enum-specifier	56


19	(		1	storage-class-specifier	20
19	)		1	storage-class-specifier	20
19	*		1	storage-class-specifier	20
19	,		1	storage-class-specifier	20
19	;		1	storage-class-specifier	20
19	[		1	storage-class-specifier	20
19	auto		1	storage-class-specifier	20
19	char		1	storage-class-specifier	20
19	const		1	storage-class-specifier	20
19	double		1	storage-class-specifier	20
19	extern		1	storage-class-specifier	20
19	float		1	storage-class-specifier	20
19	identifier		1	storage-class-specifier	20
19	int		1	storage-class-specifier	20
19	long		1	storage-class-specifier	20
19	register		1	storage-class-specifier	20
19	short		1	storage-class-specifier	20
19	signed		1	storage-class-specifier	20
19	static		1	storage-class-specifier	20
19	typedef		1	storage-class-specifier	20
19	unsigned		1	storage-class-specifier	20
19	void		1	storage-class-specifier	20
19	volatile		1	storage-class-specifier	20


83	!		1	assignment-expression	144
83	!=		1	assignment-expression	144
83	%		1	assignment-expression	144
83	%=		1	assignment-expression	144
83	&		1	assignment-expression	144
83	&&		1	assignment-expression	144
83	&=		1	assignment-expression	144
83	(		1	assignment-expression	144
83	)		1	assignment-expression	144
83	*		1	assignment-expression	144
83	*=		1	assignment-expression	144
83	+		1	assignment-expression	144
83	++		1	assignment-expression	144
83	+=		1	assignment-expression	144
83	,		1	assignment-expression	144
83	-		1	assignment-expression	144
83	--		1	assignment-expression	144
83	-=		1	assignment-expression	144
83	->		1	assignment-expression	144
83	.		1	assignment-expression	144
83	/		1	assignment-expression	144
83	/=		1	assignment-expression	144
83	:		1	assignment-expression	144
83	;		1	assignment-expression	144
83	<		1	assignment-expression	144
83	<<		1	assignment-expression	144
83	<<=		1	assignment-expression	144
83	<=		1	assignment-expression	144
83	=		1	assignment-expression	144
83	==		1	assignment-expression	144
83	>		1	assignment-expression	144
83	>=		1	assignment-expression	144
83	>>		1	assignment-expression	144
83	>>=		1	assignment-expression	144
83	?		1	assignment-expression	144
83	[		1	assignment-expression	144
83	]		1	assignment-expression	144
83	^		1	assignment-expression	144
83	^=		1	assignment-expression	144
83	_KULV_END_		1	assignment-expression	144
83	auto		1	assignment-expression	144
83	break		1	assignment-expression	144
83	case		1	assignment-expression	144
83	char		1	assignment-expression	144
83	character-constant		1	assignment-expression	144
83	const		1	assignment-expression	144
83	continue		1	assignment-expression	144
83	default		1	assignment-expression	144
83	do		1	assignment-expression	144
83	double		1	assignment-expression	144
83	else		1	assignment-expression	144
83	enum		1	assignment-expression	144
83	enumeration-constant		1	assignment-expression	144
83	extern		1	assignment-expression	144
83	float		1	assignment-expression	144
83	floating-constant		1	assignment-expression	144
83	for		1	assignment-expression	144
83	goto		1	assignment-expression	144
83	identifier		1	assignment-expression	144
83	if		1	assignment-expression	144
83	int		1	assignment-expression	144
83	integer-constant		1	assignment-expression	144
83	long		1	assignment-expression	144
83	register		1	assignment-expression	144
83	return		1	assignment-expression	144
83	short		1	assignment-expression	144
83	signed		1	assignment-expression	144
83	sizeof		1	assignment-expression	144
83	static		1	assignment-expression	144
83	string-constant		1	assignment-expression	144
83	switch		1	assignment-expression	144
83	typedef		1	assignment-expression	144
83	unsigned		1	assignment-expression	144
83	void		1	assignment-expression	144
83	volatile		1	assignment-expression	144
83	while		1	assignment-expression	144
83	{		1	assignment-expression	144
83	|		1	assignment-expression	144
83	|=		1	assignment-expression	144
83	||		1	assignment-expression	144
83	}		1	assignment-expression	144
83	~		1	assignment-expression	144


147	(		1	specifier-qualifier-list	49
147	)		1	specifier-qualifier-list	49
147	*		1	specifier-qualifier-list	49
147	:		1	specifier-qualifier-list	49
147	[		1	specifier-qualifier-list	49
147	identifier		1	specifier-qualifier-list	49
147	char		0	4
147	const		0	5
147	double		0	10
147	float		0	13
147	int		0	16
147	long		0	17
147	short		0	20
147	signed		0	21
147	unsigned		0	28
147	void		0	29
147	volatile		0	30


211	(		0	211
211	)		0	279
211	*		0	2
211	[		0	212
211	auto		0	3
211	char		0	4
211	const		0	5
211	double		0	10
211	extern		0	11
211	float		0	13
211	identifier		0	15
211	int		0	16
211	long		0	17
211	register		0	19
211	short		0	20
211	signed		0	21
211	static		0	22
211	typedef		0	27
211	unsigned		0	28
211	void		0	29
211	volatile		0	30


275	)		0	314

339	)		0	359
339	,		0	165

60	!		0	66
60	&		0	67
60	(		0	68
60	*		0	69
60	+		0	70
60	++		0	71
60	-		0	72
60	--		0	73
60	character-constant		0	81
60	enumeration-constant		0	89
60	floating-constant		0	94
60	identifier		0	133
60	integer-constant		0	100
60	sizeof		0	113
60	string-constant		0	116
60	{		0	142
60	~		0	122


124	!		1	direct-declarator	70
124	%=		1	direct-declarator	70
124	&		1	direct-declarator	70
124	&=		1	direct-declarator	70
124	(		1	direct-declarator	70
124	)		1	direct-declarator	70
124	*		1	direct-declarator	70
124	*=		1	direct-declarator	70
124	+		1	direct-declarator	70
124	++		1	direct-declarator	70
124	+=		1	direct-declarator	70
124	,		1	direct-declarator	70
124	-		1	direct-declarator	70
124	--		1	direct-declarator	70
124	-=		1	direct-declarator	70
124	/=		1	direct-declarator	70
124	:		1	direct-declarator	70
124	;		1	direct-declarator	70
124	<<=		1	direct-declarator	70
124	=		1	direct-declarator	70
124	>>=		1	direct-declarator	70
124	[		1	direct-declarator	70
124	^=		1	direct-declarator	70
124	_KULV_END_		1	direct-declarator	70
124	auto		1	direct-declarator	70
124	break		1	direct-declarator	70
124	case		1	direct-declarator	70
124	char		1	direct-declarator	70
124	character-constant		1	direct-declarator	70
124	const		1	direct-declarator	70
124	continue		1	direct-declarator	70
124	default		1	direct-declarator	70
124	do		1	direct-declarator	70
124	double		1	direct-declarator	70
124	else		1	direct-declarator	70
124	enum		1	direct-declarator	70
124	enumeration-constant		1	direct-declarator	70
124	extern		1	direct-declarator	70
124	float		1	direct-declarator	70
124	floating-constant		1	direct-declarator	70
124	for		1	direct-declarator	70
124	goto		1	direct-declarator	70
124	identifier		1	direct-declarator	70
124	if		1	direct-declarator	70
124	int		1	direct-declarator	70
124	integer-constant		1	direct-declarator	70
124	long		1	direct-declarator	70
124	register		1	direct-declarator	70
124	return		1	direct-declarator	70
124	short		1	direct-declarator	70
124	signed		1	direct-declarator	70
124	sizeof		1	direct-declarator	70
124	static		1	direct-declarator	70
124	string-constant		1	direct-declarator	70
124	switch		1	direct-declarator	70
124	typedef		1	direct-declarator	70
124	unsigned		1	direct-declarator	70
124	void		1	direct-declarator	70
124	volatile		1	direct-declarator	70
124	while		1	direct-declarator	70
124	{		1	direct-declarator	70
124	|=		1	direct-declarator	70
124	}		1	direct-declarator	70
124	~		1	direct-declarator	70


188	,		0	165
188	;		0	272


252	!		1	jump-statement	137
252	%=		1	jump-statement	137
252	&		1	jump-statement	137
252	&=		1	jump-statement	137
252	(		1	jump-statement	137
252	)		1	jump-statement	137
252	*		1	jump-statement	137
252	*=		1	jump-statement	137
252	+		1	jump-statement	137
252	++		1	jump-statement	137
252	+=		1	jump-statement	137
252	,		1	jump-statement	137
252	-		1	jump-statement	137
252	--		1	jump-statement	137
252	-=		1	jump-statement	137
252	/=		1	jump-statement	137
252	;		1	jump-statement	137
252	<<=		1	jump-statement	137
252	=		1	jump-statement	137
252	>>=		1	jump-statement	137
252	^=		1	jump-statement	137
252	_KULV_END_		1	jump-statement	137
252	auto		1	jump-statement	137
252	break		1	jump-statement	137
252	case		1	jump-statement	137
252	char		1	jump-statement	137
252	character-constant		1	jump-statement	137
252	const		1	jump-statement	137
252	continue		1	jump-statement	137
252	default		1	jump-statement	137
252	do		1	jump-statement	137
252	double		1	jump-statement	137
252	else		1	jump-statement	137
252	enumeration-constant		1	jump-statement	137
252	extern		1	jump-statement	137
252	float		1	jump-statement	137
252	floating-constant		1	jump-statement	137
252	for		1	jump-statement	137
252	goto		1	jump-statement	137
252	identifier		1	jump-statement	137
252	if		1	jump-statement	137
252	int		1	jump-statement	137
252	integer-constant		1	jump-statement	137
252	long		1	jump-statement	137
252	register		1	jump-statement	137
252	return		1	jump-statement	137
252	short		1	jump-statement	137
252	signed		1	jump-statement	137
252	sizeof		1	jump-statement	137
252	static		1	jump-statement	137
252	string-constant		1	jump-statement	137
252	switch		1	jump-statement	137
252	typedef		1	jump-statement	137
252	unsigned		1	jump-statement	137
252	void		1	jump-statement	137
252	volatile		1	jump-statement	137
252	while		1	jump-statement	137
252	{		1	jump-statement	137
252	|=		1	jump-statement	137
252	}		1	jump-statement	137
252	~		1	jump-statement	137


316	!		0	66
316	&		0	67
316	(		0	68
316	*		0	69
316	+		0	70
316	++		0	71
316	-		0	72
316	--		0	73
316	;		0	74
316	break		0	78
316	case		0	79
316	character-constant		0	81
316	continue		0	85
316	default		0	87
316	do		0	88
316	enumeration-constant		0	89
316	floating-constant		0	94
316	for		0	95
316	goto		0	96
316	identifier		0	97
316	if		0	98
316	integer-constant		0	100
316	return		0	110
316	sizeof		0	113
316	string-constant		0	116
316	switch		0	117
316	while		0	120
316	{		0	43
316	~		0	122


5	(		1	type-qualifier	33
5	)		1	type-qualifier	33
5	*		1	type-qualifier	33
5	,		1	type-qualifier	33
5	:		1	type-qualifier	33
5	;		1	type-qualifier	33
5	[		1	type-qualifier	33
5	auto		1	type-qualifier	33
5	char		1	type-qualifier	33
5	const		1	type-qualifier	33
5	double		1	type-qualifier	33
5	extern		1	type-qualifier	33
5	float		1	type-qualifier	33
5	identifier		1	type-qualifier	33
5	int		1	type-qualifier	33
5	long		1	type-qualifier	33
5	register		1	type-qualifier	33
5	short		1	type-qualifier	33
5	signed		1	type-qualifier	33
5	static		1	type-qualifier	33
5	typedef		1	type-qualifier	33
5	unsigned		1	type-qualifier	33
5	void		1	type-qualifier	33
5	volatile		1	type-qualifier	33


69	!		1	unary-operator	197
69	&		1	unary-operator	197
69	(		1	unary-operator	197
69	*		1	unary-operator	197
69	+		1	unary-operator	197
69	++		1	unary-operator	197
69	-		1	unary-operator	197
69	--		1	unary-operator	197
69	character-constant		1	unary-operator	197
69	enumeration-constant		1	unary-operator	197
69	floating-constant		1	unary-operator	197
69	identifier		1	unary-operator	197
69	integer-constant		1	unary-operator	197
69	sizeof		1	unary-operator	197
69	string-constant		1	unary-operator	197
69	~		1	unary-operator	197


133	!		1	primary-expression	210
133	!=		1	primary-expression	210
133	%		1	primary-expression	210
133	%=		1	primary-expression	210
133	&		1	primary-expression	210
133	&&		1	primary-expression	210
133	&=		1	primary-expression	210
133	(		1	primary-expression	210
133	)		1	primary-expression	210
133	*		1	primary-expression	210
133	*=		1	primary-expression	210
133	+		1	primary-expression	210
133	++		1	primary-expression	210
133	+=		1	primary-expression	210
133	,		1	primary-expression	210
133	-		1	primary-expression	210
133	--		1	primary-expression	210
133	-=		1	primary-expression	210
133	->		1	primary-expression	210
133	.		1	primary-expression	210
133	/		1	primary-expression	210
133	/=		1	primary-expression	210
133	:		1	primary-expression	210
133	;		1	primary-expression	210
133	<		1	primary-expression	210
133	<<		1	primary-expression	210
133	<<=		1	primary-expression	210
133	<=		1	primary-expression	210
133	=		1	primary-expression	210
133	==		1	primary-expression	210
133	>		1	primary-expression	210
133	>=		1	primary-expression	210
133	>>		1	primary-expression	210
133	>>=		1	primary-expression	210
133	?		1	primary-expression	210
133	[		1	primary-expression	210
133	]		1	primary-expression	210
133	^		1	primary-expression	210
133	^=		1	primary-expression	210
133	_KULV_END_		1	primary-expression	210
133	auto		1	primary-expression	210
133	break		1	primary-expression	210
133	case		1	primary-expression	210
133	char		1	primary-expression	210
133	character-constant		1	primary-expression	210
133	const		1	primary-expression	210
133	continue		1	primary-expression	210
133	default		1	primary-expression	210
133	do		1	primary-expression	210
133	double		1	primary-expression	210
133	else		1	primary-expression	210
133	enum		1	primary-expression	210
133	enumeration-constant		1	primary-expression	210
133	extern		1	primary-expression	210
133	float		1	primary-expression	210
133	floating-constant		1	primary-expression	210
133	for		1	primary-expression	210
133	goto		1	primary-expression	210
133	identifier		1	primary-expression	210
133	if		1	primary-expression	210
133	int		1	primary-expression	210
133	integer-constant		1	primary-expression	210
133	long		1	primary-expression	210
133	register		1	primary-expression	210
133	return		1	primary-expression	210
133	short		1	primary-expression	210
133	signed		1	primary-expression	210
133	sizeof		1	primary-expression	210
133	static		1	primary-expression	210
133	string-constant		1	primary-expression	210
133	switch		1	primary-expression	210
133	typedef		1	primary-expression	210
133	unsigned		1	primary-expression	210
133	void		1	primary-expression	210
133	volatile		1	primary-expression	210
133	while		1	primary-expression	210
133	{		1	primary-expression	210
133	|		1	primary-expression	210
133	|=		1	primary-expression	210
133	||		1	primary-expression	210
133	}		1	primary-expression	210
133	~		1	primary-expression	210


197	!		1	assignment-operator	149
197	&		1	assignment-operator	149
197	(		1	assignment-operator	149
197	*		1	assignment-operator	149
197	+		1	assignment-operator	149
197	++		1	assignment-operator	149
197	-		1	assignment-operator	149
197	--		1	assignment-operator	149
197	character-constant		1	assignment-operator	149
197	enumeration-constant		1	assignment-operator	149
197	floating-constant		1	assignment-operator	149
197	identifier		1	assignment-operator	149
197	integer-constant		1	assignment-operator	149
197	sizeof		1	assignment-operator	149
197	string-constant		1	assignment-operator	149
197	~		1	assignment-operator	49


261	!		1	multiplicative-expression	186
261	!=		1	multiplicative-expression	186
261	%		1	multiplicative-expression	186
261	%=		1	multiplicative-expression	186
261	&		1	multiplicative-expression	186
261	&&		1	multiplicative-expression	186
261	&=		1	multiplicative-expression	186
261	(		1	multiplicative-expression	186
261	)		1	multiplicative-expression	186
261	*		1	multiplicative-expression	186
261	*=		1	multiplicative-expression	186
261	+		1	multiplicative-expression	186
261	++		1	multiplicative-expression	186
261	+=		1	multiplicative-expression	186
261	,		1	multiplicative-expression	186
261	-		1	multiplicative-expression	186
261	--		1	multiplicative-expression	186
261	-=		1	multiplicative-expression	186
261	->		1	multiplicative-expression	186
261	.		1	multiplicative-expression	186
261	/		1	multiplicative-expression	186
261	/=		1	multiplicative-expression	186
261	:		1	multiplicative-expression	186
261	;		1	multiplicative-expression	186
261	<		1	multiplicative-expression	186
261	<<		1	multiplicative-expression	186
261	<<=		1	multiplicative-expression	186
261	<=		1	multiplicative-expression	186
261	=		1	multiplicative-expression	186
261	==		1	multiplicative-expression	186
261	>		1	multiplicative-expression	186
261	>=		1	multiplicative-expression	186
261	>>		1	multiplicative-expression	186
261	>>=		1	multiplicative-expression	186
261	?		1	multiplicative-expression	186
261	[		1	multiplicative-expression	186
261	]		1	multiplicative-expression	186
261	^		1	multiplicative-expression	186
261	^=		1	multiplicative-expression	186
261	_KULV_END_		1	multiplicative-expression	186
261	auto		1	multiplicative-expression	186
261	break		1	multiplicative-expression	186
261	case		1	multiplicative-expression	186
261	char		1	multiplicative-expression	186
261	character-constant		1	multiplicative-expression	186
261	const		1	multiplicative-expression	186
261	continue		1	multiplicative-expression	186
261	default		1	multiplicative-expression	186
261	do		1	multiplicative-expression	186
261	double		1	multiplicative-expression	186
261	else		1	multiplicative-expression	186
261	enum		1	multiplicative-expression	186
261	enumeration-constant		1	multiplicative-expression	186
261	extern		1	multiplicative-expression	186
261	float		1	multiplicative-expression	186
261	floating-constant		1	multiplicative-expression	186
261	for		1	multiplicative-expression	186
261	goto		1	multiplicative-expression	186
261	identifier		1	multiplicative-expression	186
261	if		1	multiplicative-expression	186
261	int		1	multiplicative-expression	186
261	integer-constant		1	multiplicative-expression	186
261	long		1	multiplicative-expression	186
261	register		1	multiplicative-expression	186
261	return		1	multiplicative-expression	186
261	short		1	multiplicative-expression	186
261	signed		1	multiplicative-expression	186
261	sizeof		1	multiplicative-expression	186
261	static		1	multiplicative-expression	186
261	string-constant		1	multiplicative-expression	186
261	switch		1	multiplicative-expression	186
261	typedef		1	multiplicative-expression	186
261	unsigned		1	multiplicative-expression	186
261	void		1	multiplicative-expression	186
261	volatile		1	multiplicative-expression	186
261	while		1	multiplicative-expression	186
261	{		1	multiplicative-expression	186
261	|		1	multiplicative-expression	186
261	|=		1	multiplicative-expression	186
261	||		1	multiplicative-expression	186
261	}		1	multiplicative-expression	186
261	~		1	multiplicative-expression	186


325	,		1	struct-declarator	54
325	;		1	struct-declarator	54
325	char		1	struct-declarator	54
325	const		1	struct-declarator	54
325	double		1	struct-declarator	54
325	enum		1	struct-declarator	54
325	float		1	struct-declarator	54
325	int		1	struct-declarator	54
325	long		1	struct-declarator	54
325	short		1	struct-declarator	54
325	signed		1	struct-declarator	54
325	unsigned		1	struct-declarator	54
325	void		1	struct-declarator	54
325	volatile		1	struct-declarator	54
325	}		1	struct-declarator	54


46	!		1	declarator	64
46	%=		1	declarator	64
46	&		1	declarator	64
46	&=		1	declarator	64
46	(		0	44
46	)		1	declarator	64
46	*		1	declarator	64
46	*=		1	declarator	64
46	+		1	declarator	64
46	++		1	declarator	64
46	+=		1	declarator	64
46	,		1	declarator	64
46	-		1	declarator	64
46	--		1	declarator	64
46	-=		1	declarator	64
46	/=		1	declarator	64
46	:		1	declarator	64
46	;		1	declarator	64
46	<<=		1	declarator	64
46	=		1	declarator	64
46	>>=		1	declarator	64
46	[		0	45
46	^=		1	declarator	64
46	_KULV_END_		1	declarator	64
46	auto		1	declarator	64
46	break		1	declarator	64
46	case		1	declarator	64
46	char		1	declarator	64
46	character-constant		1	declarator	64
46	const		1	declarator	64
46	continue		1	declarator	64
46	default		1	declarator	64
46	do		1	declarator	64
46	double		1	declarator	64
46	else		1	declarator	64
46	enum		1	declarator	64
46	enumeration-constant		1	declarator	64
46	extern		1	declarator	64
46	float		1	declarator	64
46	floating-constant		1	declarator	64
46	for		1	declarator	64
46	goto		1	declarator	64
46	identifier		1	declarator	64
46	if		1	declarator	64
46	int		1	declarator	64
46	integer-constant		1	declarator	64
46	long		1	declarator	64
46	register		1	declarator	64
46	return		1	declarator	64
46	short		1	declarator	64
46	signed		1	declarator	64
46	sizeof		1	declarator	64
46	static		1	declarator	64
46	string-constant		1	declarator	64
46	switch		1	declarator	64
46	typedef		1	declarator	64
46	unsigned		1	declarator	64
46	void		1	declarator	64
46	volatile		1	declarator	64
46	while		1	declarator	64
46	{		1	declarator	64
46	|=		1	declarator	64
46	}		1	declarator	64
46	~		1	declarator	64


110	!		0	66
110	&		0	67
110	(		0	68
110	*		0	69
110	+		0	70
110	++		0	71
110	-		0	72
110	--		0	73
110	;		0	189
110	character-constant		0	81
110	enumeration-constant		0	89
110	floating-constant		0	94
110	identifier		0	133
110	integer-constant		0	100
110	sizeof		0	113
110	string-constant		0	116
110	~		0	122


174	!		0	66
174	&		0	67
174	(		0	68
174	*		0	69
174	+		0	70
174	++		0	71
174	-		0	72
174	--		0	73
174	character-constant		0	81
174	enumeration-constant		0	89
174	floating-constant		0	94
174	identifier		0	133
174	integer-constant		0	100
174	sizeof		0	113
174	string-constant		0	116
174	~		0	122


238	(		1	specifier-qualifier-list	48
238	)		1	specifier-qualifier-list	48
238	*		1	specifier-qualifier-list	48
238	:		1	specifier-qualifier-list	48
238	[		1	specifier-qualifier-list	48
238	identifier		1	specifier-qualifier-list	48


302	!		1	initializer	88
302	%=		1	initializer	88
302	&		1	initializer	88
302	&=		1	initializer	88
302	(		1	initializer	88
302	)		1	initializer	88
302	*		1	initializer	88
302	*=		1	initializer	88
302	+		1	initializer	88
302	++		1	initializer	88
302	+=		1	initializer	88
302	,		1	initializer	88
302	-		1	initializer	88
302	--		1	initializer	88
302	-=		1	initializer	88
302	/=		1	initializer	88
302	;		1	initializer	88
302	<<=		1	initializer	88
302	=		1	initializer	88
302	>>=		1	initializer	88
302	^=		1	initializer	88
302	_KULV_END_		1	initializer	88
302	auto		1	initializer	88
302	break		1	initializer	88
302	case		1	initializer	88
302	char		1	initializer	88
302	character-constant		1	initializer	88
302	const		1	initializer	88
302	continue		1	initializer	88
302	default		1	initializer	88
302	do		1	initializer	88
302	double		1	initializer	88
302	else		1	initializer	88
302	enumeration-constant		1	initializer	88
302	extern		1	initializer	88
302	float		1	initializer	88
302	floating-constant		1	initializer	88
302	for		1	initializer	88
302	goto		1	initializer	88
302	identifier		1	initializer	88
302	if		1	initializer	88
302	int		1	initializer	88
302	integer-constant		1	initializer	88
302	long		1	initializer	88
302	register		1	initializer	88
302	return		1	initializer	88
302	short		1	initializer	88
302	signed		1	initializer	88
302	sizeof		1	initializer	88
302	static		1	initializer	88
302	string-constant		1	initializer	88
302	switch		1	initializer	88
302	typedef		1	initializer	88
302	unsigned		1	initializer	88
302	void		1	initializer	88
302	volatile		1	initializer	88
302	while		1	initializer	88
302	{		1	initializer	88
302	|=		1	initializer	88
302	}		1	initializer	88
302	~		1	initializer	88


366	!		1	iteration-statement	133
366	%=		1	iteration-statement	133
366	&		1	iteration-statement	133
366	&=		1	iteration-statement	133
366	(		1	iteration-statement	133
366	)		1	iteration-statement	133
366	*		1	iteration-statement	133
366	*=		1	iteration-statement	133
366	+		1	iteration-statement	133
366	++		1	iteration-statement	133
366	+=		1	iteration-statement	133
366	,		1	iteration-statement	133
366	-		1	iteration-statement	133
366	--		1	iteration-statement	133
366	-=		1	iteration-statement	133
366	/=		1	iteration-statement	133
366	;		1	iteration-statement	133
366	<<=		1	iteration-statement	133
366	=		1	iteration-statement	133
366	>>=		1	iteration-statement	133
366	^=		1	iteration-statement	133
366	_KULV_END_		1	iteration-statement	133
366	auto		1	iteration-statement	133
366	break		1	iteration-statement	133
366	case		1	iteration-statement	133
366	char		1	iteration-statement	133
366	character-constant		1	iteration-statement	133
366	const		1	iteration-statement	133
366	continue		1	iteration-statement	133
366	default		1	iteration-statement	133
366	do		1	iteration-statement	133
366	double		1	iteration-statement	133
366	else		1	iteration-statement	133
366	enumeration-constant		1	iteration-statement	133
366	extern		1	iteration-statement	133
366	float		1	iteration-statement	133
366	floating-constant		1	iteration-statement	133
366	for		1	iteration-statement	133
366	goto		1	iteration-statement	133
366	identifier		1	iteration-statement	133
366	if		1	iteration-statement	133
366	int		1	iteration-statement	133
366	integer-constant		1	iteration-statement	133
366	long		1	iteration-statement	133
366	register		1	iteration-statement	133
366	return		1	iteration-statement	133
366	short		1	iteration-statement	133
366	signed		1	iteration-statement	133
366	sizeof		1	iteration-statement	133
366	static		1	iteration-statement	133
366	string-constant		1	iteration-statement	133
366	switch		1	iteration-statement	133
366	typedef		1	iteration-statement	133
366	unsigned		1	iteration-statement	133
366	void		1	iteration-statement	133
366	volatile		1	iteration-statement	133
366	while		1	iteration-statement	133
366	{		1	iteration-statement	133
366	|=		1	iteration-statement	133
366	}		1	iteration-statement	133
366	~		1	iteration-statement	133


55	!		1	direct-declarator	66
55	%=		1	direct-declarator	66
55	&		1	direct-declarator	66
55	&=		1	direct-declarator	66
55	(		1	direct-declarator	66
55	)		1	direct-declarator	66
55	*		1	direct-declarator	66
55	*=		1	direct-declarator	66
55	+		1	direct-declarator	66
55	++		1	direct-declarator	66
55	+=		1	direct-declarator	66
55	,		1	direct-declarator	66
55	-		1	direct-declarator	66
55	--		1	direct-declarator	66
55	-=		1	direct-declarator	66
55	/=		1	direct-declarator	66
55	:		1	direct-declarator	66
55	;		1	direct-declarator	66
55	<<=		1	direct-declarator	66
55	=		1	direct-declarator	66
55	>>=		1	direct-declarator	66
55	[		1	direct-declarator	66
55	^=		1	direct-declarator	66
55	_KULV_END_		1	direct-declarator	66
55	auto		1	direct-declarator	66
55	break		1	direct-declarator	66
55	case		1	direct-declarator	66
55	char		1	direct-declarator	66
55	character-constant		1	direct-declarator	66
55	const		1	direct-declarator	66
55	continue		1	direct-declarator	66
55	default		1	direct-declarator	66
55	do		1	direct-declarator	66
55	double		1	direct-declarator	66
55	else		1	direct-declarator	66
55	enum		1	direct-declarator	66
55	enumeration-constant		1	direct-declarator	66
55	extern		1	direct-declarator	66
55	float		1	direct-declarator	66
55	floating-constant		1	direct-declarator	66
55	for		1	direct-declarator	66
55	goto		1	direct-declarator	66
55	identifier		1	direct-declarator	66
55	if		1	direct-declarator	66
55	int		1	direct-declarator	66
55	integer-constant		1	direct-declarator	66
55	long		1	direct-declarator	66
55	register		1	direct-declarator	66
55	return		1	direct-declarator	66
55	short		1	direct-declarator	66
55	signed		1	direct-declarator	66
55	sizeof		1	direct-declarator	66
55	static		1	direct-declarator	66
55	string-constant		1	direct-declarator	66
55	switch		1	direct-declarator	66
55	typedef		1	direct-declarator	66
55	unsigned		1	direct-declarator	66
55	void		1	direct-declarator	66
55	volatile		1	direct-declarator	66
55	while		1	direct-declarator	66
55	{		1	direct-declarator	66
55	|=		1	direct-declarator	66
55	}		1	direct-declarator	66
55	~		1	direct-declarator	66


119	!		0	66
119	&		0	67
119	(		0	68
119	*		0	69
119	+		0	70
119	++		0	71
119	-		0	72
119	--		0	73
119	character-constant		0	81
119	enumeration-constant		0	89
119	floating-constant		0	94
119	identifier		0	133
119	integer-constant		0	100
119	sizeof		0	113
119	string-constant		0	116
119	~		0	122


183	!		0	66
183	&		0	67
183	(		0	68
183	*		0	69
183	+		0	70
183	++		0	71
183	-		0	72
183	--		0	73
183	character-constant		0	81
183	enumeration-constant		0	89
183	floating-constant		0	94
183	identifier		0	133
183	integer-constant		0	100
183	sizeof		0	113
183	string-constant		0	116
183	~		0	122


247	!		1	equality-expression	171
247	!=		1	equality-expression	171
247	%		1	equality-expression	171
247	%=		1	equality-expression	171
247	&		1	equality-expression	171
247	&&		1	equality-expression	171
247	&=		1	equality-expression	171
247	(		1	equality-expression	171
247	)		1	equality-expression	171
247	*		1	equality-expression	171
247	*=		1	equality-expression	171
247	+		1	equality-expression	171
247	++		1	equality-expression	171
247	+=		1	equality-expression	171
247	,		1	equality-expression	171
247	-		1	equality-expression	171
247	--		1	equality-expression	171
247	-=		1	equality-expression	171
247	->		1	equality-expression	171
247	.		1	equality-expression	171
247	/		1	equality-expression	171
247	/=		1	equality-expression	171
247	:		1	equality-expression	171
247	;		1	equality-expression	171
247	<		0	184
247	<<		1	equality-expression	171
247	<<=		1	equality-expression	171
247	<=		0	185
247	=		1	equality-expression	171
247	==		1	equality-expression	171
247	>		0	186
247	>=		0	187
247	>>		1	equality-expression	171
247	>>=		1	equality-expression	171
247	?		1	equality-expression	171
247	[		1	equality-expression	171
247	]		1	equality-expression	171
247	^		1	equality-expression	171
247	^=		1	equality-expression	171
247	_KULV_END_		1	equality-expression	171
247	auto		1	equality-expression	171
247	break		1	equality-expression	171
247	case		1	equality-expression	171
247	char		1	equality-expression	171
247	character-constant		1	equality-expression	171
247	const		1	equality-expression	171
247	continue		1	equality-expression	171
247	default		1	equality-expression	171
247	do		1	equality-expression	171
247	double		1	equality-expression	171
247	else		1	equality-expression	171
247	enum		1	equality-expression	171
247	enumeration-constant		1	equality-expression	171
247	extern		1	equality-expression	171
247	float		1	equality-expression	171
247	floating-constant		1	equality-expression	171
247	for		1	equality-expression	171
247	goto		1	equality-expression	171
247	identifier		1	equality-expression	171
247	if		1	equality-expression	171
247	int		1	equality-expression	171
247	integer-constant		1	equality-expression	171
247	long		1	equality-expression	171
247	register		1	equality-expression	171
247	return		1	equality-expression	171
247	short		1	equality-expression	171
247	signed		1	equality-expression	171
247	sizeof		1	equality-expression	171
247	static		1	equality-expression	171
247	string-constant		1	equality-expression	171
247	switch		1	equality-expression	171
247	typedef		1	equality-expression	171
247	unsigned		1	equality-expression	171
247	void		1	equality-expression	171
247	volatile		1	equality-expression	171
247	while		1	equality-expression	171
247	{		1	equality-expression	171
247	|		1	equality-expression	171
247	|=		1	equality-expression	171
247	||		1	equality-expression	171
247	}		1	equality-expression	171
247	~		1	equality-expression	171


311	!		0	66
311	&		0	67
311	(		0	68
311	*		0	69
311	+		0	70
311	++		0	71
311	-		0	72
311	--		0	73
311	character-constant		0	81
311	enumeration-constant		0	89
311	floating-constant		0	94
311	identifier		0	133
311	integer-constant		0	100
311	sizeof		0	113
311	string-constant		0	116
311	~		0	122


375	!		1	iteration-statement	136
375	%=		1	iteration-statement	136
375	&		1	iteration-statement	136
375	&=		1	iteration-statement	136
375	(		1	iteration-statement	136
375	)		1	iteration-statement	136
375	*		1	iteration-statement	136
375	*=		1	iteration-statement	136
375	+		1	iteration-statement	136
375	++		1	iteration-statement	136
375	+=		1	iteration-statement	136
375	,		1	iteration-statement	136
375	-		1	iteration-statement	136
375	--		1	iteration-statement	136
375	-=		1	iteration-statement	136
375	/=		1	iteration-statement	136
375	;		1	iteration-statement	136
375	<<=		1	iteration-statement	136
375	=		1	iteration-statement	136
375	>>=		1	iteration-statement	136
375	^=		1	iteration-statement	136
375	_KULV_END_		1	iteration-statement	136
375	auto		1	iteration-statement	136
375	break		1	iteration-statement	136
375	case		1	iteration-statement	136
375	char		1	iteration-statement	136
375	character-constant		1	iteration-statement	136
375	const		1	iteration-statement	136
375	continue		1	iteration-statement	136
375	default		1	iteration-statement	136
375	do		1	iteration-statement	136
375	double		1	iteration-statement	136
375	else		1	iteration-statement	136
375	enumeration-constant		1	iteration-statement	136
375	extern		1	iteration-statement	136
375	float		1	iteration-statement	136
375	floating-constant		1	iteration-statement	136
375	for		1	iteration-statement	136
375	goto		1	iteration-statement	136
375	identifier		1	iteration-statement	136
375	if		1	iteration-statement	136
375	int		1	iteration-statement	136
375	integer-constant		1	iteration-statement	136
375	long		1	iteration-statement	136
375	register		1	iteration-statement	136
375	return		1	iteration-statement	136
375	short		1	iteration-statement	136
375	signed		1	iteration-statement	136
375	sizeof		1	iteration-statement	136
375	static		1	iteration-statement	136
375	string-constant		1	iteration-statement	136
375	switch		1	iteration-statement	136
375	typedef		1	iteration-statement	136
375	unsigned		1	iteration-statement	136
375	void		1	iteration-statement	136
375	volatile		1	iteration-statement	136
375	while		1	iteration-statement	136
375	{		1	iteration-statement	136
375	|=		1	iteration-statement	136
375	}		1	iteration-statement	136
375	~		1	iteration-statement	136


0	(		0	1
0	*		0	2
0	auto		0	3
0	char		0	4
0	const		0	5
0	double		0	10
0	extern		0	11
0	float		0	13
0	identifier		0	15
0	int		0	16
0	long		0	17
0	register		0	19
0	short		0	20
0	signed		0	21
0	static		0	22
0	typedef		0	27
0	unsigned		0	28
0	void		0	29
0	volatile		0	30


64	(		1	function-definition	6
64	*		1	function-definition	6
64	_KULV_END_		1	function-definition	6
64	auto		1	function-definition	6
64	char		1	function-definition	6
64	const		1	function-definition	6
64	double		1	function-definition	6
64	extern		1	function-definition	6
64	float		1	function-definition	6
64	identifier		1	function-definition	6
64	int		1	function-definition	6
64	long		1	function-definition	6
64	register		1	function-definition	6
64	short		1	function-definition	6
64	signed		1	function-definition	6
64	static		1	function-definition	6
64	typedef		1	function-definition	6
64	unsigned		1	function-definition	6
64	void		1	function-definition	6
64	volatile		1	function-definition	6
64	{		1	function-definition	6


128	)		1	parameter-list	80
128	,		1	parameter-list	80


192	!		0	66
192	&		0	67
192	(		0	68
192	*		0	69
192	+		0	70
192	++		0	71
192	-		0	72
192	--		0	73
192	char		0	4
192	character-constant		0	81
192	const		0	5
192	double		0	10
192	enumeration-constant		0	89
192	float		0	13
192	floating-constant		0	94
192	identifier		0	133
192	int		0	16
192	integer-constant		0	100
192	long		0	17
192	short		0	20
192	signed		0	21
192	sizeof		0	113
192	string-constant		0	116
192	unsigned		0	28
192	void		0	29
192	volatile		0	30
192	~		0	122


256	!		1	logical-AND-expression	163
256	!=		1	logical-AND-expression	163
256	%		1	logical-AND-expression	163
256	%=		1	logical-AND-expression	163
256	&		1	logical-AND-expression	163
256	&&		1	logical-AND-expression	163
256	&=		1	logical-AND-expression	163
256	(		1	logical-AND-expression	163
256	)		1	logical-AND-expression	163
256	*		1	logical-AND-expression	163
256	*=		1	logical-AND-expression	163
256	+		1	logical-AND-expression	163
256	++		1	logical-AND-expression	163
256	+=		1	logical-AND-expression	163
256	,		1	logical-AND-expression	163
256	-		1	logical-AND-expression	163
256	--		1	logical-AND-expression	163
256	-=		1	logical-AND-expression	163
256	->		1	logical-AND-expression	163
256	.		1	logical-AND-expression	163
256	/		1	logical-AND-expression	163
256	/=		1	logical-AND-expression	163
256	:		1	logical-AND-expression	163
256	;		1	logical-AND-expression	163
256	<		1	logical-AND-expression	163
256	<<		1	logical-AND-expression	163
256	<<=		1	logical-AND-expression	163
256	<=		1	logical-AND-expression	163
256	=		1	logical-AND-expression	163
256	==		1	logical-AND-expression	163
256	>		1	logical-AND-expression	163
256	>=		1	logical-AND-expression	163
256	>>		1	logical-AND-expression	163
256	>>=		1	logical-AND-expression	163
256	?		1	logical-AND-expression	163
256	[		1	logical-AND-expression	163
256	]		1	logical-AND-expression	163
256	^		1	logical-AND-expression	163
256	^=		1	logical-AND-expression	163
256	_KULV_END_		1	logical-AND-expression	163
256	auto		1	logical-AND-expression	163
256	break		1	logical-AND-expression	163
256	case		1	logical-AND-expression	163
256	char		1	logical-AND-expression	163
256	character-constant		1	logical-AND-expression	163
256	const		1	logical-AND-expression	163
256	continue		1	logical-AND-expression	163
256	default		1	logical-AND-expression	163
256	do		1	logical-AND-expression	163
256	double		1	logical-AND-expression	163
256	else		1	logical-AND-expression	163
256	enum		1	logical-AND-expression	163
256	enumeration-constant		1	logical-AND-expression	163
256	extern		1	logical-AND-expression	163
256	float		1	logical-AND-expression	163
256	floating-constant		1	logical-AND-expression	163
256	for		1	logical-AND-expression	163
256	goto		1	logical-AND-expression	163
256	identifier		1	logical-AND-expression	163
256	if		1	logical-AND-expression	163
256	int		1	logical-AND-expression	163
256	integer-constant		1	logical-AND-expression	163
256	long		1	logical-AND-expression	163
256	register		1	logical-AND-expression	163
256	return		1	logical-AND-expression	163
256	short		1	logical-AND-expression	163
256	signed		1	logical-AND-expression	163
256	sizeof		1	logical-AND-expression	163
256	static		1	logical-AND-expression	163
256	string-constant		1	logical-AND-expression	163
256	switch		1	logical-AND-expression	163
256	typedef		1	logical-AND-expression	163
256	unsigned		1	logical-AND-expression	163
256	void		1	logical-AND-expression	163
256	volatile		1	logical-AND-expression	163
256	while		1	logical-AND-expression	163
256	{		1	logical-AND-expression	163
256	|		0	171
256	|=		1	logical-AND-expression	163
256	||		1	logical-AND-expression	163
256	}		1	logical-AND-expression	163
256	~		1	logical-AND-expression	163


320	(		1	direct-abstract-declarator	104
320	)		1	direct-abstract-declarator	104
320	,		1	direct-abstract-declarator	104
320	[		1	direct-abstract-declarator	104


41	(		0	1
41	*		0	2
41	;		0	35
41	identifier		0	15


105	!		1	conditional-expression	157
105	!=		1	conditional-expression	157
105	%		1	conditional-expression	157
105	%=		1	conditional-expression	157
105	&		1	conditional-expression	157
105	&&		1	conditional-expression	157
105	&=		1	conditional-expression	157
105	(		1	conditional-expression	157
105	)		1	conditional-expression	157
105	*		1	conditional-expression	157
105	*=		1	conditional-expression	157
105	+		1	conditional-expression	157
105	++		1	conditional-expression	157
105	+=		1	conditional-expression	157
105	,		1	conditional-expression	157
105	-		1	conditional-expression	157
105	--		1	conditional-expression	157
105	-=		1	conditional-expression	157
105	->		1	conditional-expression	157
105	.		1	conditional-expression	157
105	/		1	conditional-expression	157
105	/=		1	conditional-expression	157
105	:		1	conditional-expression	157
105	;		1	conditional-expression	157
105	<		1	conditional-expression	157
105	<<		1	conditional-expression	157
105	<<=		1	conditional-expression	157
105	<=		1	conditional-expression	157
105	=		1	conditional-expression	157
105	==		1	conditional-expression	157
105	>		1	conditional-expression	157
105	>=		1	conditional-expression	157
105	>>		1	conditional-expression	157
105	>>=		1	conditional-expression	157
105	?		0	173
105	[		1	conditional-expression	157
105	]		1	conditional-expression	157
105	^		1	conditional-expression	157
105	^=		1	conditional-expression	157
105	_KULV_END_		1	conditional-expression	157
105	auto		1	conditional-expression	157
105	break		1	conditional-expression	157
105	case		1	conditional-expression	157
105	char		1	conditional-expression	157
105	character-constant		1	conditional-expression	157
105	const		1	conditional-expression	157
105	continue		1	conditional-expression	157
105	default		1	conditional-expression	157
105	do		1	conditional-expression	157
105	double		1	conditional-expression	157
105	else		1	conditional-expression	157
105	enum		1	conditional-expression	157
105	enumeration-constant		1	conditional-expression	157
105	extern		1	conditional-expression	157
105	float		1	conditional-expression	157
105	floating-constant		1	conditional-expression	157
105	for		1	conditional-expression	157
105	goto		1	conditional-expression	157
105	identifier		1	conditional-expression	157
105	if		1	conditional-expression	157
105	int		1	conditional-expression	157
105	integer-constant		1	conditional-expression	157
105	long		1	conditional-expression	157
105	register		1	conditional-expression	157
105	return		1	conditional-expression	157
105	short		1	conditional-expression	157
105	signed		1	conditional-expression	157
105	sizeof		1	conditional-expression	157
105	static		1	conditional-expression	157
105	string-constant		1	conditional-expression	157
105	switch		1	conditional-expression	157
105	typedef		1	conditional-expression	157
105	unsigned		1	conditional-expression	157
105	void		1	conditional-expression	157
105	volatile		1	conditional-expression	157
105	while		1	conditional-expression	157
105	{		1	conditional-expression	157
105	|		1	conditional-expression	157
105	|=		1	conditional-expression	157
105	||		0	174
105	}		1	conditional-expression	157
105	~		1	conditional-expression	157


169	!		0	66
169	&		0	67
169	(		0	68
169	*		0	69
169	+		0	70
169	++		0	71
169	-		0	72
169	--		0	73
169	;		0	74
169	break		0	78
169	case		0	79
169	character-constant		0	81
169	continue		0	85
169	default		0	87
169	do		0	88
169	enumeration-constant		0	89
169	floating-constant		0	94
169	for		0	95
169	goto		0	96
169	identifier		0	97
169	if		0	98
169	integer-constant		0	100
169	return		0	110
169	sizeof		0	113
169	string-constant		0	116
169	switch		0	117
169	while		0	120
169	{		0	43
169	~		0	122


233	!		0	66
233	&		0	67
233	(		0	68
233	*		0	69
233	+		0	70
233	++		0	71
233	-		0	72
233	--		0	73
233	character-constant		0	81
233	enumeration-constant		0	89
233	floating-constant		0	94
233	identifier		0	133
233	integer-constant		0	100
233	sizeof		0	113
233	string-constant		0	116
233	~		0	122


297	identifier		0	300


361	!		0	66
361	&		0	67
361	(		0	68
361	*		0	69
361	+		0	70
361	++		0	71
361	-		0	72
361	--		0	73
361	;		0	74
361	break		0	78
361	case		0	79
361	character-constant		0	81
361	continue		0	85
361	default		0	87
361	do		0	88
361	enumeration-constant		0	89
361	floating-constant		0	94
361	for		0	95
361	goto		0	96
361	identifier		0	97
361	if		0	98
361	integer-constant		0	100
361	return		0	110
361	sizeof		0	113
361	string-constant		0	116
361	switch		0	117
361	while		0	120
361	{		0	43
361	~		0	122


50	(		1	declaration-specifiers	16
50	)		1	declaration-specifiers	16
50	*		1	declaration-specifiers	16
50	,		1	declaration-specifiers	16
50	;		1	declaration-specifiers	16
50	[		1	declaration-specifiers	16
50	identifier		1	declaration-specifiers	16


114	!		1	statement-list	122
114	&		1	statement-list	122
114	(		1	statement-list	122
114	*		1	statement-list	122
114	+		1	statement-list	122
114	++		1	statement-list	122
114	-		1	statement-list	122
114	--		1	statement-list	122
114	;		1	statement-list	122
114	break		1	statement-list	122
114	case		1	statement-list	122
114	character-constant		1	statement-list	122
114	continue		1	statement-list	122
114	default		1	statement-list	122
114	do		1	statement-list	122
114	enumeration-constant		1	statement-list	122
114	floating-constant		1	statement-list	122
114	for		1	statement-list	122
114	goto		1	statement-list	122
114	identifier		1	statement-list	122
114	if		1	statement-list	122
114	integer-constant		1	statement-list	122
114	return		1	statement-list	122
114	sizeof		1	statement-list	122
114	string-constant		1	statement-list	122
114	switch		1	statement-list	122
114	while		1	statement-list	122
114	{		1	statement-list	122
114	}		1	statement-list	122
114	~		1	statement-list	122


178	!		0	66
178	&		0	67
178	(		0	68
178	)		0	264
178	*		0	69
178	+		0	70
178	++		0	71
178	-		0	72
178	--		0	73
178	character-constant		0	81
178	enumeration-constant		0	89
178	floating-constant		0	94
178	identifier		0	133
178	integer-constant		0	100
178	sizeof		0	113
178	string-constant		0	116
178	~		0	122


242	!		0	66
242	&		0	67
242	(		0	68
242	*		0	69
242	+		0	70
242	++		0	71
242	-		0	72
242	--		0	73
242	;		0	74
242	break		0	78
242	case		0	79
242	character-constant		0	81
242	continue		0	85
242	default		0	87
242	do		0	88
242	enumeration-constant		0	89
242	floating-constant		0	94
242	for		0	95
242	goto		0	96
242	identifier		0	97
242	if		0	98
242	integer-constant		0	100
242	return		0	110
242	sizeof		0	113
242	string-constant		0	116
242	switch		0	117
242	while		0	120
242	{		0	43
242	~		0	122


306	!		0	66
306	&		0	67
306	(		0	68
306	*		0	69
306	+		0	70
306	++		0	71
306	-		0	72
306	--		0	73
306	;		0	337
306	character-constant		0	81
306	enumeration-constant		0	89
306	floating-constant		0	94
306	identifier		0	133
306	integer-constant		0	100
306	sizeof		0	113
306	string-constant		0	116
306	~		0	122


370	!		1	selection-statement	125
370	%=		1	selection-statement	125
370	&		1	selection-statement	125
370	&=		1	selection-statement	125
370	(		1	selection-statement	125
370	)		1	selection-statement	125
370	*		1	selection-statement	125
370	*=		1	selection-statement	125
370	+		1	selection-statement	125
370	++		1	selection-statement	125
370	+=		1	selection-statement	125
370	,		1	selection-statement	125
370	-		1	selection-statement	125
370	--		1	selection-statement	125
370	-=		1	selection-statement	125
370	/=		1	selection-statement	125
370	;		1	selection-statement	125
370	<<=		1	selection-statement	125
370	=		1	selection-statement	125
370	>>=		1	selection-statement	125
370	^=		1	selection-statement	125
370	_KULV_END_		1	selection-statement	125
370	auto		1	selection-statement	125
370	break		1	selection-statement	125
370	case		1	selection-statement	125
370	char		1	selection-statement	125
370	character-constant		1	selection-statement	125
370	const		1	selection-statement	125
370	continue		1	selection-statement	125
370	default		1	selection-statement	125
370	do		1	selection-statement	125
370	double		1	selection-statement	125
370	else		1	selection-statement	125
370	enumeration-constant		1	selection-statement	125
370	extern		1	selection-statement	125
370	float		1	selection-statement	125
370	floating-constant		1	selection-statement	125
370	for		1	selection-statement	125
370	goto		1	selection-statement	125
370	identifier		1	selection-statement	125
370	if		1	selection-statement	125
370	int		1	selection-statement	125
370	integer-constant		1	selection-statement	125
370	long		1	selection-statement	125
370	register		1	selection-statement	125
370	return		1	selection-statement	125
370	short		1	selection-statement	125
370	signed		1	selection-statement	125
370	sizeof		1	selection-statement	125
370	static		1	selection-statement	125
370	string-constant		1	selection-statement	125
370	switch		1	selection-statement	125
370	typedef		1	selection-statement	125
370	unsigned		1	selection-statement	125
370	void		1	selection-statement	125
370	volatile		1	selection-statement	125
370	while		1	selection-statement	125
370	{		1	selection-statement	125
370	|=		1	selection-statement	125
370	}		1	selection-statement	125
370	~		1	selection-statement	125


27	(		1	storage-class-specifier	23
27	)		1	storage-class-specifier	23
27	*		1	storage-class-specifier	23
27	,		1	storage-class-specifier	23
27	;		1	storage-class-specifier	23
27	[		1	storage-class-specifier	23
27	auto		1	storage-class-specifier	23
27	char		1	storage-class-specifier	23
27	const		1	storage-class-specifier	23
27	double		1	storage-class-specifier	23
27	extern		1	storage-class-specifier	23
27	float		1	storage-class-specifier	23
27	identifier		1	storage-class-specifier	23
27	int		1	storage-class-specifier	23
27	long		1	storage-class-specifier	23
27	register		1	storage-class-specifier	23
27	short		1	storage-class-specifier	23
27	signed		1	storage-class-specifier	23
27	static		1	storage-class-specifier	23
27	typedef		1	storage-class-specifier	23
27	unsigned		1	storage-class-specifier	23
27	void		1	storage-class-specifier	23
27	volatile		1	storage-class-specifier	23


91	!		1	inclusive-OR-expression	164
91	!=		1	inclusive-OR-expression	164
91	%		1	inclusive-OR-expression	164
91	%=		1	inclusive-OR-expression	164
91	&		1	inclusive-OR-expression	164
91	&&		1	inclusive-OR-expression	164
91	&=		1	inclusive-OR-expression	164
91	(		1	inclusive-OR-expression	164
91	)		1	inclusive-OR-expression	164
91	*		1	inclusive-OR-expression	164
91	*=		1	inclusive-OR-expression	164
91	+		1	inclusive-OR-expression	164
91	++		1	inclusive-OR-expression	164
91	+=		1	inclusive-OR-expression	164
91	,		1	inclusive-OR-expression	164
91	-		1	inclusive-OR-expression	164
91	--		1	inclusive-OR-expression	164
91	-=		1	inclusive-OR-expression	164
91	->		1	inclusive-OR-expression	164
91	.		1	inclusive-OR-expression	164
91	/		1	inclusive-OR-expression	164
91	/=		1	inclusive-OR-expression	164
91	:		1	inclusive-OR-expression	164
91	;		1	inclusive-OR-expression	164
91	<		1	inclusive-OR-expression	164
91	<<		1	inclusive-OR-expression	164
91	<<=		1	inclusive-OR-expression	164
91	<=		1	inclusive-OR-expression	164
91	=		1	inclusive-OR-expression	164
91	==		1	inclusive-OR-expression	164
91	>		1	inclusive-OR-expression	164
91	>=		1	inclusive-OR-expression	164
91	>>		1	inclusive-OR-expression	164
91	>>=		1	inclusive-OR-expression	164
91	?		1	inclusive-OR-expression	164
91	[		1	inclusive-OR-expression	164
91	]		1	inclusive-OR-expression	164
91	^		164	164
91	^=		1	inclusive-OR-expression	164
91	_KULV_END_		1	inclusive-OR-expression	164
91	auto		1	inclusive-OR-expression	164
91	break		1	inclusive-OR-expression	164
91	case		1	inclusive-OR-expression	164
91	char		1	inclusive-OR-expression	164
91	character-constant		1	inclusive-OR-expression	164
91	const		1	inclusive-OR-expression	164
91	continue		1	inclusive-OR-expression	164
91	default		1	inclusive-OR-expression	164
91	do		1	inclusive-OR-expression	164
91	double		1	inclusive-OR-expression	164
91	else		1	inclusive-OR-expression	164
91	enum		1	inclusive-OR-expression	164
91	enumeration-constant		1	inclusive-OR-expression	164
91	extern		1	inclusive-OR-expression	164
91	float		1	inclusive-OR-expression	164
91	floating-constant		1	inclusive-OR-expression	164
91	for		1	inclusive-OR-expression	164
91	goto		1	inclusive-OR-expression	164
91	identifier		1	inclusive-OR-expression	164
91	if		1	inclusive-OR-expression	164
91	int		1	inclusive-OR-expression	164
91	integer-constant		1	inclusive-OR-expression	164
91	long		1	inclusive-OR-expression	164
91	register		1	inclusive-OR-expression	164
91	return		1	inclusive-OR-expression	164
91	short		1	inclusive-OR-expression	164
91	signed		1	inclusive-OR-expression	164
91	sizeof		1	inclusive-OR-expression	164
91	static		1	inclusive-OR-expression	164
91	string-constant		1	inclusive-OR-expression	164
91	switch		1	inclusive-OR-expression	164
91	typedef		1	inclusive-OR-expression	164
91	unsigned		1	inclusive-OR-expression	164
91	void		1	inclusive-OR-expression	164
91	volatile		1	inclusive-OR-expression	164
91	while		1	inclusive-OR-expression	164
91	{		1	inclusive-OR-expression	164
91	|		1	inclusive-OR-expression	164
91	|=		1	inclusive-OR-expression	164
91	||		1	inclusive-OR-expression	164
91	}		1	inclusive-OR-expression	164
91	~		1	inclusive-OR-expression	164


155	!		1	jump-statement	139
155	%=		1	jump-statement	139
155	&		1	jump-statement	139
155	&=		1	jump-statement	139
155	(		1	jump-statement	139
155	)		1	jump-statement	139
155	*		1	jump-statement	139
155	*=		1	jump-statement	139
155	+		1	jump-statement	139
155	++		1	jump-statement	139
155	+=		1	jump-statement	139
155	,		1	jump-statement	139
155	-		1	jump-statement	139
155	--		1	jump-statement	139
155	-=		1	jump-statement	139
155	/=		1	jump-statement	139
155	;		1	jump-statement	139
155	<<=		1	jump-statement	139
155	=		1	jump-statement	139
155	>>=		1	jump-statement	139
155	^=		1	jump-statement	139
155	_KULV_END_		1	jump-statement	139
155	auto		1	jump-statement	139
155	break		1	jump-statement	139
155	case		1	jump-statement	139
155	char		1	jump-statement	139
155	character-constant		1	jump-statement	139
155	const		1	jump-statement	139
155	continue		1	jump-statement	139
155	default		1	jump-statement	139
155	do		1	jump-statement	139
155	double		1	jump-statement	139
155	else		1	jump-statement	139
155	enumeration-constant		1	jump-statement	139
155	extern		1	jump-statement	139
155	float		1	jump-statement	139
155	floating-constant		1	jump-statement	139
155	for		1	jump-statement	139
155	goto		1	jump-statement	139
155	identifier		1	jump-statement	139
155	if		1	jump-statement	139
155	int		1	jump-statement	139
155	integer-constant		1	jump-statement	139
155	long		1	jump-statement	139
155	register		1	jump-statement	139
155	return		1	jump-statement	139
155	short		1	jump-statement	139
155	signed		1	jump-statement	139
155	sizeof		1	jump-statement	139
155	static		1	jump-statement	139
155	string-constant		1	jump-statement	139
155	switch		1	jump-statement	139
155	typedef		1	jump-statement	139
155	unsigned		1	jump-statement	139
155	void		1	jump-statement	139
155	volatile		1	jump-statement	139
155	while		1	jump-statement	139
155	{		1	jump-statement	139
155	|=		1	jump-statement	139
155	}		1	jump-statement	139
155	~		1	jump-statement	139


219	!		1	direct-declarator	69
219	%=		1	direct-declarator	69
219	&		1	direct-declarator	69
219	&=		1	direct-declarator	69
219	(		1	direct-declarator	69
219	)		1	direct-declarator	69
219	*		1	direct-declarator	69
219	*=		1	direct-declarator	69
219	+		1	direct-declarator	69
219	++		1	direct-declarator	69
219	+=		1	direct-declarator	69
219	,		1	direct-declarator	69
219	-		1	direct-declarator	69
219	--		1	direct-declarator	69
219	-=		1	direct-declarator	69
219	/=		1	direct-declarator	69
219	:		1	direct-declarator	69
219	;		1	direct-declarator	69
219	<<=		1	direct-declarator	69
219	=		1	direct-declarator	69
219	>>=		1	direct-declarator	69
219	[		1	direct-declarator	69
219	^=		1	direct-declarator	69
219	_KULV_END_		1	direct-declarator	69
219	auto		1	direct-declarator	69
219	break		1	direct-declarator	69
219	case		1	direct-declarator	69
219	char		1	direct-declarator	69
219	character-constant		1	direct-declarator	69
219	const		1	direct-declarator	69
219	continue		1	direct-declarator	69
219	default		1	direct-declarator	69
219	do		1	direct-declarator	69
219	double		1	direct-declarator	69
219	else		1	direct-declarator	69
219	enum		1	direct-declarator	69
219	enumeration-constant		1	direct-declarator	69
219	extern		1	direct-declarator	69
219	float		1	direct-declarator	69
219	floating-constant		1	direct-declarator	69
219	for		1	direct-declarator	69
219	goto		1	direct-declarator	69
219	identifier		1	direct-declarator	69
219	if		1	direct-declarator	69
219	int		1	direct-declarator	69
219	integer-constant		1	direct-declarator	69
219	long		1	direct-declarator	69
219	register		1	direct-declarator	69
219	return		1	direct-declarator	69
219	short		1	direct-declarator	69
219	signed		1	direct-declarator	69
219	sizeof		1	direct-declarator	69
219	static		1	direct-declarator	69
219	string-constant		1	direct-declarator	69
219	switch		1	direct-declarator	69
219	typedef		1	direct-declarator	69
219	unsigned		1	direct-declarator	69
219	void		1	direct-declarator	69
219	volatile		1	direct-declarator	69
219	while		1	direct-declarator	69
219	{		1	direct-declarator	69
219	|=		1	direct-declarator	69
219	}		1	direct-declarator	69
219	~		1	direct-declarator	69


283	]		0	319


347	(		1	direct-abstract-declarator	101
347	)		1	direct-abstract-declarator	101
347	,		1	direct-abstract-declarator	101
347	[		1	direct-abstract-declarator	101

36	(		1	init-declarator	44
36	*		1	init-declarator	44
36	;		1	init-declarator	44
36	=		0	60
36	_KULV_END_		1	init-declarator	44
36	auto		0	3
36	char		0	4
36	const		0	5
36	double		0	10
36	extern		0	11
36	float		0	13
36	identifier		1	init-declarator	44
36	int		0	16
36	long		0	17
36	register		0	19
36	short		0	20
36	signed		0	21
36	static		0	22
36	typedef		0	27
36	unsigned		0	28
36	void		0	29
36	volatile		0	30
36	{		0	43


100	!		1	constant	215
100	!=		1	constant	215
100	%		1	constant	215
100	%=		1	constant	215
100	&		1	constant	215
100	&&		1	constant	215
100	&=		1	constant	215
100	(		1	constant	215
100	)		1	constant	215
100	*		1	constant	215
100	*=		1	constant	215
100	+		1	constant	215
100	++		1	constant	215
100	+=		1	constant	215
100	,		1	constant	215
100	-		1	constant	215
100	--		1	constant	215
100	-=		1	constant	215
100	->		1	constant	215
100	.		1	constant	215
100	/		1	constant	215
100	/=		1	constant	215
100	:		1	constant	215
100	;		1	constant	215
100	<		1	constant	215
100	<<		1	constant	215
100	<<=		1	constant	215
100	<=		1	constant	215
100	=		1	constant	215
100	==		1	constant	215
100	>		1	constant	215
100	>=		1	constant	215
100	>>		1	constant	215
100	>>=		1	constant	215
100	?		1	constant	215
100	[		1	constant	215
100	]		1	constant	215
100	^		1	constant	215
100	^=		1	constant	215
100	_KULV_END_		1	constant	215
100	auto		1	constant	215
100	break		1	constant	215
100	case		1	constant	215
100	char		1	constant	215
100	character-constant		1	constant	215
100	const		1	constant	215
100	continue		1	constant	215
100	default		1	constant	215
100	do		1	constant	215
100	double		1	constant	215
100	else		1	constant	215
100	enum		1	constant	215
100	enumeration-constant		1	constant	215
100	extern		1	constant	215
100	float		1	constant	215
100	floating-constant		1	constant	215
100	for		1	constant	215
100	goto		1	constant	215
100	identifier		1	constant	215
100	if		1	constant	215
100	int		1	constant	215
100	integer-constant		1	constant	215
100	long		1	constant	215
100	register		1	constant	215
100	return		1	constant	215
100	short		1	constant	215
100	signed		1	constant	215
100	sizeof		1	constant	215
100	static		1	constant	215
100	string-constant		1	constant	215
100	switch		1	constant	215
100	typedef		1	constant	215
100	unsigned		1	constant	215
100	void		1	constant	215
100	volatile		1	constant	215
100	while		1	constant	215
100	{		1	constant	215
100	|		1	constant	215
100	|=		1	constant	215
100	||		1	constant	215
100	}		1	constant	215
100	~		1	constant	215


164	!		0	66
164	&		0	67
164	(		0	68
164	*		0	69
164	+		0	70
164	++		0	71
164	-		0	72
164	--		0	73
164	character-constant		0	81
164	enumeration-constant		0	89
164	floating-constant		0	94
164	identifier		0	133
164	integer-constant		0	100
164	sizeof		0	113
164	string-constant		0	116
164	~		0	122


228	(		1	typedef-name	106
228	)		1	typedef-name	106
228	*		1	typedef-name	106
228	,		1	typedef-name	106
228	:		1	typedef-name	106
228	;		1	typedef-name	106
228	[		1	typedef-name	106
228	auto		1	typedef-name	106
228	char		1	typedef-name	106
228	const		1	typedef-name	106
228	double		1	typedef-name	106
228	extern		1	typedef-name	106
228	float		1	typedef-name	106
228	identifier		1	typedef-name	106
228	int		1	typedef-name	106
228	long		1	typedef-name	106
228	register		1	typedef-name	106
228	short		1	typedef-name	106
228	signed		1	typedef-name	106
228	static		1	typedef-name	106
228	typedef		1	typedef-name	106
228	unsigned		1	typedef-name	106
228	void		1	typedef-name	106
228	volatile		1	typedef-name	106


292	,		1	struct-declarator	53
292	:		0	326
292	;		1	struct-declarator	53
292	char		1	struct-declarator	53
292	const		1	struct-declarator	53
292	double		1	struct-declarator	53
292	enum		1	struct-declarator	53
292	float		1	struct-declarator	53
292	int		1	struct-declarator	53
292	long		1	struct-declarator	53
292	short		1	struct-declarator	53
292	signed		1	struct-declarator	53
292	unsigned		1	struct-declarator	53
292	void		1	struct-declarator	53
292	volatile		1	struct-declarator	53
292	}		1	struct-declarator	53


356	!		0	66
356	&		0	67
356	(		0	68
356	*		0	69
356	+		0	70
356	++		0	71
356	-		0	72
356	--		0	73
356	;		0	74
356	break		0	78
356	case		0	79
356	character-constant		0	81
356	continue		0	85
356	default		0	87
356	do		0	88
356	enumeration-constant		0	89
356	floating-constant		0	94
356	for		0	95
356	goto		0	96
356	identifier		0	97
356	if		0	98
356	integer-constant		0	100
356	return		0	110
356	sizeof		0	113
356	string-constant		0	116
356	switch		0	117
356	while		0	120
356	{		0	43
356	~		0	122


13	(		1	type-specifier	29
13	)		1	type-specifier	29
13	*		1	type-specifier	29
13	,		1	type-specifier	29
13	:		1	type-specifier	29
13	;		1	type-specifier	29
13	[		1	type-specifier	29
13	auto		1	type-specifier	29
13	char		1	type-specifier	29
13	const		1	type-specifier	29
13	double		1	type-specifier	29
13	extern		1	type-specifier	29
13	float		1	type-specifier	29
13	identifier		1	type-specifier	29
13	int		1	type-specifier	29
13	long		1	type-specifier	29
13	register		1	type-specifier	29
13	short		1	type-specifier	29
13	signed		1	type-specifier	29
13	static		1	type-specifier	29
13	typedef		1	type-specifier	29
13	unsigned		1	type-specifier	29
13	void		1	type-specifier	29
13	volatile		1	type-specifier	29


77	)		1	expression	142
77	,		1	expression	142
77	:		1	expression	142
77	;		1	expression	142
77	]		1	expression	142


141	!		1	init-declarator	45
141	%=		1	init-declarator	45
141	&		1	init-declarator	45
141	&=		1	init-declarator	45
141	(		1	init-declarator	45
141	)		1	init-declarator	45
141	*		1	init-declarator	45
141	*=		1	init-declarator	45
141	+		1	init-declarator	45
141	++		1	init-declarator	45
141	+=		1	init-declarator	45
141	,		1	init-declarator	45
141	-		1	init-declarator	45
141	--		1	init-declarator	45
141	-=		1	init-declarator	45
141	/=		1	init-declarator	45
141	;		1	init-declarator	45
141	<<=		1	init-declarator	45
141	=		1	init-declarator	45
141	>>=		1	init-declarator	45
141	^=		1	init-declarator	45
141	_KULV_END_		1	init-declarator	45
141	auto		1	init-declarator	45
141	break		1	init-declarator	45
141	case		1	init-declarator	45
141	char		1	init-declarator	45
141	character-constant		1	init-declarator	45
141	const		1	init-declarator	45
141	continue		1	init-declarator	45
141	default		1	init-declarator	45
141	do		1	init-declarator	45
141	double		1	init-declarator	45
141	else		1	init-declarator	45
141	enumeration-constant		1	init-declarator	45
141	extern		1	init-declarator	45
141	float		1	init-declarator	45
141	floating-constant		1	init-declarator	45
141	for		1	init-declarator	45
141	goto		1	init-declarator	45
141	identifier		1	init-declarator	45
141	if		1	init-declarator	45
141	int		1	init-declarator	45
141	integer-constant		1	init-declarator	45
141	long		1	init-declarator	45
141	register		1	init-declarator	45
141	return		1	init-declarator	45
141	short		1	init-declarator	45
141	signed		1	init-declarator	45
141	sizeof		1	init-declarator	45
141	static		1	init-declarator	45
141	string-constant		1	init-declarator	45
141	switch		1	init-declarator	45
141	typedef		1	init-declarator	45
141	unsigned		1	init-declarator	45
141	void		1	init-declarator	45
141	volatile		1	init-declarator	45
141	while		1	init-declarator	45
141	{		1	init-declarator	45
141	|=		1	init-declarator	45
141	}		1	init-declarator	45
141	~		1	init-declarator	45


205	!		1	assignment-operator	153
205	&		1	assignment-operator	153
205	(		1	assignment-operator	153
205	*		1	assignment-operator	153
205	+		1	assignment-operator	153
205	++		1	assignment-operator	153
205	-		1	assignment-operator	153
205	--		1	assignment-operator	153
205	character-constant		1	assignment-operator	153
205	enumeration-constant		1	assignment-operator	153
205	floating-constant		1	assignment-operator	153
205	identifier		1	assignment-operator	153
205	integer-constant		1	assignment-operator	153
205	sizeof		1	assignment-operator	153
205	string-constant		1	assignment-operator	153
205	~		1	assignment-operator	153


269	!		1	relational-expression	176
269	!=		1	relational-expression	176
269	%		1	relational-expression	176
269	%=		1	relational-expression	176
269	&		1	relational-expression	176
269	&&		1	relational-expression	176
269	&=		1	relational-expression	176
269	(		1	relational-expression	176
269	)		1	relational-expression	176
269	*		1	relational-expression	176
269	*=		1	relational-expression	176
269	+		1	relational-expression	176
269	++		1	relational-expression	176
269	+=		1	relational-expression	176
269	,		1	relational-expression	176
269	-		1	relational-expression	176
269	--		1	relational-expression	176
269	-=		1	relational-expression	176
269	->		1	relational-expression	176
269	.		1	relational-expression	176
269	/		1	relational-expression	176
269	/=		1	relational-expression	176
269	:		1	relational-expression	176
269	;		1	relational-expression	176
269	<		1	relational-expression	176
269	<<		0	190
269	<<=		1	relational-expression	176
269	<=		1	relational-expression	176
269	=		1	relational-expression	176
269	==		1	relational-expression	176
269	>		1	relational-expression	176
269	>=		1	relational-expression	176
269	>>		0	191
269	>>=		1	relational-expression	176
269	?		1	relational-expression	176
269	[		1	relational-expression	176
269	]		1	relational-expression	176
269	^		1	relational-expression	176
269	^=		1	relational-expression	176
269	_KULV_END_		1	relational-expression	176
269	auto		1	relational-expression	176
269	break		1	relational-expression	176
269	case		1	relational-expression	176
269	char		1	relational-expression	176
269	character-constant		1	relational-expression	176
269	const		1	relational-expression	176
269	continue		1	relational-expression	176
269	default		1	relational-expression	176
269	do		1	relational-expression	176
269	double		1	relational-expression	176
269	else		1	relational-expression	176
269	enum		1	relational-expression	176
269	enumeration-constant		1	relational-expression	176
269	extern		1	relational-expression	176
269	float		1	relational-expression	176
269	floating-constant		1	relational-expression	176
269	for		1	relational-expression	176
269	goto		1	relational-expression	176
269	identifier		1	relational-expression	176
269	if		1	relational-expression	176
269	int		1	relational-expression	176
269	integer-constant		1	relational-expression	176
269	long		1	relational-expression	176
269	register		1	relational-expression	176
269	return		1	relational-expression	176
269	short		1	relational-expression	176
269	signed		1	relational-expression	176
269	sizeof		1	relational-expression	176
269	static		1	relational-expression	176
269	string-constant		1	relational-expression	176
269	switch		1	relational-expression	176
269	typedef		1	relational-expression	176
269	unsigned		1	relational-expression	176
269	void		1	relational-expression	176
269	volatile		1	relational-expression	176
269	while		1	relational-expression	176
269	{		1	relational-expression	176
269	|		1	relational-expression	176
269	|=		1	relational-expression	176
269	||		1	relational-expression	176
269	}		1	relational-expression	176
269	~		1	relational-expression	176


333	!		1	initializer-list	91
333	%=		1	initializer-list	91
333	&		1	initializer-list	91
333	&=		1	initializer-list	91
333	(		1	initializer-list	91
333	)		1	initializer-list	91
333	*		1	initializer-list	91
333	*=		1	initializer-list	91
333	+		1	initializer-list	91
333	++		1	initializer-list	91
333	+=		1	initializer-list	91
333	,		1	initializer-list	91
333	-		1	initializer-list	91
333	--		1	initializer-list	91
333	-=		1	initializer-list	91
333	/=		1	initializer-list	91
333	;		1	initializer-list	91
333	<<=		1	initializer-list	91
333	=		1	initializer-list	91
333	>>=		1	initializer-list	91
333	^=		1	initializer-list	91
333	_KULV_END_		1	initializer-list	91
333	auto		1	initializer-list	91
333	break		1	initializer-list	91
333	case		1	initializer-list	91
333	char		1	initializer-list	91
333	character-constant		1	initializer-list	91
333	const		1	initializer-list	91
333	continue		1	initializer-list	91
333	default		1	initializer-list	91
333	do		1	initializer-list	91
333	double		1	initializer-list	91
333	else		1	initializer-list	91
333	enumeration-constant		1	initializer-list	91
333	extern		1	initializer-list	91
333	float		1	initializer-list	91
333	floating-constant		1	initializer-list	91
333	for		1	initializer-list	91
333	goto		1	initializer-list	91
333	identifier		1	initializer-list	91
333	if		1	initializer-list	91
333	int		1	initializer-list	91
333	integer-constant		1	initializer-list	91
333	long		1	initializer-list	91
333	register		1	initializer-list	91
333	return		1	initializer-list	91
333	short		1	initializer-list	91
333	signed		1	initializer-list	91
333	sizeof		1	initializer-list	91
333	static		1	initializer-list	91
333	string-constant		1	initializer-list	91
333	switch		1	initializer-list	91
333	typedef		1	initializer-list	91
333	unsigned		1	initializer-list	91
333	void		1	initializer-list	91
333	volatile		1	initializer-list	91
333	while		1	initializer-list	91
333	{		1	initializer-list	91
333	|=		1	initializer-list	91
333	}		1	initializer-list	91
333	~		1	initializer-list	91


22	(		1	storage-class-specifier	21
22	)		1	storage-class-specifier	21
22	*		1	storage-class-specifier	21
22	,		1	storage-class-specifier	21
22	;		1	storage-class-specifier	21
22	[		1	storage-class-specifier	21
22	auto		1	storage-class-specifier	21
22	char		1	storage-class-specifier	21
22	const		1	storage-class-specifier	21
22	double		1	storage-class-specifier	21
22	extern		1	storage-class-specifier	21
22	float		1	storage-class-specifier	21
22	identifier		1	storage-class-specifier1	2
22	int		1	storage-class-specifier	21
22	long		1	storage-class-specifier	21
22	register		1	storage-class-specifier	21
22	short		1	storage-class-specifier	21
22	signed		1	storage-class-specifier	21
22	static		1	storage-class-specifier	21
22	typedef		1	storage-class-specifier	21
22	unsigned		1	storage-class-specifier	21
22	void		1	storage-class-specifier	21
22	volatile		1	storage-class-specifier	21


86	!		0	66
86	&		0	67
86	(		0	68
86	*		0	69
86	+		0	70
86	++		0	71
86	-		0	72
86	--		0	73
86	;		0	74
86	auto		0	3
86	break		0	78
86	case		0	79
86	char		0	4
86	character-constant		0	81
86	const		0	5
86	continue		0	85
86	default		0	87
86	do		0	88
86	double		0	10
86	enumeration-constant		0	89
86	extern		0	11
86	float		0	13
86	floating-constant		0	94
86	for		0	95
86	goto		0	96
86	identifier		0	97
86	if		0	98
86	int		0	16
86	integer-constant		0	100
86	long		0	17
86	register		0	19
86	return		0	110
86	short		0	20
86	signed		0	21
86	sizeof		0	113
86	static		0	22
86	string-constant		0	116
86	switch		0	117
86	typedef		0	27
86	unsigned		0	28
86	void		0	29
86	volatile		0	30
86	while		0	120
86	{		0	43
86	}		0	159
86	~		0	122


150	!		1	unary-expression	191
150	!=		1	unary-expression	191
150	%		1	unary-expression	191
150	%=		1	unary-expression	191
150	&		1	unary-expression	191
150	&&		1	unary-expression	191
150	&=		1	unary-expression	191
150	(		1	unary-expression	191
150	)		1	unary-expression	191
150	*		1	unary-expression	191
150	*=		1	unary-expression	191
150	+		1	unary-expression	191
150	++		1	unary-expression	191
150	+=		1	unary-expression	191
150	,		1	unary-expression	191
150	-		1	unary-expression	191
150	--		1	unary-expression	191
150	-=		1	unary-expression	191
150	->		1	unary-expression	191
150	.		1	unary-expression	191
150	/		1	unary-expression	191
150	/=		1	unary-expression	191
150	:		1	unary-expression	191
150	;		1	unary-expression	191
150	<		1	unary-expression	191
150	<<		1	unary-expression	191
150	<<=		1	unary-expression	191
150	<=		1	unary-expression	191
150	=		1	unary-expression	191
150	==		1	unary-expression	191
150	>		1	unary-expression	191
150	>=		1	unary-expression	191
150	>>		1	unary-expression	191
150	>>=		1	unary-expression	191
150	?		1	unary-expression	191
150	[		1	unary-expression	191
150	]		1	unary-expression	191
150	^		1	unary-expression	191
150	^=		1	unary-expression	191
150	_KULV_END_		1	unary-expression	191
150	auto		1	unary-expression	191
150	break		1	unary-expression	191
150	case		1	unary-expression	191
150	char		1	unary-expression	191
150	character-constant		1	unary-expression	191
150	const		1	unary-expression	191
150	continue		1	unary-expression	191
150	default		1	unary-expression	191
150	do		1	unary-expression	191
150	double		1	unary-expression	191
150	else		1	unary-expression	191
150	enum		1	unary-expression	191
150	enumeration-constant		1	unary-expression	191
150	extern		1	unary-expression	191
150	float		1	unary-expression	19
150	floating-constant		1	unary-expression	191
150	for		1	unary-expression	191
150	goto		1	unary-expression	191
150	identifier		1	unary-expression	191
150	if		1	unary-expression	191
150	int		1	unary-expression	191
150	integer-constant		1	unary-expression	191
150	long		1	unary-expression	191
150	register		1	unary-expression	191
150	return		1	unary-expression	191
150	short		1	unary-expression	191
150	signed		1	unary-expression	191
150	sizeof		1	unary-expression	191
150	static		1	unary-expression	191
150	string-constant		1	unary-expression	191
150	switch		1	unary-expression	191
150	typedef		1	unary-expression	191
150	unsigned		1	unary-expression	191
150	void		1	unary-expression	191
150	volatile		1	unary-expression	191
150	while		1	unary-expression	191
150	{		1	unary-expression	191
150	|		1	unary-expression	191
150	|=		1	unary-expression	191
150	||		1	unary-expression	191
150	}		1	unary-expression	191
150	~		1	unary-expression	191


214	)		1	parameter-declaration	82
214	,		1	parameter-declaration	82


278	)		0	316
278	,		0	165


342	!		1	conditional-expression	158
342	!=		1	conditional-expression	158
342	%		1	conditional-expression	158
342	%=		1	conditional-expression	158
342	&		1	conditional-expression	158
342	&&		1	conditional-expression	158
342	&=		1	conditional-expression	158
342	(		1	conditional-expression	158
342	)		1	conditional-expression	158
342	*		1	conditional-expression	158
342	*=		1	conditional-expression	158
342	+		1	conditional-expression	158
342	++		1	conditional-expression	158
342	+=		1	conditional-expression	158
342	,		1	conditional-expression	158
342	-		1	conditional-expression	158
342	--		1	conditional-expression	158
342	-=		1	conditional-expression	158
342	->		1	conditional-expression	158
342	.		1	conditional-expression	158
342	/		1	conditional-expression	158
342	/=		1	conditional-expression	158
342	:		1	conditional-expression	158
342	;		1	conditional-expression	158
342	<		1	conditional-expression	158
342	<<		1	conditional-expression	158
342	<<=		1	conditional-expression	158
342	<=		1	conditional-expression	158
342	=		1	conditional-expression	158
342	==		1	conditional-expression	158
342	>		1	conditional-expression	158
342	>=		1	conditional-expression	158
342	>>		1	conditional-expression	158
342	>>=		1	conditional-expression	158
342	?		1	conditional-expression	158
342	[		1	conditional-expression	158
342	]		1	conditional-expression	158
342	^		1	conditional-expression	158
342	^=		1	conditional-expression	158
342	_KULV_END_		1	conditional-expression	158
342	auto		1	conditional-expression	158
342	break		1	conditional-expression	158
342	case		1	conditional-expression	158
342	char		1	conditional-expression	158
342	character-constant		1	conditional-expression	158
342	const		1	conditional-expression	158
342	continue		1	conditional-expression	158
342	default		1	conditional-expression	158
342	do		1	conditional-expression	158
342	double		1	conditional-expression	158
342	else		1	conditional-expression	158
342	enum		1	conditional-expression	158
342	enumeration-constant		1	conditional-expression	158
342	extern		1	conditional-expression	158
342	float		1	conditional-expression	158
342	floating-constant		1	conditional-expression	158
342	for		1	conditional-expression	158
342	goto		1	conditional-expression	158
342	identifier		1	conditional-expression	158
342	if		1	conditional-expression	158
342	int		1	conditional-expression	158
342	integer-constant		1	conditional-expression	158
342	long		1	conditional-expression	158
342	register		1	conditional-expression	158
342	return		1	conditional-expression	158
342	short		1	conditional-expression	158
342	signed		1	conditional-expression	158
342	sizeof		1	conditional-expression	158
342	static		1	conditional-expression	158
342	string-constant		1	conditional-expression	158
342	switch		1	conditional-expression	158
342	typedef		1	conditional-expression	158
342	unsigned		1	conditional-expression	158
342	void		1	conditional-expression	158
342	volatile		1	conditional-expression	158
342	while		1	conditional-expression	158
342	{		1	conditional-expression	158
342	|		1	conditional-expression	158
342	|=		1	conditional-expression	158
342	||		1	conditional-expression	158
342	}		1	conditional-expression	158
342	~		1	conditional-expression	158


63	!		1	declaration-list	12
63	%=		1	declaration-list	12
63	&		1	declaration-list	12
63	&=		1	declaration-list	12
63	(		1	declaration-list	12
63	)		1	declaration-list	12
63	*		1	declaration-list	12
63	*=		1	declaration-list	12
63	+		1	declaration-list	12
63	++		1	declaration-list	12
63	+=		1	declaration-list	12
63	,		1	declaration-list	12
63	-		1	declaration-list	12
63	--		1	declaration-list	12
63	-=		1	declaration-list	12
63	/=		1	declaration-list	12
63	;		1	declaration-list	12
63	<<=		1	declaration-list	12
63	=		1	declaration-list	12
63	>>=		1	declaration-list	12
63	^=		1	declaration-list	12
63	_KULV_END_		1	declaration-list	12
63	auto		1	declaration-list	12
63	break		1	declaration-list	12
63	case		1	declaration-list	12
63	char		1	declaration-list	12
63	character-constant		1	declaration-list	12
63	const		1	declaration-list	12
63	continue		1	declaration-list	12
63	default		1	declaration-list	12
63	do		1	declaration-list	12
63	double		1	declaration-list	12
63	else		1	declaration-list	12
63	enumeration-constant		1	declaration-list	12
63	extern		1	declaration-list	12
63	float		1	declaration-list	12
63	floating-constant		1	declaration-list	12
63	for		1	declaration-list	12
63	goto		1	declaration-list	12
63	identifier		1	declaration-list	12
63	if		1	declaration-list	12
63	int		1	declaration-list	12
63	integer-constant		1	declaration-list	12
63	long		1	declaration-list	12
63	register		1	declaration-list	12
63	return		1	declaration-list	12
63	short		1	declaration-list	12
63	signed		1	declaration-list	12
63	sizeof		1	declaration-list	12
63	static		1	declaration-list	12
63	string-constant		1	declaration-list	12
63	switch		1	declaration-list	12
63	typedef		1	declaration-list	12
63	unsigned		1	declaration-list	12
63	void		1	declaration-list	12
63	volatile		1	declaration-list	12
63	while		1	declaration-list	12
63	{		1	declaration-list	12
63	|=		1	declaration-list	12
63	}		1	declaration-list	12
63	~		1	declaration-list	12


127	)		1	identifier-list	85
127	,		1	identifier-list	85


191	!		0	66
191	&		0	67
191	(		0	68
191	*		0	69
191	+		0	70
191	++		0	71
191	-		0	72
191	--		0	73
191	character-constant		0	81
191	enumeration-constant		0	89
191	floating-constant		0	94
191	identifier		0	133
191	integer-constant		0	100
191	sizeof		0	113
191	string-constant		0	116
191	~		0	122

255	!		1	inclusive-OR-expression	165
255	!=		1	inclusive-OR-expression	165
255	%		1	inclusive-OR-expression	165
255	%=		1	inclusive-OR-expression	165
255	&		1	inclusive-OR-expression	165
255	&&		1	inclusive-OR-expression	165
255	&=		1	inclusive-OR-expression	165
255	(		1	inclusive-OR-expression	165
255	)		1	inclusive-OR-expression	165
255	*		1	inclusive-OR-expression	165
255	*=		1	inclusive-OR-expression	165
255	+		1	inclusive-OR-expression	165
255	++		1	inclusive-OR-expression	165
255	+=		1	inclusive-OR-expression	165
255	,		1	inclusive-OR-expression	165
255	-		1	inclusive-OR-expression	165
255	--		1	inclusive-OR-expression	165
255	-=		1	inclusive-OR-expression	165
255	->		1	inclusive-OR-expression	165
255	.		1	inclusive-OR-expression	165
255	/		1	inclusive-OR-expression	165
255	/=		1	inclusive-OR-expression	165
255	:		1	inclusive-OR-expression	165
255	;		1	inclusive-OR-expression	165
255	<		1	inclusive-OR-expression	165
255	<<		1	inclusive-OR-expression	165
255	<<=		1	inclusive-OR-expression	165
255	<=		1	inclusive-OR-expression	165
255	=		1	inclusive-OR-expression	165
255	==		1	inclusive-OR-expression	165
255	>		1	inclusive-OR-expression	165
255	>=		1	inclusive-OR-expression	165
255	>>		1	inclusive-OR-expression	165
255	>>=		1	inclusive-OR-expression	165
255	?		1	inclusive-OR-expression	165
255	[		1	inclusive-OR-expression	165
255	]		1	inclusive-OR-expression	165
255	^		0	164
255	^=		1	inclusive-OR-expression	165
255	_KULV_END_		1	inclusive-OR-expression	165
255	auto		1	inclusive-OR-expression	165
255	break		1	inclusive-OR-expression	165
255	case		1	inclusive-OR-expression	165
255	char		1	inclusive-OR-expression	165
255	character-constant		1	inclusive-OR-expression	165
255	const		1	inclusive-OR-expression	165
255	continue		1	inclusive-OR-expression	165
255	default		1	inclusive-OR-expression	165
255	do		1	inclusive-OR-expression	165
255	double		1	inclusive-OR-expression	165
255	else		1	inclusive-OR-expression	165
255	enum		1	inclusive-OR-expression	165
255	enumeration-constant		1	inclusive-OR-expression	165
255	extern		1	inclusive-OR-expression	165
255	float		1	inclusive-OR-expression	165
255	floating-constant		1	inclusive-OR-expression	165
255	for		1	inclusive-OR-expression	165
255	goto		1	inclusive-OR-expression	165
255	identifier		1	inclusive-OR-expression	165
255	if		1	inclusive-OR-expression	165
255	int		1	inclusive-OR-expression	165
255	integer-constant		1	inclusive-OR-expression	165
255	long		1	inclusive-OR-expression	165
255	register		1	inclusive-OR-expression	165
255	return		1	inclusive-OR-expression	165
255	short		1	inclusive-OR-expression	165
255	signed		1	inclusive-OR-expression	165
255	sizeof		1	inclusive-OR-expression	165
255	static		1	inclusive-OR-expression	165
255	string-constant		1	inclusive-OR-expression	165
255	switch		1	inclusive-OR-expression	165
255	typedef		1	inclusive-OR-expression	165
255	unsigned		1	inclusive-OR-expression	165
255	void		1	inclusive-OR-expression	165
255	volatile		1	inclusive-OR-expression	165
255	while		1	inclusive-OR-expression	165
255	{		1	inclusive-OR-expression	165
255	|		1	inclusive-OR-expression	165
255	|=		1	inclusive-OR-expression	165
255	||		1	inclusive-OR-expression	165
255	}		1	inclusive-OR-expression	165
255	~		1	inclusive-OR-expression	165


319	(		1	direct-abstract-declarator	99
319	)		1	direct-abstract-declarator	99
319	,		1	direct-abstract-declarator	99
319	[		1	direct-abstract-declarator	99


8	auto		0	3
8	char		0	4
8	const		0	5
8	double		0	10
8	extern		0	11
8	float		0	13
8	int		0	16
8	long		0	17
8	register		0	19
8	short		0	20
8	signed		0	21
8	static		0	22
8	typedef		0	27
8	unsigned		0	28
8	void		0	29
8	volatile		0	30
8	{		0	43


136	char		0	4
136	const		0	5
136	double		0	10
136	float		0	13
136	int		0	16
136	long		0	17
136	short		0	20
136	signed		0	21
136	unsigned		0	28
136	void		0	29
136	volatile		0	30


264	!		1	postfix-expression	204
264	!=		1	postfix-expression	204
264	%		1	postfix-expression	204
264	%=		1	postfix-expression	204
264	&		1	postfix-expression	204
264	&&		1	postfix-expression	204
264	&=		1	postfix-expression	204
264	(		1	postfix-expression	204
264	)		1	postfix-expression	204
264	*		1	postfix-expression	204
264	*=		1	postfix-expression	204
264	+		1	postfix-expression	204
264	++		1	postfix-expression	204
264	+=		1	postfix-expression	204
264	,		1	postfix-expression	204
264	-		1	postfix-expression	204
264	--		1	postfix-expression	204
264	-=		1	postfix-expression	204
264	->		1	postfix-expression	204
264	.		1	postfix-expression	204
264	/		1	postfix-expression	204
264	/=		1	postfix-expression	204
264	:		1	postfix-expression	204
264	;		1	postfix-expression	204
264	<		1	postfix-expression	204
264	<<		1	postfix-expression	204
264	<<=		1	postfix-expression	204
264	<=		1	postfix-expression	204
264	=		1	postfix-expression	204
264	==		1	postfix-expression	204
264	>		1	postfix-expression	204
264	>=		1	postfix-expression	204
264	>>		1	postfix-expression	204
264	>>=		1	postfix-expression	204
264	?		1	postfix-expression	204
264	[		1	postfix-expression	204
264	]		1	postfix-expression	204
264	^		1	postfix-expression	204
264	^=		1	postfix-expression	204
264	_KULV_END_		1	postfix-expression	204
264	auto		1	postfix-expression	204
264	break		1	postfix-expression	204
264	case		1	postfix-expression	204
264	char		1	postfix-expression	204
264	character-constant		1	postfix-expression	204
264	const		1	postfix-expression	204
264	continue		1	postfix-expression	204
264	default		1	postfix-expression	204
264	do		1	postfix-expression	204
264	double		1	postfix-expression	204
264	else		1	postfix-expression	204
264	enum		1	postfix-expression	204
264	enumeration-constant		1	postfix-expression	204
264	extern		1	postfix-expression	204
264	float		1	postfix-expression	204
264	floating-constant		1	postfix-expression	204
264	for		1	postfix-expression	204
264	goto		1	postfix-expression	204
264	identifier		1	postfix-expression	204
264	if		1	postfix-expression	204
264	int		1	postfix-expression	204
264	integer-constant		1	postfix-expression	204
264	long		1	postfix-expression	204
264	register		1	postfix-expression	204
264	return		1	postfix-expression	204
264	short		1	postfix-expression	204
264	signed		1	postfix-expression	204
264	sizeof		1	postfix-expression	204
264	static		1	postfix-expression	204
264	string-constant		1	postfix-expression	204
264	switch		1	postfix-expression	204
264	typedef		1	postfix-expression	204
264	unsigned		1	postfix-expression	204
264	void		1	postfix-expression	204
264	volatile		1	postfix-expression	204
264	while		1	postfix-expression	204
264	{		1	postfix-expression	204
264	|		1	postfix-expression	204
264	|=		1	postfix-expression	204
264	||		1	postfix-expression	204
264	}		1	postfix-expression	204
264	~		1	postfix-expression	204


17	(		1	type-specifier	28
17	)		1	type-specifier	28
17	*		1	type-specifier	28
17	,		1	type-specifier	28
17	:		1	type-specifier	28
17	;		1	type-specifier	28
17	[		1	type-specifier	28
17	auto		1	type-specifier	28
17	char		1	type-specifier	28
17	const		1	type-specifier	28
17	double		1	type-specifier	28
17	extern		1	type-specifier	28
17	float		1	type-specifier	28
17	identifier		1	type-specifier	28
17	int		1	type-specifier	28
17	long		1	type-specifier	28
17	register		1	type-specifier	28
17	short		1	type-specifier	28
17	signed		1	type-specifier	28
17	static		1	type-specifier	28
17	typedef		1	type-specifier	28
17	unsigned		1	type-specifier	28
17	void		1	type-specifier	28
17	volatile		1	type-specifier	28


145	)		0	233


273	!		1	shift-expression	179
273	!=		1	shift-expression	179
273	%		1	shift-expression	179
273	%=		1	shift-expression	179
273	&		1	shift-expression	179
273	&&		1	shift-expression	179
273	&=		1	shift-expression	179
273	(		1	shift-expression	179
273	)		1	shift-expression	179
273	*		1	shift-expression	179
273	*=		1	shift-expression	179
273	+		0	153
273	++		1	shift-expression	179
273	+=		1	shift-expression	179
273	,		1	shift-expression	179
273	-		0	154
273	--		1	shift-expression	179
273	-=		1	shift-expression	179
273	->		1	shift-expression	179
273	.		1	shift-expression	179
273	/		1	shift-expression	179
273	/=		1	shift-expression	179
273	:		1	shift-expression	179
273	;		1	shift-expression	179
273	<		1	shift-expression	179
273	<<		1	shift-expression	179
273	<<=		1	shift-expression	179
273	<=		1	shift-expression	179
273	=		1	shift-expression	179
273	==		1	shift-expression	179
273	>		1	shift-expression	179
273	>=		1	shift-expression	179
273	>>		1	shift-expression	179
273	>>=		1	shift-expression	179
273	?		1	shift-expression	179
273	[		1	shift-expression	179
273	]		1	shift-expression	179
273	^		1	shift-expression	179
273	^=		1	shift-expression	179
273	_KULV_END_		1	shift-expression	179
273	auto		1	shift-expression	179
273	break		1	shift-expression	179
273	case		1	shift-expression	179
273	char		1	shift-expression	179
273	character-constant		1	shift-expression	179
273	const		1	shift-expression	179
273	continue		1	shift-expression	179
273	default		1	shift-expression	179
273	do		1	shift-expression	179
273	double		1	shift-expression	179
273	else		1	shift-expression	179
273	enum		1	shift-expression	179
273	enumeration-constant		1	shift-expression	179
273	extern		1	shift-expression	179
273	float		1	shift-expression	179
273	floating-constant		1	shift-expression	179
273	for		1	shift-expression	179
273	goto		1	shift-expression	179
273	identifier		1	shift-expression	179
273	if		1	shift-expression	179
273	int		1	shift-expression	179
273	integer-constant		1	shift-expression	179
273	long		1	shift-expression	179
273	register		1	shift-expression	179
273	return		1	shift-expression	179
273	short		1	shift-expression	179
273	signed		1	shift-expression	179
273	sizeof		1	shift-expression	179
273	static		1	shift-expression	179
273	string-constant		1	shift-expression	179
273	switch		1	shift-expression	179
273	typedef		1	shift-expression	179
273	unsigned		1	shift-expression	179
273	void		1	shift-expression	179
273	volatile		1	shift-expression	179
273	while		1	shift-expression	179
273	{		1	shift-expression	179
273	|		1	shift-expression	179
273	|=		1	shift-expression	179
273	||		1	shift-expression	179
273	}		1	shift-expression	179
273	~		1	shift-expression	179


122	!		1	unary-operator	200
122	&		1	unary-operator	200
122	(		1	unary-operator	200
122	*		1	unary-operator	200
122	+		1	unary-operator	200
122	++		1	unary-operator	200
122	-		1	unary-operator	200
122	--		1	unary-operator	200
122	character-constant		1	unary-operator	200
122	enumeration-constant		1	unary-operator	200
122	floating-constant		1	unary-operator	200
122	identifier		1	unary-operator	200
122	integer-constant		1	unary-operator	200
122	sizeof		1	unary-operator	200
122	string-constant		1	unary-operator	200
122	~		1	unary-operator	200


250	,		0	165
250	;		0	306


67	!		1	unary-operator	196
67	&		1	unary-operator	196
67	(		1	unary-operator	196
67	*		1	unary-operator	196
67	+		1	unary-operator	196
67	++		1	unary-operator	196
67	-		1	unary-operator	196
67	--		1	unary-operator	196
67	character-constant		1	unary-operator	196
67	enumeration-constant		1	unary-operator	196
67	floating-constant		1	unary-operator	196
67	identifier		1	unary-operator	196
67	integer-constant		1	unary-operator	196
67	sizeof		1	unary-operator	196
67	string-constant		1	unary-operator	196
67	~		1	unary-operator	196


195	!		1	compound-statement	119
195	%=		1	compound-statement	119
195	&		1	compound-statement	119
195	&=		1	compound-statement	119
195	(		1	compound-statement	119
195	)		1	compound-statement	119
195	*		1	compound-statement	119
195	*=		1	compound-statement	119
195	+		1	compound-statement	119
195	++		1	compound-statement	119
195	+=		1	compound-statement	119
195	,		1	compound-statement	119
195	-		1	compound-statement	119
195	--		1	compound-statement	119
195	-=		1	compound-statement	119
195	/=		1	compound-statement	119
195	;		1	compound-statement	119
195	<<=		1	compound-statement	119
195	=		1	compound-statement	119
195	>>=		1	compound-statement	119
195	^=		1	compound-statement	119
195	_KULV_END_		1	compound-statement	119
195	auto		1	compound-statement	119
195	break		1	compound-statement	119
195	case		1	compound-statement	119
195	char		1	compound-statement	119
195	character-constant		1	compound-statement	119
195	const		1	compound-statement	119
195	continue		1	compound-statement	119
195	default		1	compound-statement	119
195	do		1	compound-statement	119
195	double		1	compound-statement	119
195	else		1	compound-statement	119
195	enumeration-constant		1	compound-statement	119
195	extern		1	compound-statement	119
195	float		1	compound-statement	119
195	floating-constant		1	compound-statement	119
195	for		1	compound-statement	119
195	goto		1	compound-statement	119
195	identifier		1	compound-statement	119
195	if		1	compound-statement	119
195	int		1	compound-statement	119
195	integer-constant		1	compound-statement	119
195	long		1	compound-statement	119
195	register		1	compound-statement	119
195	return		1	compound-statement	119
195	short		1	compound-statement	119
195	signed		1	compound-statement	119
195	sizeof		1	compound-statement	119
195	static		1	compound-statement	119
195	string-constant		1	compound-statement	119
195	switch		1	compound-statement	119
195	typedef		1	compound-statement	119
195	unsigned		1	compound-statement	119
195	void		1	compound-statement	119
195	volatile		1	compound-statement	119
195	while		1	compound-statement	119
195	{		1	compound-statement	119
195	|=		1	compound-statement	119
195	}		1	compound-statement	119
195	~		1	compound-statement	119


323	]		0	347


44	)		0	124
44	auto		0	3
44	char		0	4
44	const		0	5
44	double		0	10
44	extern		0	11
44	float		0	13
44	identifier		0	127
44	int		0	16
44	long		0	17
44	register		0	19
44	short		0	20
44	signed		0	21
44	static		0	22
44	typedef		0	27
44	unsigned		0	28
44	void		0	29
44	volatile		0	30


172	!		0	66
172	&		0	67
172	(		0	68
172	*		0	69
172	+		0	70
172	++		0	71
172	-		0	72
172	--		0	73
172	character-constant		0	81
172	enumeration-constant		0	89
172	floating-constant		0	94
172	identifier		0	133
172	integer-constant		0	100
172	sizeof		0	113
172	string-constant		0	116
172	~		0	122


300	,		1	enumerator	61
300	=		0	332
300	identifier		1	enumerator	61
300	}		1	enumerator	61


53	identifier		1	struct-or-union	39
53	{		1	struct-or-union	39


181	identifier		0	265


309	!		0	66
309	&		0	67
309	(		0	68
309	*		0	69
309	+		0	70
309	++		0	71
309	-		0	72
309	--		0	73
309	;		0	74
309	break		0	78
309	case		0	79
309	character-constant		0	81
309	continue		0	85
309	default		0	87
309	do		0	88
309	enumeration-constant		0	89
309	floating-constant		0	94
309	for		0	95
309	goto		0	96
309	identifier		0	97
309	if		0	98
309	integer-constant		0	100
309	return		0	110
309	sizeof		0	113
309	string-constant		0	116
309	switch		0	117
309	while		0	120
309	{		0	43
309	~		0	122


30	(		1	type-qualifier	34
30	)		1	type-qualifier	34
30	*		1	type-qualifier	34
30	,		1	type-qualifier	34
30	:		1	type-qualifier	34
30	;		1	type-qualifier	34
30	[		1	type-qualifier	34
30	auto		1	type-qualifier	34
30	char		1	type-qualifier	34
30	const		1	type-qualifier	34
30	double		1	type-qualifier	34
30	extern		1	type-qualifier	34
30	float		1	type-qualifier	34
30	identifier		1	type-qualifier	34
30	int		1	type-qualifier	34
30	long		1	type-qualifier	34
30	register		1	type-qualifier	34
30	short		1	type-qualifier	34
30	signed		1	type-qualifier	34
30	static		1	type-qualifier	34
30	typedef		1	type-qualifier	34
30	unsigned		1	type-qualifier	34
30	void		1	type-qualifier	34
30	volatile		1	type-qualifier	34


158	!		0	66
158	&		0	67
158	(		0	68
158	*		0	69
158	+		0	70
158	++		0	71
158	-		0	72
158	--		0	73
158	;		0	74
158	break		0	78
158	case		0	79
158	character-constant		0	81
158	continue		0	85
158	default		0	87
158	do		0	88
158	enumeration-constant		0	89
158	floating-constant		0	94
158	for		0	95
158	goto		0	96
158	identifier		0	97
158	if		0	98
158	integer-constant		0	100
158	return		0	110
158	sizeof		0	113
158	string-constant		0	116
158	switch		0	117
158	while		0	120
158	{		0	43
158	}		0	243
158	~		0	122


286	(		0	284
286	)		1	abstract-declarator	96
286	,		1	abstract-declarator	96
286	[		0	285


103	!		1	statement	107
103	%=		1	statement	107
103	&		1	statement	107
103	&=		1	statement	107
103	(		1	statement	107
103	)		1	statement	107
103	*		1	statement	107
103	*=		1	statement	107
103	+		1	statement	107
103	++		1	statement	107
103	+=		1	statement	107
103	,		1	statement	107
103	-		1	statement	107
103	--		1	statement	107
103	-=		1	statement	107
103	/=		1	statement	107
103	;		1	statement	107
103	<<=		1	statement	107
103	=		1	statement	107
103	>>=		1	statement	107
103	^=		1	statement	107
103	_KULV_END_		1	statement	107
103	auto		1	statement	107
103	break		1	statement	107
103	case		1	statement	107
103	char		1	statement	107
103	character-constant		1	statement	107
103	const		1	statement	107
103	continue		1	statement	107
103	default		1	statement	107
103	do		1	statement	107
103	double		1	statement	107
103	else		1	statement	107
103	enumeration-constant		1	statement	107
103	extern		1	statement	107
103	float		1	statement	107
103	floating-constant		1	statement	107
103	for		1	statement	107
103	goto		1	statement	107
103	identifier		1	statement	107
103	if		1	statement	107
103	int		1	statement	107
103	integer-constant		1	statement	107
103	long		1	statement	107
103	register		1	statement	107
103	return		1	statement	107
103	short		1	statement	107
103	signed		1	statement	107
103	sizeof		1	statement	107
103	static		1	statement	107
103	string-constant		1	statement	107
103	switch		1	statement	107
103	typedef		1	statement	107
103	unsigned		1	statement	107
103	void		1	statement	107
103	volatile		1	statement	107
103	while		1	statement	107
103	{		1	statement	107
103	|=		1	statement	107
103	}		1	statement	107
103	~		1	statement	107


231	,		0	301
231	}		0	302


359	!		0	66
359	&		0	67
359	(		0	68
359	*		0	69
359	+		0	70
359	++		0	71
359	-		0	72
359	--		0	73
359	;		0	74
359	break		0	78
359	case		0	79
359	character-constant		0	81
359	continue		0	85
359	default		0	87
359	do		0	88
359	enumeration-constant		0	89
359	floating-constant		0	94
359	for		0	95
359	goto		0	96
359	identifier		0	97
359	if		0	98
359	integer-constant		0	100
359	return		0	110
359	sizeof		0	113
359	string-constant		0	116
359	switch		0	117
359	while		0	120
359	{		0	43
359	~		0	122


112	!		1	relational-expression	173
112	!=		1	relational-expression	173
112	%		1	relational-expression	173
112	%=		1	relational-expression	173
112	&		1	relational-expression	173
112	&&		1	relational-expression	173
112	&=		1	relational-expression	173
112	(		1	relational-expression	173
112	)		1	relational-expression	173
112	*		1	relational-expression	173
112	*=		1	relational-expression	173
112	+		1	relational-expression	173
112	++		1	relational-expression	173
112	+=		1	relational-expression	173
112	,		1	relational-expression	173
112	-		1	relational-expression	173
112	--		1	relational-expression	173
112	-=		1	relational-expression	173
112	->		1	relational-expression	173
112	.		1	relational-expression	173
112	/		1	relational-expression	173
112	/=		1	relational-expression	173
112	:		1	relational-expression	173
112	;		1	relational-expression	173
112	<		1	relational-expression	173
112	<<		0	190
112	<<=		1	relational-expression	173
112	<=		1	relational-expression	173
112	=		1	relational-expression	173
112	==		1	relational-expression	173
112	>		1	relational-expression	173
112	>=		1	relational-expression	173
112	>>		0	191
112	>>=		1	relational-expression	173
112	?		1	relational-expression	173
112	[		1	relational-expression	173
112	]		1	relational-expression	173
112	^		1	relational-expression	173
112	^=		1	relational-expression	173
112	_KULV_END_		1	relational-expression	173
112	auto		1	relational-expression	173
112	break		1	relational-expression	173
112	case		1	relational-expression	173
112	char		1	relational-expression	173
112	character-constant		1	relational-expression	173
112	const		1	relational-expression	173
112	continue		1	relational-expression	173
112	default		1	relational-expression	173
112	do		1	relational-expression	173
112	double		1	relational-expression	173
112	else		1	relational-expression	173
112	enum		1	relational-expression	173
112	enumeration-constant		1	relational-expression	173
112	extern		1	relational-expression	173
112	float		1	relational-expression	173
112	floating-constant		1	relational-expression	173
112	for		1	relational-expression	173
112	goto		1	relational-expression	173
112	identifier		1	relational-expression	173
112	if		1	relational-expression	173
112	int		1	relational-expression	173
112	integer-constant		1	relational-expression	173
112	long		1	relational-expression	173
112	register		1	relational-expression	173
112	return		1	relational-expression	173
112	short		1	relational-expression	173
112	signed		1	relational-expression	173
112	sizeof		1	relational-expression	173
112	static		1	relational-expression	173
112	string-constant		1	relational-expression	173
112	switch		1	relational-expression	173
112	typedef		1	relational-expression	173
112	unsigned		1	relational-expression	173
112	void		1	relational-expression	173
112	volatile		1	relational-expression	173
112	while		1	relational-expression	173
112	{		1	relational-expression	173
112	|		1	relational-expression	173
112	|=		1	relational-expression	173
112	||		1	relational-expression	173
112	}		1	relational-expression	173
112	~		1	relational-expression	173


240	!		1	additive-expression	182
240	!=		1	additive-expression	182
240	%		0	175
240	%=		1	additive-expression	182
240	&		1	additive-expression	182
240	&&		1	additive-expression	182
240	&=		1	additive-expression	182
240	(		1	additive-expression	182
240	)		1	additive-expression	182
240	*		0	176
240	*=		1	additive-expression	182
240	+		1	additive-expression	182
240	++		1	additive-expression	182
240	+=		1	additive-expression	182
240	,		1	additive-expression	182
240	-		1	additive-expression	182
240	--		1	additive-expression	182
240	-=		1	additive-expression	182
240	->		1	additive-expression	182
240	.		1	additive-expression	182
240	/		0	177
240	/=		1	additive-expression	182
240	:		1	additive-expression	182
240	;		1	additive-expression	182
240	<		1	additive-expression	182
240	<<		1	additive-expression	182
240	<<=		1	additive-expression	182
240	<=		1	additive-expression	182
240	=		1	additive-expression	182
240	==		1	additive-expression	182
240	>		1	additive-expression	182
240	>=		1	additive-expression	182
240	>>		1	additive-expression	182
240	>>=		1	additive-expression	182
240	?		1	additive-expression	182
240	[		1	additive-expression	182
240	]		1	additive-expression	182
240	^		1	additive-expression	182
240	^=		1	additive-expression	182
240	_KULV_END_		1	additive-expression	182
240	auto		1	additive-expression	182
240	break		1	additive-expression	182
240	case		1	additive-expression	182
240	char		1	additive-expression	182
240	character-constant		1	additive-expression	182
240	const		1	additive-expression	182
240	continue		1	additive-expression	182
240	default		1	additive-expression	182
240	do		1	additive-expression	182
240	double		1	additive-expression	182
240	else		1	additive-expression	182
240	enum		1	additive-expression	182
240	enumeration-constant		1	additive-expression	182
240	extern		1	additive-expression	182
240	float		1	additive-expression	182
240	floating-constant		1	additive-expression	182
240	for		1	additive-expression	182
240	goto		1	additive-expression	182
240	identifier		1	additive-expression	182
240	if		1	additive-expression	182
240	int		1	additive-expression	182
240	integer-constant		1	additive-expression	182
240	long		1	additive-expression	182
240	register		1	additive-expression	182
240	return		1	additive-expression	182
240	short		1	additive-expression	182
240	signed		1	additive-expression	182
240	sizeof		1	additive-expression	182
240	static		1	additive-expression	182
240	string-constant		1	additive-expression	182
240	switch		1	additive-expression	182
240	typedef		1	additive-expression	182
240	unsigned		1	additive-expression	182
240	void		1	additive-expression	182
240	volatile		1	additive-expression	182
240	while		1	additive-expression	182
240	{		1	additive-expression	182
240	|		1	additive-expression	182
240	|=		1	additive-expression	182
240	||		1	additive-expression	182
240	}		1	additive-expression	182
240	~		1	additive-expression	182


368	!		1	iteration-statement	131
368	%=		1	iteration-statement	131
368	&		1	iteration-statement	131
368	&=		1	iteration-statement	131
368	(		1	iteration-statement	131
368	)		1	iteration-statement	131
368	*		1	iteration-statement	131
368	*=		1	iteration-statement	131
368	+		1	iteration-statement	131
368	++		1	iteration-statement	131
368	+=		1	iteration-statement	131
368	,		1	iteration-statement	131
368	-		1	iteration-statement	131
368	--		1	iteration-statement	131
368	-=		1	iteration-statement	131
368	/=		1	iteration-statement	131
368	;		1	iteration-statement	131
368	<<=		1	iteration-statement	131
368	=		1	iteration-statement	131
368	>>=		1	iteration-statement	131
368	^=		1	iteration-statement	131
368	_KULV_END_		1	iteration-statement	131
368	auto		1	iteration-statement	131
368	break		1	iteration-statement	131
368	case		1	iteration-statement	131
368	char		1	iteration-statement	131
368	character-constant		1	iteration-statement	131
368	const		1	iteration-statement	131
368	continue		1	iteration-statement	131
368	default		1	iteration-statement	131
368	do		1	iteration-statement	131
368	double		1	iteration-statement	131
368	else		1	iteration-statement	131
368	enumeration-constant		1	iteration-statement	131
368	extern		1	iteration-statement	131
368	float		1	iteration-statement	131
368	floating-constant		1	iteration-statement	131
368	for		1	iteration-statement	131
368	goto		1	iteration-statement	131
368	identifier		1	iteration-statement	131
368	if		1	iteration-statement	131
368	int		1	iteration-statement	131
368	integer-constant		1	iteration-statement	131
368	long		1	iteration-statement	131
368	register		1	iteration-statement	131
368	return		1	iteration-statement	131
368	short		1	iteration-statement	131
368	signed		1	iteration-statement	131
368	sizeof		1	iteration-statement	131
368	static		1	iteration-statement	131
368	string-constant		1	iteration-statement	131
368	switch		1	iteration-statement	131
368	typedef		1	iteration-statement	131
368	unsigned		1	iteration-statement	131
368	void		1	iteration-statement	131
368	volatile		1	iteration-statement	131
368	while		1	iteration-statement	131
368	{		1	iteration-statement	131
368	|=		1	iteration-statement	131
368	}		1	iteration-statement	131
368	~		1	iteration-statement	131


89	!		1	constant	218
89	!=		1	constant	218
89	%		1	constant	218
89	%=		1	constant	218
89	&		1	constant	218
89	&&		1	constant	218
89	&=		1	constant	218
89	(		1	constant	218
89	)		1	constant	218
89	*		1	constant	218
89	*=		1	constant	218
89	+		1	constant	218
89	++		1	constant	218
89	+=		1	constant	218
89	,		1	constant	218
89	-		1	constant	218
89	--		1	constant	218
89	-=		1	constant	218
89	->		1	constant	218
89	.		1	constant	218
89	/		1	constant	218
89	/=		1	constant	218
89	:		1	constant	218
89	;		1	constant	218
89	<		1	constant	218
89	<<		1	constant	218
89	<<=		1	constant	218
89	<=		1	constant	218
89	=		1	constant	218
89	==		1	constant	218
89	>		1	constant	218
89	>=		1	constant	218
89	>>		1	constant	218
89	>>=		1	constant	218
89	?		1	constant	218
89	[		1	constant	218
89	]		1	constant	218
89	^		1	constant	218
89	^=		1	constant	218
89	_KULV_END_		1	constant	218
89	auto		1	constant	218
89	break		1	constant	218
89	case		1	constant	218
89	char		1	constant	218
89	character-constant		1	constant	218
89	const		1	constant	218
89	continue		1	constant	218
89	default		1	constant	218
89	do		1	constant	218
89	double		1	constant	218
89	else		1	constant	218
89	enum		1	constant	218
89	enumeration-constant		1	constant	218
89	extern		1	constant	218
89	float		1	constant	218
89	floating-constant		1	constant	218
89	for		1	constant	218
89	goto		1	constant	218
89	identifier		1	constant	218
89	if		1	constant	218
89	int		1	constant	218
89	integer-constant		1	constant	218
89	long		1	constant	218
89	register		1	constant	218
89	return		1	constant	218
89	short		1	constant	218
89	signed		1	constant	218
89	sizeof		1	constant	218
89	static		1	constant	218
89	string-constant		1	constant	218
89	switch		1	constant	218
89	typedef		1	constant	218
89	unsigned		1	constant	218
89	void		1	constant	218
89	volatile		1	constant	218
89	while		1	constant	218
89	{		1	constant	218
89	|		1	constant	218
89	|=		1	constant	218
89	||		1	constant	218
89	}		1	constant	218
89	~		1	constant	218


217	!		1	direct-declarator	71
217	%=		1	direct-declarator	71
217	&		1	direct-declarator	71
217	&=		1	direct-declarator	71
217	(		1	direct-declarator	71
217	)		1	direct-declarator	71
217	*		1	direct-declarator	71
217	*=		1	direct-declarator	71
217	+		1	direct-declarator	71
217	++		1	direct-declarator	71
217	+=		1	direct-declarator	71
217	,		1	direct-declarator	71
217	-		1	direct-declarator	71
217	--		1	direct-declarator	71
217	-=		1	direct-declarator	71
217	/=		1	direct-declarator	71
217	:		1	direct-declarator	71
217	;		1	direct-declarator	71
217	<<=		1	direct-declarator	71
217	=		1	direct-declarator	71
217	>>=		1	direct-declarator	71
217	[		1	direct-declarator	71
217	^=		1	direct-declarator	71
217	_KULV_END_		1	direct-declarator	71
217	auto		1	direct-declarator	71
217	break		1	direct-declarator	71
217	case		1	direct-declarator	71
217	char		1	direct-declarator	71
217	character-constant		1	direct-declarator	71
217	const		1	direct-declarator	71
217	continue		1	direct-declarator	71
217	default		1	direct-declarator	71
217	do		1	direct-declarator	71
217	double		1	direct-declarator	71
217	else		1	direct-declarator	71
217	enum		1	direct-declarator	71
217	enumeration-constant		1	direct-declarator	71
217	extern		1	direct-declarator	71
217	float		1	direct-declarator	71
217	floating-constant		1	direct-declarator	71
217	for		1	direct-declarator	71
217	goto		1	direct-declarator	71
217	identifier		1	direct-declarator	71
217	if		1	direct-declarator	71
217	int		1	direct-declarator	71
217	integer-constant		1	direct-declarator	71
217	long		1	direct-declarator	71
217	register		1	direct-declarator	71
217	return		1	direct-declarator	71
217	short		1	direct-declarator	71
217	signed		1	direct-declarator	71
217	sizeof		1	direct-declarator	71
217	static		1	direct-declarator	71
217	string-constant		1	direct-declarator	71
217	switch		1	direct-declarator	71
217	typedef		1	direct-declarator	71
217	unsigned		1	direct-declarator	71
217	void		1	direct-declarator	71
217	volatile		1	direct-declarator	71
217	while		1	direct-declarator	71
217	{		1	direct-declarator	71
217	|=		1	direct-declarator	71
217	}		1	direct-declarator	71
217	~		1	direct-declarator	71


345	!		1	iteration-statement	127
345	%=		1	iteration-statement	127
345	&		1	iteration-statement	127
345	&=		1	iteration-statement	127
345	(		1	iteration-statement	127
345	)		1	iteration-statement	127
345	*		1	iteration-statement	127
345	*=		1	iteration-statement	127
345	+		1	iteration-statement	127
345	++		1	iteration-statement	127
345	+=		1	iteration-statement	127
345	,		1	iteration-statement	127
345	-		1	iteration-statement	127
345	--		1	iteration-statement	127
345	-=		1	iteration-statement	127
345	/=		1	iteration-statement	127
345	;		1	iteration-statement	127
345	<<=		1	iteration-statement	127
345	=		1	iteration-statement	127
345	>>=		1	iteration-statement	127
345	^=		1	iteration-statement	127
345	_KULV_END_		1	iteration-statement	127
345	auto		1	iteration-statement	127
345	break		1	iteration-statement	127
345	case		1	iteration-statement	127
345	char		1	iteration-statement	127
345	character-constant		1	iteration-statement	127
345	const		1	iteration-statement	127
345	continue		1	iteration-statement	127
345	default		1	iteration-statement	127
345	do		1	iteration-statement	127
345	double		1	iteration-statement	127
345	else		1	iteration-statement	127
345	enumeration-constant		1	iteration-statement	127
345	extern		1	iteration-statement	127
345	float		1	iteration-statement	127
345	floating-constant		1	iteration-statement	127
345	for		1	iteration-statement	127
345	goto		1	iteration-statement	127
345	identifier		1	iteration-statement	127
345	if		1	iteration-statement	127
345	int		1	iteration-statement	127
345	integer-constant		1	iteration-statement	127
345	long		1	iteration-statement	127
345	register		1	iteration-statement	127
345	return		1	iteration-statement	127
345	short		1	iteration-statement	127
345	signed		1	iteration-statement	127
345	sizeof		1	iteration-statement	127
345	static		1	iteration-statement	127
345	string-constant		1	iteration-statement	127
345	switch		1	iteration-statement	127
345	typedef		1	iteration-statement	127
345	unsigned		1	iteration-statement	127
345	void		1	iteration-statement	127
345	volatile		1	iteration-statement	127
345	while		1	iteration-statement	127
345	{		1	iteration-statement	127
345	|=		1	iteration-statement	127
345	}		1	iteration-statement	127
345	~		1	iteration-statement	127


34	(		1	type-qualifier-list	76
34	)		1	type-qualifier-list	76
34	*		1	type-qualifier-list	76
34	,		1	type-qualifier-list	76
34	[		1	type-qualifier-list	76
34	const		1	type-qualifier-list	76
34	identifier		1	type-qualifier-list	76
34	volatile		1	type-qualifier-list	76


162	!		0	66
162	&		0	67
162	(		0	68
162	*		0	69
162	+		0	70
162	++		0	71
162	-		0	72
162	--		0	73
162	character-constant		0	81
162	enumeration-constant		0	89
162	floating-constant		0	94
162	identifier		0	133
162	integer-constant		0	100
162	sizeof		0	113
162	string-constant		0	116
162	~		0	122


290	char		0	4
290	const		0	5
290	double		0	10
290	float		0	13
290	int		0	16
290	long		0	17
290	short		0	20
290	signed		0	21
290	unsigned		0	28
290	void		0	29
290	volatile		0	30
290	}		0	324


11	(		1	storage-class-specifier	22
11	)		1	storage-class-specifier	22
11	*		1	storage-class-specifier	22
11	,		1	storage-class-specifier	22
11	;		1	storage-class-specifier	22
11	[		1	storage-class-specifier	22
11	auto		1	storage-class-specifier	22
11	char		1	storage-class-specifier	22
11	const		1	storage-class-specifier	22
11	double		1	storage-class-specifier	22
11	extern		1	storage-class-specifier	22
11	float		1	storage-class-specifier	22
11	identifier		1	storage-class-specifier	22
11	int		1	storage-class-specifier	22
11	long		1	storage-class-specifier	22
11	register		1	storage-class-specifier	22
11	short		1	storage-class-specifier	22
11	signed		1	storage-class-specifier	22
11	static		1	storage-class-specifier	22
11	typedef		1	storage-class-specifier	22
11	unsigned		1	storage-class-specifier	22
11	void		1	storage-class-specifier	22
11	volatile		1	storage-class-specifier	22


139	(		1	function-definition	8
139	*		1	function-definition	8
139	;		1	function-definition	8
139	_KULV_END_		1	function-definition	8
139	auto		1	function-definition	8
139	char		1	function-definition	8
139	const		1	function-definition	8
139	double		1	function-definition	8
139	extern		1	function-definition	8
139	float		1	function-definition	8
139	identifier		1	function-definition	8
139	int		1	function-definition	8
139	long		1	function-definition	8
139	register		1	function-definition	8
139	short		1	function-definition	8
139	signed		1	function-definition	8
139	static		1	function-definition	8
139	typedef		1	function-definition	8
139	unsigned		1	function-definition	8
139	void		1	function-definition	8
139	volatile		1	function-definition	8
139	{		1	function-definition	8


267	,		0	165
267	]		0	313


20	(		1	type-specifier	26
20	)		1	type-specifier	26
20	*		1	type-specifier	26
20	,		1	type-specifier	26
20	:		1	type-specifier	26
20	;		1	type-specifier	26
20	[		1	type-specifier	26
20	auto		1	type-specifier	26
20	char		1	type-specifier	26
20	const		1	type-specifier	26
20	double		1	type-specifier	26
20	extern		1	type-specifier	26
20	float		1	type-specifier	26
20	identifier		1	type-specifier	26
20	int		1	type-specifier	26
20	long		1	type-specifier	26
20	register		1	type-specifier	26
20	short		1	type-specifier	26
20	signed		1	type-specifier	26
20	static		1	type-specifier	26
20	typedef		1	type-specifier	26
20	unsigned		1	type-specifier	26
20	void		1	type-specifier	26
20	volatile		1	type-specifier	26


148	(		1	specifier-qualifier-list	47
148	)		1	specifier-qualifier-list	47
148	*		1	specifier-qualifier-list	47
148	:		1	specifier-qualifier-list	47
148	[		1	specifier-qualifier-list	47
148	identifier		1	specifier-qualifier-list	47
148	char		0	4
148	const		0	5
148	double		0	10
148	float		0	13
148	int		0	16
148	long		0	17
148	short		0	20
148	signed		0	21
148	unsigned		0	28
148	void		0	29
148	volatile		0	30


276	)		0	315
276	,		0	165


125	)		0	217
125	,		0	218


253	!		1	labeled-statement	113
253	%=		1	labeled-statement	113
253	&		1	labeled-statement	113
253	&=		1	labeled-statement	113
253	(		1	labeled-statement	113
253	)		1	labeled-statement	113
253	*		1	labeled-statement	113
253	*=		1	labeled-statement	113
253	+		1	labeled-statement	113
253	++		1	labeled-statement	113
253	+=		1	labeled-statement	113
253	,		1	labeled-statement	113
253	-		1	labeled-statement	113
253	--		1	labeled-statement	113
253	-=		1	labeled-statement	113
253	/=		1	labeled-statement	113
253	;		1	labeled-statement	113
253	<<=		1	labeled-statement	113
253	=		1	labeled-statement	113
253	>>=		1	labeled-statement	113
253	^=		1	labeled-statement	113
253	_KULV_END_		1	labeled-statement	113
253	auto		1	labeled-statement	113
253	break		1	labeled-statement	113
253	case		1	labeled-statement	113
253	char		1	labeled-statement	113
253	character-constant		1	labeled-statement	113
253	const		1	labeled-statement	113
253	continue		1	labeled-statement	113
253	default		1	labeled-statement	113
253	do		1	labeled-statement	113
253	double		1	labeled-statement	113
253	else		1	labeled-statement	113
253	enumeration-constant		1	labeled-statement	113
253	extern		1	labeled-statement	113
253	float		1	labeled-statement	113
253	floating-constant		1	labeled-statement	113
253	for		1	labeled-statement	113
253	goto		1	labeled-statement	113
253	identifier		1	labeled-statement	113
253	if		1	labeled-statement	113
253	int		1	labeled-statement	113
253	integer-constant		1	labeled-statement	113
253	long		1	labeled-statement	113
253	register		1	labeled-statement	113
253	return		1	labeled-statement	113
253	short		1	labeled-statement	113
253	signed		1	labeled-statement	113
253	sizeof		1	labeled-statement	113
253	static		1	labeled-statement	113
253	string-constant		1	labeled-statement	113
253	switch		1	labeled-statement	113
253	typedef		1	labeled-statement	113
253	unsigned		1	labeled-statement	113
253	void		1	labeled-statement	113
253	volatile		1	labeled-statement	113
253	while		1	labeled-statement	113
253	{		1	labeled-statement	113
253	|=		1	labeled-statement	113
253	}		1	labeled-statement	113
253	~		1	labeled-statement	113


70	!		1	unary-operator	198
70	&		1	unary-operator	198
70	(		1	unary-operator	198
70	*		1	unary-operator	198
70	+		1	unary-operator	198
70	++		1	unary-operator	198
70	-		1	unary-operator	198
70	--		1	unary-operator	198
70	character-constant		1	unary-operator	198
70	enumeration-constant		1	unary-operator	198
70	floating-constant		1	unary-operator	198
70	identifier		1	unary-operator	198
70	integer-constant		1	unary-operator	198
70	sizeof		1	unary-operator	198
70	string-constant		1	unary-operator	198
70	~		1	unary-operator	198


198	!		1	assignment-operator	154
198	&		1	assignment-operator	154
198	(		1	assignment-operator	154
198	*		1	assignment-operator	154
198	+		1	assignment-operator	154
198	++		1	assignment-operator	154
198	-		1	assignment-operator	154
198	--		1	assignment-operator	154
198	character-constant		1	assignment-operator	154
198	enumeration-constant		1	assignment-operator	154
198	floating-constant		1	assignment-operator	154
198	identifier		1	assignment-operator	154
198	integer-constant		1	assignment-operator	154
198	sizeof		1	assignment-operator	154
198	string-constant		1	assignment-operator	154
198	~		1	assignment-operator	154


326	!		0	66
326	&		0	67
326	(		0	68
326	*		0	69
326	+		0	70
326	++		0	71
326	-		0	72
326	--		0	73
326	character-constant		0	81
326	enumeration-constant		0	89
326	floating-constant		0	94
326	identifier		0	133
326	integer-constant		0	100
326	sizeof		0	113
326	string-constant		0	116
326	~		0	122


47	(		1	declaration-specifiers	14
47	)		1	declaration-specifiers	14
47	*		1	declaration-specifiers	14
47	,		1	declaration-specifiers	14
47	;		1	declaration-specifiers	14
47	[		1	declaration-specifiers	14
47	identifier		1	declaration-specifiers	14


175	!		0	66
175	&		0	67
175	(		0	68
175	*		0	69
175	+		0	70
175	++		0	71
175	-		0	72
175	--		0	73
175	character-constant		0	81
175	enumeration-constant		0	89
175	floating-constant		0	94
175	identifier		0	133
175	integer-constant		0	100
175	sizeof		0	113
175	string-constant		0	116
175	~		0	122


303	!		1	cast-expression	189
303	!=		1	cast-expression	189
303	%		1	cast-expression	189
303	%=		1	cast-expression	189
303	&		1	cast-expression	189
303	&&		1	cast-expression	189
303	&=		1	cast-expression	189
303	(		1	cast-expression	189
303	)		1	cast-expression	189
303	*		1	cast-expression	189
303	*=		1	cast-expression	189
303	+		1	cast-expression	189
303	++		1	cast-expression	189
303	+=		1	cast-expression	189
303	,		1	cast-expression	189
303	-		1	cast-expression	189
303	--		1	cast-expression	189
303	-=		1	cast-expression	189
303	->		1	cast-expression	189
303	.		1	cast-expression	189
303	/		1	cast-expression	189
303	/=		1	cast-expression	189
303	:		1	cast-expression	189
303	;		1	cast-expression	189
303	<		1	cast-expression	189
303	<<		1	cast-expression	189
303	<<=		1	cast-expression	189
303	<=		1	cast-expression	189
303	=		1	cast-expression	189
303	==		1	cast-expression	189
303	>		1	cast-expression	189
303	>=		1	cast-expression	189
303	>>		1	cast-expression	189
303	>>=		1	cast-expression	189
303	?		1	cast-expression	189
303	[		1	cast-expression	189
303	]		1	cast-expression	189
303	^		1	cast-expression	189
303	^=		1	cast-expression	189
303	_KULV_END_		1	cast-expression	189
303	auto		1	cast-expression	189
303	break		1	cast-expression	189
303	case		1	cast-expression	189
303	char		1	cast-expression	189
303	character-constant		1	cast-expression	189
303	const		1	cast-expression	189
303	continue		1	cast-expression	189
303	default		1	cast-expression	189
303	do		1	cast-expression	189
303	double		1	cast-expression	189
303	else		1	cast-expression	189
303	enum		1	cast-expression	189
303	enumeration-constant		1	cast-expression	189
303	extern		1	cast-expression	189
303	float		1	cast-expression	189
303	floating-constant		1	cast-expression	189
303	for		1	cast-expression	189
303	goto		1	cast-expression	189
303	identifier		1	cast-expression	189
303	if		1	cast-expression	189
303	int		1	cast-expression	189
303	integer-constant		1	cast-expression	189
303	long		1	cast-expression	189
303	register		1	cast-expression	189
303	return		1	cast-expression	189
303	short		1	cast-expression	189
303	signed		1	cast-expression	189
303	sizeof		1	cast-expression	189
303	static		1	cast-expression	189
303	string-constant		1	cast-expression	189
303	switch		1	cast-expression	189
303	typedef		1	cast-expression	189
303	unsigned		1	cast-expression	189
303	void		1	cast-expression	189
303	volatile		1	cast-expression	189
303	while		1	cast-expression	189
303	{		1	cast-expression	189
303	|		1	cast-expression	189
303	|=		1	cast-expression	189
303	||		1	cast-expression	189
303	}		1	cast-expression	189
303	~		1	cast-expression	189


56	(		1	pointer	75
56	)		1	pointer	75
56	*		1	pointer	75
56	,		1	pointer	75
56	[		1	pointer	75
56	const		1	pointer	75
56	identifier		1	pointer	75
56	volatile		1	pointer	75


184	!		0	66
184	&		0	67
184	(		0	68
184	*		0	69
184	+		0	70
184	++		0	71
184	-		0	72
184	--		0	73
184	character-constant		0	81
184	enumeration-constant		0	89
184	floating-constant		0	94
184	identifier		0	133
184	integer-constant		0	100
184	sizeof		0	113
184	string-constant		0	116
184	~		0	122


312	!		1	postfix-expression	205
312	!=		1	postfix-expression	205
312	%		1	postfix-expression	205
312	%=		1	postfix-expression	205
312	&		1	postfix-expression	205
312	&&		1	postfix-expression	205
312	&=		1	postfix-expression	205
312	(		1	postfix-expression	205
312	)		1	postfix-expression	205
312	*		1	postfix-expression	205
312	*=		1	postfix-expression	205
312	+		1	postfix-expression	205
312	++		1	postfix-expression	205
312	+=		1	postfix-expression	205
312	,		1	postfix-expression	205
312	-		1	postfix-expression	205
312	--		1	postfix-expression	205
312	-=		1	postfix-expression	205
312	->		1	postfix-expression	205
312	.		1	postfix-expression	205
312	/		1	postfix-expression	205
312	/=		1	postfix-expression	205
312	:		1	postfix-expression	205
312	;		1	postfix-expression	205
312	<		1	postfix-expression	205
312	<<		1	postfix-expression	205
312	<<=		1	postfix-expression	205
312	<=		1	postfix-expression	205
312	=		1	postfix-expression	205
312	==		1	postfix-expression	205
312	>		1	postfix-expression	205
312	>=		1	postfix-expression	205
312	>>		1	postfix-expression	205
312	>>=		1	postfix-expression	205
312	?		1	postfix-expression	205
312	[		1	postfix-expression	205
312	]		1	postfix-expression	205
312	^		1	postfix-expression	205
312	^=		1	postfix-expression	205
312	_KULV_END_		1	postfix-expression	205
312	auto		1	postfix-expression	205
312	break		1	postfix-expression	205
312	case		1	postfix-expression	205
312	char		1	postfix-expression	205
312	character-constant		1	postfix-expression	205
312	const		1	postfix-expression	205
312	continue		1	postfix-expression	205
312	default		1	postfix-expression	205
312	do		1	postfix-expression	205
312	double		1	postfix-expression	205
312	else		1	postfix-expression	205
312	enum		1	postfix-expression	205
312	enumeration-constant		1	postfix-expression	205
312	extern		1	postfix-expression	205
312	float		1	postfix-expression	205
312	floating-constant		1	postfix-expression	205
312	for		1	postfix-expression	205
312	goto		1	postfix-expression	205
312	identifier		1	postfix-expression	205
312	if		1	postfix-expression	205
312	int		1	postfix-expression	205
312	integer-constant		1	postfix-expression	205
312	long		1	postfix-expression	205
312	register		1	postfix-expression	205
312	return		1	postfix-expression	205
312	short		1	postfix-expression	205
312	signed		1	postfix-expression	205
312	sizeof		1	postfix-expression	205
312	static		1	postfix-expression	205
312	string-constant		1	postfix-expression	205
312	switch		1	postfix-expression	205
312	typedef		1	postfix-expression	205
312	unsigned		1	postfix-expression	205
312	void		1	postfix-expression	205
312	volatile		1	postfix-expression	205
312	while		1	postfix-expression	205
312	{		1	postfix-expression	205
312	|		1	postfix-expression	205
312	|=		1	postfix-expression	205
312	||		1	postfix-expression	205
312	}		1	postfix-expression	205
312	~		1	postfix-expression	205


1	(		0	1
1	*		0	2
1	identifier		0	15


129	)		1	parameter-type-list	78
129	,		0	220


257	,		0	165
257	:		0	310


106	!		1	additive-expression	181
106	!=		1	additive-expression	181
106	%		0	175
106	%=		1	additive-expression	181
106	&		1	additive-expression	181
106	&&		1	additive-expression	181
106	&=		1	additive-expression	181
106	(		1	additive-expression	181
106	)		1	additive-expression	181
106	*		0	176
106	*=		1	additive-expression	181
106	+		1	additive-expression	181
106	++		1	additive-expression	181
106	+=		1	additive-expression	181
106	,		1	additive-expression	181
106	-		1	additive-expression	181
106	--		1	additive-expression	181
106	-=		1	additive-expression	181
106	->		1	additive-expression	181
106	.		1	additive-expression	181
106	/		0	177
106	/=		1	additive-expression	181
106	:		1	additive-expression	181
106	;		1	additive-expression	181
106	<		1	additive-expression	181
106	<<		1	additive-expression	181
106	<<=		1	additive-expression	181
106	<=		1	additive-expression	181
106	=		1	additive-expression	181
106	==		1	additive-expression	181
106	>		1	additive-expression	181
106	>=		1	additive-expression	181
106	>>		1	additive-expression	181
106	>>=		1	additive-expression	181
106	?		1	additive-expression	181
106	[		1	additive-expression	181
106	]		1	additive-expression	181
106	^		1	additive-expression	181
106	^=		1	additive-expression	181
106	_KULV_END_		1	additive-expression	181
106	auto		1	additive-expression	181
106	break		1	additive-expression	181
106	case		1	additive-expression	181
106	char		1	additive-expression	181
106	character-constant		1	additive-expression	181
106	const		1	additive-expression	181
106	continue		1	additive-expression	181
106	default		1	additive-expression	181
106	do		1	additive-expression	181
106	double		1	additive-expression	181
106	else		1	additive-expression	181
106	enum		1	additive-expression	181
106	enumeration-constant		1	additive-expression	181
106	extern		1	additive-expression	181
106	float		1	additive-expression	181
106	floating-constant		1	additive-expression	181
106	for		1	additive-expression	181
106	goto		1	additive-expression	181
106	identifier		1	additive-expression	181
106	if		1	additive-expression	181
106	int		1	additive-expression	181
106	integer-constant		1	additive-expression	181
106	long		1	additive-expression	181
106	register		1	additive-expression	181
106	return		1	additive-expression	181
106	short		1	additive-expression	181
106	signed		1	additive-expression	181
106	sizeof		1	additive-expression	181
106	static		1	additive-expression	181
106	string-constant		1	additive-expression	181
106	switch		1	additive-expression	181
106	typedef		1	additive-expression	181
106	unsigned		1	additive-expression	181
106	void		1	additive-expression	181
106	volatile		1	additive-expression	181
106	while		1	additive-expression	181
106	{		1	additive-expression	181
106	|		1	additive-expression	181
106	|=		1	additive-expression	181
106	||		1	additive-expression	181
106	}		1	additive-expression	181
106	~		1	additive-expression	181


234	(		0	234
234	)		0	279
234	*		0	2
234	[		0	212
234	auto		0	3
234	char		0	4
234	const		0	5
234	double		0	10
234	extern		0	11
234	float		0	13
234	int		0	16
234	long		0	17
234	register		0	19
234	short		0	20
234	signed		0	21
234	static		0	22
234	typedef		0	27
234	unsigned		0	28
234	void		0	29
234	volatile		0	30


362	!		1	iteration-statement	128
362	%=		1	iteration-statement	128
362	&		1	iteration-statement	128
362	&=		1	iteration-statement	128
362	(		1	iteration-statement	128
362	)		1	iteration-statement	128
362	*		1	iteration-statement	128
362	*=		1	iteration-statement	128
362	+		1	iteration-statement	128
362	++		1	iteration-statement	128
362	+=		1	iteration-statement	128
362	,		1	iteration-statement	128
362	-		1	iteration-statement	128
362	--		1	iteration-statement	128
362	-=		1	iteration-statement	128
362	/=		1	iteration-statement	128
362	;		1	iteration-statement	128
362	<<=		1	iteration-statement	128
362	=		1	iteration-statement	128
362	>>=		1	iteration-statement	128
362	^=		1	iteration-statement	128
362	_KULV_END_		1	iteration-statement	128
362	auto		1	iteration-statement	128
362	break		1	iteration-statement	128
362	case		1	iteration-statement	128
362	char		1	iteration-statement	128
362	character-constant		1	iteration-statement	128
362	const		1	iteration-statement	128
362	continue		1	iteration-statement	128
362	default		1	iteration-statement	128
362	do		1	iteration-statement	128
362	double		1	iteration-statement	128
362	else		1	iteration-statement	128
362	enumeration-constant		1	iteration-statement	128
362	extern		1	iteration-statement	128
362	float		1	iteration-statement	128
362	floating-constant		1	iteration-statement	128
362	for		1	iteration-statement	128
362	goto		1	iteration-statement	128
362	identifier		1	iteration-statement	128
362	if		1	iteration-statement	128
362	int		1	iteration-statement	128
362	integer-constant		1	iteration-statement	128
362	long		1	iteration-statement	128
362	register		1	iteration-statement	128
362	return		1	iteration-statement	128
362	short		1	iteration-statement	128
362	signed		1	iteration-statement	128
362	sizeof		1	iteration-statement	128
362	static		1	iteration-statement	128
362	string-constant		1	iteration-statement	128
362	switch		1	iteration-statement	128
362	typedef		1	iteration-statement	128
362	unsigned		1	iteration-statement	128
362	void		1	iteration-statement	128
362	volatile		1	iteration-statement	128
362	while		1	iteration-statement	128
362	{		1	iteration-statement	128
362	|=		1	iteration-statement	128
362	}		1	iteration-statement	128
362	~		1	iteration-statement	128


115	!		0	66
115	&		0	67
115	(		0	68
115	*		0	69
115	+		0	70
115	++		0	71
115	-		0	72
115	--		0	73
115	;		0	74
115	break		0	78
115	case		0	79
115	character-constant		0	81
115	continue		0	85
115	default		0	87
115	do		0	88
115	enumeration-constant		0	89
115	floating-constant		0	94
115	for		0	95
115	goto		0	96
115	identifier		0	97
115	if		0	98
115	integer-constant		0	100
115	return		0	110
115	sizeof		0	113
115	string-constant		0	116
115	switch		0	117
115	while		0	120
115	{		0	43
115	}		0	195
115	~		0	122


243	!		1	compound-statement	121
243	%=		1	compound-statement	121
243	&		1	compound-statement	121
243	&=		1	compound-statement	121
243	(		1	compound-statement	121
243	)		1	compound-statement	121
243	*		1	compound-statement	121
243	*=		1	compound-statement	121
243	+		1	compound-statement	121
243	++		1	compound-statement	121
243	+=		1	compound-statement	121
243	,		1	compound-statement	121
243	-		1	compound-statement	121
243	--		1	compound-statement	121
243	-=		1	compound-statement	121
243	/=		1	compound-statement	121
243	;		1	compound-statement	121
243	<<=		1	compound-statement	121
243	=		1	compound-statement	121
243	>>=		1	compound-statement	121
243	^=		1	compound-statement	121
243	_KULV_END_		1	compound-statement	121
243	auto		1	compound-statement	121
243	break		1	compound-statement	121
243	case		1	compound-statement	121
243	char		1	compound-statement	121
243	character-constant		1	compound-statement	121
243	const		1	compound-statement	121
243	continue		1	compound-statement	121
243	default		1	compound-statement	121
243	do		1	compound-statement	121
243	double		1	compound-statement	121
243	else		1	compound-statement	121
243	enumeration-constant		1	compound-statement	121
243	extern		1	compound-statement	121
243	float		1	compound-statement	121
243	floating-constant		1	compound-statement	121
243	for		1	compound-statement	121
243	goto		1	compound-statement	121
243	identifier		1	compound-statement	121
243	if		1	compound-statement	121
243	int		1	compound-statement	121
243	integer-constant		1	compound-statement	121
243	long		1	compound-statement	121
243	register		1	compound-statement	121
243	return		1	compound-statement	121
243	short		1	compound-statement	121
243	signed		1	compound-statement	121
243	sizeof		1	compound-statement	121
243	static		1	compound-statement	121
243	string-constant		1	compound-statement	121
243	switch		1	compound-statement	121
243	typedef		1	compound-statement	121
243	unsigned		1	compound-statement	121
243	void		1	compound-statement	121
243	volatile		1	compound-statement	121
243	while		1	compound-statement	121
243	{		1	compound-statement	121
243	|=		1	compound-statement	121
243	}		1	compound-statement	121
243	~		1	compound-statement	121


371	!		0	66
371	&		0	67
371	(		0	68
371	*		0	69
371	+		0	70
371	++		0	71
371	-		0	72
371	--		0	73
371	;		0	74
371	break		0	78
371	case		0	79
371	character-constant		0	81
371	continue		0	85
371	default		0	87
371	do		0	88
371	enumeration-constant		0	89
371	floating-constant		0	94
371	for		0	95
371	goto		0	96
371	identifier		0	97
371	if		0	98
371	integer-constant		0	100
371	return		0	110
371	sizeof		0	113
371	string-constant		0	116
371	switch		0	117
371	while		0	120
371	{		0	43
371	~		0	122


92	,		0	165
92	;		0	166


220	...		0	288
220	auto		0	3
220	char		0	4
220	const		0	5
220	double		0	10
220	extern		0	11
220	float		0	13
220	int		0	16
220	long		0	17
220	register		0	19
220	short		0	20
220	signed		0	21
220	static		0	22
220	typedef		0	27
220	unsigned		0	28
220	void		0	29
220	volatile		0	30


348	,		1	struct-declarator	55
348	;		1	struct-declarator	55
348	char		1	struct-declarator	55
348	const		1	struct-declarator	55
348	double		1	struct-declarator	55
348	enum		1	struct-declarator	55
348	float		1	struct-declarator	55
348	int		1	struct-declarator	55
348	long		1	struct-declarator	55
348	short		1	struct-declarator	55
348	signed		1	struct-declarator	55
348	unsigned		1	struct-declarator	55
348	void		1	struct-declarator	55
348	volatile		1	struct-declarator	55
348	}		1	struct-declarator	55


37	,		0	62
37	;		0	61


165	!		0	66
165	&		0	67
165	(		0	68
165	*		0	69
165	+		0	70
165	++		0	71
165	-		0	72
165	--		0	73
165	character-constant		0	81
165	enumeration-constant		0	89
165	floating-constant		0	94
165	identifier		0	133
165	integer-constant		0	100
165	sizeof		0	113
165	string-constant		0	116
165	~		0	122


293	,		0	328
293	;		0	327


14	(		1	external-declaration	3
14	*		1	external-declaration	3
14	_KULV_END_		1	external-declaration	3
14	auto		1	external-declaration	3
14	char		1	external-declaration	3
14	const		1	external-declaration	3
14	double		1	external-declaration	3
14	extern		1	external-declaration	3
14	float		1	external-declaration	3
14	identifier		1	external-declaration	3
14	int		1	external-declaration	3
14	long		1	external-declaration	3
14	register		1	external-declaration	3
14	short		1	external-declaration	3
14	signed		1	external-declaration	3
14	static		1	external-declaration	3
14	typedef		1	external-declaration	3
14	unsigned		1	external-declaration	3
14	void		1	external-declaration	3
14	volatile		1	external-declaration	3


142	!		0	66
142	&		0	67
142	(		0	68
142	*		0	69
142	+		0	70
142	++		0	71
142	-		0	72
142	--		0	73
142	character-constant		0	81
142	enumeration-constant		0	89
142	floating-constant		0	94
142	identifier		0	133
142	integer-constant		0	100
142	sizeof		0	113
142	string-constant		0	116
142	{		0	142
142	~		0	122


270	!		1	relational-expression	175
270	!=		1	relational-expression	175
270	%		1	relational-expression	175
270	%=		1	relational-expression	175
270	&		1	relational-expression	175
270	&&		1	relational-expression	175
270	&=		1	relational-expression	175
270	(		1	relational-expression	175
270	)		1	relational-expression	175
270	*		1	relational-expression	175
270	*=		1	relational-expression	175
270	+		1	relational-expression	175
270	++		1	relational-expression	175
270	+=		1	relational-expression	175
270	,		1	relational-expression	175
270	-		1	relational-expression	175
270	--		1	relational-expression	175
270	-=		1	relational-expression	175
270	->		1	relational-expression	175
270	.		1	relational-expression	175
270	/		1	relational-expression	175
270	/=		1	relational-expression	175
270	:		1	relational-expression	175
270	;		1	relational-expression	175
270	<		1	relational-expression	175
270	<<		0	190
270	<<=		1	relational-expression	175
270	<=		1	relational-expression	175
270	=		1	relational-expression	175
270	==		1	relational-expression	175
270	>		1	relational-expression	175
270	>=		1	relational-expression	175
270	>>		0	191
270	>>=		1	relational-expression	175
270	?		1	relational-expression	175
270	[		1	relational-expression	175
270	]		1	relational-expression	175
270	^		1	relational-expression	175
270	^=		1	relational-expression	175
270	_KULV_END_		1	relational-expression	175
270	auto		1	relational-expression	175
270	break		1	relational-expression	175
270	case		1	relational-expression	175
270	char		1	relational-expression	175
270	character-constant		1	relational-expression	175
270	const		1	relational-expression	175
270	continue		1	relational-expression	175
270	default		1	relational-expression	175
270	do		1	relational-expression	175
270	double		1	relational-expression	175
270	else		1	relational-expression	175
270	enum		1	relational-expression	175
270	enumeration-constant		1	relational-expression	175
270	extern		1	relational-expression	175
270	float		1	relational-expression	175
270	floating-constant		1	relational-expression	175
270	for		1	relational-expression	175
270	goto		1	relational-expression	175
270	identifier		1	relational-expression	175
270	if		1	relational-expression	175
270	int		1	relational-expression	175
270	integer-constant		1	relational-expression	175
270	long		1	relational-expression	175
270	register		1	relational-expression	175
270	return		1	relational-expression	175
270	short		1	relational-expression	175
270	signed		1	relational-expression	175
270	sizeof		1	relational-expression	175
270	static		1	relational-expression	175
270	string-constant		1	relational-expression	175
270	switch		1	relational-expression	175
270	typedef		1	relational-expression	175
270	unsigned		1	relational-expression	175
270	void		1	relational-expression	175
270	volatile		1	relational-expression	175
270	while		1	relational-expression	175
270	{		1	relational-expression	175
270	|		1	relational-expression	175
270	|=		1	relational-expression	175
270	||		1	relational-expression	175
270	}		1	relational-expression	175
270	~		1	relational-expression	175


23	(		1	declaration-specifiers	13
23	)		1	declaration-specifiers	13
23	*		1	declaration-specifiers	13
23	,		1	declaration-specifiers	13
23	;		1	declaration-specifiers	13
23	[		1	declaration-specifiers	13
23	identifier		1	declaration-specifiers	13
23	auto		0	3
23	char		0	4
23	const		0	5
23	double		0	10
23	extern		0	11
23	float		0	13
23	int		0	16
23	long		0	17
23	register		0	19
23	short		0	20
23	signed		0	21
23	static		0	22
23	typedef		0	27
23	unsigned		0	28
23	void		0	29
23	volatile		0	30


151	!		1	unary-expression	192
151	!=		1	unary-expression	192
151	%		1	unary-expression	192
151	%=		1	unary-expression	192
151	&		1	unary-expression	192
151	&&		1	unary-expression	192
151	&=		1	unary-expression	192
151	(		1	unary-expression	192
151	)		1	unary-expression	192
151	*		1	unary-expression	192
151	*=		1	unary-expression	192
151	+		1	unary-expression	192
151	++		1	unary-expression	192
151	+=		1	unary-expression	192
151	,		1	unary-expression	192
151	-		1	unary-expression	192
151	--		1	unary-expression	192
151	-=		1	unary-expression	192
151	->		1	unary-expression	192
151	.		1	unary-expression	192
151	/		1	unary-expression	192
151	/=		1	unary-expression	192
151	:		1	unary-expression	192
151	;		1	unary-expression	192
151	<		1	unary-expression	192
151	<<		1	unary-expression	192
151	<<=		1	unary-expression	192
151	<=		1	unary-expression	192
151	=		1	unary-expression	192
151	==		1	unary-expression	192
151	>		1	unary-expression	192
151	>=		1	unary-expression	192
151	>>		1	unary-expression	192
151	>>=		1	unary-expression	192
151	?		1	unary-expression	192
151	[		1	unary-expression	192
151	]		1	unary-expression	192
151	^		1	unary-expression	192
151	^=		1	unary-expression	192
151	_KULV_END_		1	unary-expression	192
151	auto		1	unary-expression	192
151	break		1	unary-expression	192
151	case		1	unary-expression	192
151	char		1	unary-expression	192
151	character-constant		1	unary-expression	192
151	const		1	unary-expression	192
151	continue		1	unary-expression	192
151	default		1	unary-expression	192
151	do		1	unary-expression	192
151	double		1	unary-expression	192
151	else		1	unary-expression	192
151	enum		1	unary-expression	192
151	enumeration-constant		1	unary-expression	192
151	extern		1	unary-expression	192
151	float		1	unary-expression	192
151	floating-constant		1	unary-expression	192
151	for		1	unary-expression	192
151	goto		1	unary-expression	192
151	identifier		1	unary-expression	192
151	if		1	unary-expression	192
151	int		1	unary-expression	192
151	integer-constant		1	unary-expression	192
151	long		1	unary-expression	192
151	register		1	unary-expression	192
151	return		1	unary-expression	192
151	short		1	unary-expression	192
151	signed		1	unary-expression	192
151	sizeof		1	unary-expression	192
151	static		1	unary-expression	192
151	string-constant		1	unary-expression	192
151	switch		1	unary-expression	192
151	typedef		1	unary-expression	192
151	unsigned		1	unary-expression	192
151	void		1	unary-expression	192
151	volatile		1	unary-expression	192
151	while		1	unary-expression	192
151	{		1	unary-expression	192
151	|		1	unary-expression	192
151	|=		1	unary-expression	192
151	||		1	unary-expression	192
151	}		1	unary-expression	192
151	~		1	unary-expression	192


279	(		1	direct-abstract-declarator	102
279	)		1	direct-abstract-declarator	102
279	,		1	direct-abstract-declarator	102
279	[		1	direct-abstract-declarator	102


96	identifier		0	168


224	char		1	struct-declaration-list	40
224	const		1	struct-declaration-list	40
224	double		1	struct-declaration-list	40
224	float		1	struct-declaration-list	40
224	int		1	struct-declaration-list	40
224	long		1	struct-declaration-list	40
224	short		1	struct-declaration-list	40
224	signed		1	struct-declaration-list	40
224	unsigned		1	struct-declaration-list	40
224	void		1	struct-declaration-list	40
224	volatile		1	struct-declaration-list	40
224	}		1	struct-declaration-list	40


352	,		1	enumerator	62
352	identifier		1	enumerator	62
352	}		1	enumerator	62


73	!		0	66
73	&		0	67
73	(		0	149
73	*		0	69
73	+		0	70
73	++		0	71
73	-		0	72
73	--		0	73
73	character-constant		0	81
73	enumeration-constant		0	89
73	floating-constant		0	94
73	identifier		0	133
73	integer-constant		0	100
73	sizeof		0	113
73	string-constant		0	116
73	~		0	122


201	!		1	assignment-operator	151
201	&		1	assignment-operator	151
201	(		1	assignment-operator	151
201	*		1	assignment-operator	151
201	+		1	assignment-operator	151
201	++		1	assignment-operator	151
201	-		1	assignment-operator	151
201	--		1	assignment-operator	151
201	character-constant		1	assignment-operator	151
201	enumeration-constant		1	assignment-operator	151
201	floating-constant		1	assignment-operator	151
201	identifier		1	assignment-operator	151
201	integer-constant		1	assignment-operator	151
201	sizeof		1	assignment-operator	151
201	string-constant		1	assignment-operator	151
201	~		1	assignment-operator	151


329	,		0	331
329	}		0	350


82	!		1	statement	109
82	%=		1	statement	109
82	&		1	statement	109
82	&=		1	statement	109
82	(		1	statement	109
82	)		1	statement	109
82	*		1	statement	109
82	*=		1	statement	109
82	+		1	statement	109
82	++		1	statement	109
82	+=		1	statement	109
82	,		1	statement	109
82	-		1	statement	109
82	--		1	statement	109
82	-=		1	statement	109
82	/=		1	statement	109
82	;		1	statement	109
82	<<=		1	statement	109
82	=		1	statement	109
82	>>=		1	statement	109
82	^=		1	statement	109
82	_KULV_END_		1	statement	109
82	auto		1	statement	109
82	break		1	statement	109
82	case		1	statement	109
82	char		1	statement	109
82	character-constant		1	statement	109
82	const		1	statement	109
82	continue		1	statement	109
82	default		1	statement	109
82	do		1	statement	109
82	double		1	statement	109
82	else		1	statement	109
82	enumeration-constant		1	statement	109
82	extern		1	statement	109
82	float		1	statement	109
82	floating-constant		1	statement	109
82	for		1	statement	109
82	goto		1	statement	109
82	identifier		1	statement	109
82	if		1	statement	109
82	int		1	statement	109
82	integer-constant		1	statement	109
82	long		1	statement	109
82	register		1	statement	109
82	return		1	statement	109
82	short		1	statement	109
82	signed		1	statement	109
82	sizeof		1	statement	109
82	static		1	statement	109
82	string-constant		1	statement	109
82	switch		1	statement	109
82	typedef		1	statement	109
82	unsigned		1	statement	109
82	void		1	statement	109
82	volatile		1	statement	109
82	while		1	statement	109
82	{		1	statement	109
82	|=		1	statement	109
82	}		1	statement	109
82	~		1	statement	109


210	!		0	66
210	&		0	67
210	(		0	68
210	*		0	69
210	+		0	70
210	++		0	71
210	-		0	72
210	--		0	73
210	character-constant		0	81
210	enumeration-constant		0	89
210	floating-constant		0	94
210	identifier		0	133
210	integer-constant		0	100
210	sizeof		0	113
210	string-constant		0	116
210	~		0	122


338	!		0	66
338	&		0	67
338	(		0	68
338	)		0	358
338	*		0	69
338	+		0	70
338	++		0	71
338	-		0	72
338	--		0	73
338	character-constant		0	81
338	enumeration-constant		0	89
338	floating-constant		0	94
338	identifier		0	133
338	integer-constant		0	100
338	sizeof		0	113
338	string-constant		0	116
338	~		0	122


59	(		1	function-definition	7
59	*		1	function-definition	7
59	;		1	function-definition	7
59	_KULV_END_		1	function-definition	7
59	auto		1	function-definition	7
59	char		1	function-definition	7
59	const		1	function-definition	7
59	double		1	function-definition	7
59	extern		1	function-definition	7
59	float		1	function-definition	7
59	identifier		1	function-definition	7
59	int		1	function-definition	7
59	long		1	function-definition	7
59	register		1	function-definition	7
59	short		1	function-definition	7
59	signed		1	function-definition	7
59	static		1	function-definition	7
59	typedef		1	function-definition	7
59	unsigned		1	function-definition	7
59	void		1	function-definition	7
59	volatile		1	function-definition	7


187	!		0	66
187	&		0	67
187	(		0	68
187	*		0	69
187	+		0	70
187	++		0	71
187	-		0	72
187	--		0	73
187	character-constant		0	81
187	enumeration-constant		0	89
187	floating-constant		0	94
187	identifier		0	133
187	integer-constant		0	100
187	sizeof		0	113
187	string-constant		0	116
187	~		0	122


315	!		0	66
315	&		0	67
315	(		0	68
315	*		0	69
315	+		0	70
315	++		0	71
315	-		0	72
315	--		0	73
315	;		0	74
315	break		0	78
315	case		0	79
315	character-constant		0	81
315	continue		0	85
315	default		0	87
315	do		0	88
315	enumeration-constant		0	89
315	floating-constant		0	94
315	for		0	95
315	goto		0	96
315	identifier		0	97
315	if		0	98
315	integer-constant		0	100
315	return		0	110
315	sizeof		0	113
315	string-constant		0	116
315	switch		0	117
315	while		0	120
315	{		0	43
315	~		0	122


4	(		1	type-specifier	25
4	)		1	type-specifier	25
4	*		1	type-specifier	25
4	,		1	type-specifier	25
4	:		1	type-specifier	25
4	;		1	type-specifier	25
4	[		1	type-specifier	25
4	auto		1	type-specifier	25
4	char		1	type-specifier	25
4	const		1	type-specifier	25
4	double		1	type-specifier	25
4	extern		1	type-specifier	25
4	float		1	type-specifier	25
4	identifier		1	type-specifier	25
4	int		1	type-specifier	25
4	long		1	type-specifier	25
4	register		1	type-specifier	25
4	short		1	type-specifier	25
4	signed		1	type-specifier	25
4	static		1	type-specifier	25
4	typedef		1	type-specifier	25
4	unsigned		1	type-specifier	25
4	void		1	type-specifier	25
4	volatile		1	type-specifier	25


132	]		0	221


260	!		1	multiplicative-expression	185
260	!=		1	multiplicative-expression	185
260	%		1	multiplicative-expression	185
260	%=		1	multiplicative-expression	185
260	&		1	multiplicative-expression	185
260	&&		1	multiplicative-expression	185
260	&=		1	multiplicative-expression	185
260	(		1	multiplicative-expression	185
260	)		1	multiplicative-expression	185
260	*		1	multiplicative-expression	185
260	*=		1	multiplicative-expression	185
260	+		1	multiplicative-expression	185
260	++		1	multiplicative-expression	185
260	+=		1	multiplicative-expression	185
260	,		1	multiplicative-expression	185
260	-		1	multiplicative-expression	185
260	--		1	multiplicative-expression	185
260	-=		1	multiplicative-expression	185
260	->		1	multiplicative-expression	185
260	.		1	multiplicative-expression	185
260	/		1	multiplicative-expression	185
260	/=		1	multiplicative-expression	185
260	:		1	multiplicative-expression	185
260	;		1	multiplicative-expression	185
260	<		1	multiplicative-expression	185
260	<<		1	multiplicative-expression	185
260	<<=		1	multiplicative-expression	185
260	<=		1	multiplicative-expression	185
260	=		1	multiplicative-expression	185
260	==		1	multiplicative-expression	185
260	>		1	multiplicative-expression	185
260	>=		1	multiplicative-expression	185
260	>>		1	multiplicative-expression	185
260	>>=		1	multiplicative-expression	185
260	?		1	multiplicative-expression	185
260	[		1	multiplicative-expression	185
260	]		1	multiplicative-expression	185
260	^		1	multiplicative-expression	185
260	^=		1	multiplicative-expression	185
260	_KULV_END_		1	multiplicative-expression	185
260	auto		1	multiplicative-expression	185
260	break		1	multiplicative-expression	185
260	case		1	multiplicative-expression	185
260	char		1	multiplicative-expression	185
260	character-constant		1	multiplicative-expression	185
260	const		1	multiplicative-expression	185
260	continue		1	multiplicative-expression	185
260	default		1	multiplicative-expression	185
260	do		1	multiplicative-expression	185
260	double		1	multiplicative-expression	185
260	else		1	multiplicative-expression	185
260	enum		1	multiplicative-expression	185
260	enumeration-constant		1	multiplicative-expression	185
260	extern		1	multiplicative-expression	185
260	float		1	multiplicative-expression	185
260	floating-constant		1	multiplicative-expression	185
260	for		1	multiplicative-expression	185
260	goto		1	multiplicative-expression	185
260	identifier		1	multiplicative-expression	185
260	if		1	multiplicative-expression	185
260	int		1	multiplicative-expression	185
260	integer-constant		1	multiplicative-expression	185
260	long		1	multiplicative-expression	185
260	register		1	multiplicative-expression	185
260	return		1	multiplicative-expression	185
260	short		1	multiplicative-expression	185
260	signed		1	multiplicative-expression	185
260	sizeof		1	multiplicative-expression	185
260	static		1	multiplicative-expression	185
260	string-constant		1	multiplicative-expression	185
260	switch		1	multiplicative-expression	185
260	typedef		1	multiplicative-expression	185
260	unsigned		1	multiplicative-expression	185
260	void		1	multiplicative-expression	185
260	volatile		1	multiplicative-expression	185
260	while		1	multiplicative-expression	185
260	{		1	multiplicative-expression	185
260	|		1	multiplicative-expression	185
260	|=		1	multiplicative-expression	185
260	||		1	multiplicative-expression	185
260	}		1	multiplicative-expression	185
260	~		1	multiplicative-expression	185


109	!		1	equality-expression	170
109	!=		1	equality-expression	170
109	%		1	equality-expression	170
109	%=		1	equality-expression	170
109	&		1	equality-expression	170
109	&&		1	equality-expression	170
109	&=		1	equality-expression	170
109	(		1	equality-expression	170
109	)		1	equality-expression	170
109	*		1	equality-expression	170
109	*=		1	equality-expression	170
109	+		1	equality-expression	170
109	++		1	equality-expression	170
109	+=		1	equality-expression	170
109	,		1	equality-expression	170
109	-		1	equality-expression	170
109	--		1	equality-expression	170
109	-=		1	equality-expression	170
109	->		1	equality-expression	170
109	.		1	equality-expression	170
109	/		1	equality-expression	170
109	/=		1	equality-expression	170
109	:		1	equality-expression	170
109	;		1	equality-expression	170
109	<		0	184
109	<<		1	equality-expression	170
109	<<=		1	equality-expression	170
109	<=		0	185
109	=		1	equality-expression	170
109	==		1	equality-expression	170
109	>		0	186
109	>=		0	187
109	>>		1	equality-expression	170
109	>>=		1	equality-expression	170
109	?		1	equality-expression	170
109	[		1	equality-expression	170
109	]		1	equality-expression	170
109	^		1	equality-expression	170
109	^=		1	equality-expression	170
109	_KULV_END_		1	equality-expression	170
109	auto		1	equality-expression	170
109	break		1	equality-expression	170
109	case		1	equality-expression	170
109	char		1	equality-expression	170
109	character-constant		1	equality-expression	170
109	const		1	equality-expression	170
109	continue		1	equality-expression	170
109	default		1	equality-expression	170
109	do		1	equality-expression	170
109	double		1	equality-expression	170
109	else		1	equality-expression	170
109	enum		1	equality-expression	170
109	enumeration-constant		1	equality-expression	170
109	extern		1	equality-expression	170
109	float		1	equality-expression	170
109	floating-constant		1	equality-expression	170
109	for		1	equality-expression	170
109	goto		1	equality-expression	170
109	identifier		1	equality-expression	170
109	if		1	equality-expression	170
109	int		1	equality-expression	170
109	integer-constant		1	equality-expression	170
109	long		1	equality-expression	170
109	register		1	equality-expression	170
109	return		1	equality-expression	170
109	short		1	equality-expression	170
109	signed		1	equality-expression	170
109	sizeof		1	equality-expression	170
109	static		1	equality-expression	170
109	string-constant		1	equality-expression	170
109	switch		1	equality-expression	170
109	typedef		1	equality-expression	170
109	unsigned		1	equality-expression	170
109	void		1	equality-expression	170
109	volatile		1	equality-expression	170
109	while		1	equality-expression	170
109	{		1	equality-expression	170
109	|		1	equality-expression	170
109	|=		1	equality-expression	170
109	||		1	equality-expression	170
109	}		1	equality-expression	170
109	~		1	equality-expression	170


237	(		1	specifier-qualifier-list	50
237	)		1	specifier-qualifier-list	50
237	*		1	specifier-qualifier-list	50
237	:		1	specifier-qualifier-list	50
237	[		1	specifier-qualifier-list	50
237	identifier		1	specifier-qualifier-list	50


365	!		0	66
365	&		0	67
365	(		0	68
365	*		0	69
365	+		0	70
365	++		0	71
365	-		0	72
365	--		0	73
365	;		0	74
365	break		0	78
365	case		0	79
365	character-constant		0	81
365	continue		0	85
365	default		0	87
365	do		0	88
365	enumeration-constant		0	89
365	floating-constant		0	94
365	for		0	95
365	goto		0	96
365	identifier		0	97
365	if		0	98
365	integer-constant		0	100
365	return		0	110
365	sizeof		0	113
365	string-constant		0	116
365	switch		0	117
365	while		0	120
365	{		0	43
365	~		0	122
